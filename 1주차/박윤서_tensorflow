{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ff669753",
   "metadata": {},
   "source": [
    "### roc 곡선"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4287c698",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_true=[0,1,1,1,1,0,1,1,0,0]\n",
    "\n",
    "# 확률\n",
    "A_proba=[0.6,0.7,0.7,0.8,0.9,0.7,0.85,0.7,0.65,0.75]\n",
    "B_proba=[0.05,0.05,0.1,0.3,0.6,0.3,0.4,0.5,0.2,0.1]\n",
    "\n",
    "#완벽한 확률\n",
    "C_proba=[0,1,1,1,1,0,1,1,0,0]\n",
    "\n",
    "from sklearn.metrics import roc_curve, auc\n",
    "\n",
    "#auc값 저장\n",
    "fpr_A,tpr_A,thr_A=roc_curve(y_true, A_proba)\n",
    "fpr_B,tpr_B,thr_B=roc_curve(y_true, B_proba)\n",
    "fpr_C,tpr_C,thr_C=roc_curve(y_true, C_proba)\n",
    "\n",
    "auc_A=auc(fpr_A,tpr_A)\n",
    "auc_B=auc(fpr_B,tpr_B)\n",
    "auc_C=auc(fpr_C,tpr_C)\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.xlabel(\"False negative rate\")\n",
    "plt.ylabel(\"True negative rate\")\n",
    "plt.title(\"ROC Curve\")\n",
    "plt.plot(fpr_A,tpr_A,color='darkorange',lw=2,label='ROC curve (area=%0.2f)' % auc_A)\n",
    "plt.plot(fpr_B,tpr_B,color='darkorange',lw=2,label='ROC curve (area=%0.2f)' % auc_B)\n",
    "plt.plot(fpr_C,tpr_C,color='darkorange',lw=2,label='ROC curve (area=%0.2f)' % auc_C)\n",
    "plt.plot([0,1],[0,1],color='red',lw=2,linestyle='--')\n",
    "plt.legend(loc='lower right') #범례\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "61c7fb45",
   "metadata": {},
   "source": [
    "### 텐서\n",
    "\n",
    "0,1,2        : 스칼라     랭크0\n",
    "[1,2,3]      : 벡터         1\n",
    "[[1,2],[3,4]]: 행렬         2\n",
    "[,,,[,,],,,] : n차원 배열    n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7606547c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tf.Tensor(0, shape=(), dtype=int32)\n",
      "tf.Tensor(1, shape=(), dtype=int32)\n",
      "tf.Tensor(2, shape=(), dtype=int32)\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "\n",
    "#텐서 선언\n",
    "a=tf.constant(2) \n",
    "print(tf.rank(a))\n",
    "\n",
    "b=tf.constant([1,2]) \n",
    "print(tf.rank(b))\n",
    "\n",
    "c=tf.constant([[1,2],[3,4]]) \n",
    "print(tf.rank(c))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f0ec4dc0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5\n",
      "tf.Tensor(1, shape=(), dtype=int32)\n",
      "6\n",
      "1.5\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "import numpy as np\n",
    "\n",
    "a=tf.constant(3)\n",
    "b=tf.constant(2)\n",
    "\n",
    "#기본연산\n",
    "print(tf.add(a,b))\n",
    "print(tf.subtract(a,b))\n",
    "\n",
    "#넘파이 형태로 출력\n",
    "print(tf.multiply(a,b).numpy())\n",
    "print(tf.divide(a,b).numpy())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25ae21a0",
   "metadata": {},
   "source": [
    "from numpy to tensor, from tensor to numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "bbb49cb0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "numpy array :5.0, applying square with numpy : 25.0, convert_to_tensor : 25.0\n"
     ]
    }
   ],
   "source": [
    "c=tf.add(a,b).numpy()                  #tensor to numpy\n",
    "c_square=np.square(c,dtype=np.float32) #np의 square함수 적용\n",
    "c_tensor=tf.convert_to_tensor(c_square)#numpy to tensor\n",
    "\n",
    "#출력\n",
    "print('numpy array :%0.1f, applying square with numpy : %0.1f, convert_to_tensor : %0.1f' %(c, c_square, c_tensor))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d14ff847",
   "metadata": {},
   "outputs": [],
   "source": [
    "from tensorflow.math import sin, cos, tanh #수학관련 모듈\n",
    "from tensorflow.linalg import diag, svd, matrix_transpose"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f757f07",
   "metadata": {},
   "source": [
    "@tf.function : 그래프 생성"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a98c0c2b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tf.Tensor(4, shape=(), dtype=int32)\n"
     ]
    }
   ],
   "source": [
    "@tf.function\n",
    "def square_pos(x):\n",
    "    if x>0:\n",
    "        x= x*x\n",
    "    else:\n",
    "        x=x*-1\n",
    "    return x\n",
    "\n",
    "print(square_pos(tf.constant(2)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3443dab",
   "metadata": {},
   "source": [
    "# 신경망"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "aa9cfa22",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/500\n",
      "1/1 [==============================] - 0s 286ms/step - loss: 1.4290 - acc: 0.5000\n",
      "Epoch 2/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 1.3602 - acc: 0.5000\n",
      "Epoch 3/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 1.2956 - acc: 0.5000\n",
      "Epoch 4/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 1.2349 - acc: 0.5000\n",
      "Epoch 5/500\n",
      "1/1 [==============================] - 0s 15ms/step - loss: 1.1779 - acc: 0.5000\n",
      "Epoch 6/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 1.1242 - acc: 0.5000\n",
      "Epoch 7/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 1.0738 - acc: 0.5000\n",
      "Epoch 8/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 1.0264 - acc: 0.5000\n",
      "Epoch 9/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.9819 - acc: 0.5000\n",
      "Epoch 10/500\n",
      "1/1 [==============================] - 0s 3ms/step - loss: 0.9399 - acc: 0.5000\n",
      "Epoch 11/500\n",
      "1/1 [==============================] - 0s 3ms/step - loss: 0.9005 - acc: 0.5000\n",
      "Epoch 12/500\n",
      "1/1 [==============================] - 0s 3ms/step - loss: 0.8634 - acc: 0.5000\n",
      "Epoch 13/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.8284 - acc: 0.5000\n",
      "Epoch 14/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.7955 - acc: 0.5000\n",
      "Epoch 15/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.7646 - acc: 0.5000\n",
      "Epoch 16/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.7354 - acc: 0.5000\n",
      "Epoch 17/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.7079 - acc: 0.5000\n",
      "Epoch 18/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.6820 - acc: 0.5000\n",
      "Epoch 19/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.6576 - acc: 0.5000\n",
      "Epoch 20/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.6346 - acc: 0.5000\n",
      "Epoch 21/500\n",
      "1/1 [==============================] - 0s 11ms/step - loss: 0.6129 - acc: 0.5000\n",
      "Epoch 22/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.5925 - acc: 0.5000\n",
      "Epoch 23/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.5732 - acc: 0.5000\n",
      "Epoch 24/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.5549 - acc: 0.5000\n",
      "Epoch 25/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.5377 - acc: 0.5000\n",
      "Epoch 26/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.5215 - acc: 0.5000\n",
      "Epoch 27/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.5061 - acc: 0.5000\n",
      "Epoch 28/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.4916 - acc: 0.5000\n",
      "Epoch 29/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.4778 - acc: 0.5000\n",
      "Epoch 30/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.4648 - acc: 0.5000\n",
      "Epoch 31/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.4525 - acc: 0.7500\n",
      "Epoch 32/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.4409 - acc: 0.7500\n",
      "Epoch 33/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.4298 - acc: 0.7500\n",
      "Epoch 34/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.4193 - acc: 0.7500\n",
      "Epoch 35/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.4094 - acc: 0.7500\n",
      "Epoch 36/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.4000 - acc: 0.7500\n",
      "Epoch 37/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.3911 - acc: 0.7500\n",
      "Epoch 38/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.3826 - acc: 0.7500\n",
      "Epoch 39/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.3745 - acc: 0.7500\n",
      "Epoch 40/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.3668 - acc: 0.7500\n",
      "Epoch 41/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.3595 - acc: 0.7500\n",
      "Epoch 42/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.3525 - acc: 0.7500\n",
      "Epoch 43/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.3459 - acc: 0.7500\n",
      "Epoch 44/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.3396 - acc: 0.7500\n",
      "Epoch 45/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.3336 - acc: 0.7500\n",
      "Epoch 46/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.3278 - acc: 0.7500\n",
      "Epoch 47/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.3223 - acc: 0.7500\n",
      "Epoch 48/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.3170 - acc: 0.7500\n",
      "Epoch 49/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.3120 - acc: 0.7500\n",
      "Epoch 50/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.3072 - acc: 0.7500\n",
      "Epoch 51/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.3026 - acc: 0.7500\n",
      "Epoch 52/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2982 - acc: 0.7500\n",
      "Epoch 53/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2939 - acc: 0.7500\n",
      "Epoch 54/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.2898 - acc: 0.7500\n",
      "Epoch 55/500\n",
      "1/1 [==============================] - 0s 11ms/step - loss: 0.2859 - acc: 0.7500\n",
      "Epoch 56/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2822 - acc: 0.7500\n",
      "Epoch 57/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2785 - acc: 0.7500\n",
      "Epoch 58/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2750 - acc: 0.7500\n",
      "Epoch 59/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2717 - acc: 0.7500\n",
      "Epoch 60/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.2684 - acc: 0.7500\n",
      "Epoch 61/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2653 - acc: 0.7500\n",
      "Epoch 62/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2623 - acc: 0.7500\n",
      "Epoch 63/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2594 - acc: 0.7500\n",
      "Epoch 64/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2565 - acc: 0.7500\n",
      "Epoch 65/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2538 - acc: 0.7500\n",
      "Epoch 66/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2511 - acc: 0.7500\n",
      "Epoch 67/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.2486 - acc: 0.7500\n",
      "Epoch 68/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2461 - acc: 0.7500\n",
      "Epoch 69/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2436 - acc: 0.7500\n",
      "Epoch 70/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2413 - acc: 0.7500\n",
      "Epoch 71/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2390 - acc: 0.7500\n",
      "Epoch 72/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2368 - acc: 0.7500\n",
      "Epoch 73/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2346 - acc: 0.7500\n",
      "Epoch 74/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.2325 - acc: 0.7500\n",
      "Epoch 75/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2304 - acc: 0.7500\n",
      "Epoch 76/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2284 - acc: 0.7500\n",
      "Epoch 77/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2264 - acc: 0.7500\n",
      "Epoch 78/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2245 - acc: 0.7500\n",
      "Epoch 79/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2226 - acc: 0.7500\n",
      "Epoch 80/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2208 - acc: 0.7500\n",
      "Epoch 81/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2190 - acc: 0.7500\n",
      "Epoch 82/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2173 - acc: 0.7500\n",
      "Epoch 83/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.2155 - acc: 0.7500\n",
      "Epoch 84/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2139 - acc: 0.7500\n",
      "Epoch 85/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.2122 - acc: 0.7500\n",
      "Epoch 86/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2106 - acc: 0.7500\n",
      "Epoch 87/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2090 - acc: 0.7500\n",
      "Epoch 88/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2074 - acc: 0.7500\n",
      "Epoch 89/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2059 - acc: 0.7500\n",
      "Epoch 90/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2044 - acc: 0.7500\n",
      "Epoch 91/500\n",
      "1/1 [==============================] - 0s 3ms/step - loss: 0.2029 - acc: 0.7500\n",
      "Epoch 92/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2015 - acc: 0.7500\n",
      "Epoch 93/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2000 - acc: 0.7500\n",
      "Epoch 94/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1986 - acc: 0.7500\n",
      "Epoch 95/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1973 - acc: 0.7500\n",
      "Epoch 96/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1959 - acc: 0.7500\n",
      "Epoch 97/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1946 - acc: 0.7500\n",
      "Epoch 98/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1932 - acc: 0.7500\n",
      "Epoch 99/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1919 - acc: 0.7500\n",
      "Epoch 100/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1907 - acc: 0.7500\n",
      "Epoch 101/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.1894 - acc: 0.7500\n",
      "Epoch 102/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1881 - acc: 0.7500\n",
      "Epoch 103/500\n",
      "1/1 [==============================] - 0s 12ms/step - loss: 0.1869 - acc: 0.7500\n",
      "Epoch 104/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1857 - acc: 0.7500\n",
      "Epoch 105/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1845 - acc: 0.7500\n",
      "Epoch 106/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1833 - acc: 0.7500\n",
      "Epoch 107/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1822 - acc: 0.7500\n",
      "Epoch 108/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1810 - acc: 0.7500\n",
      "Epoch 109/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1799 - acc: 0.7500\n",
      "Epoch 110/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1787 - acc: 0.7500\n",
      "Epoch 111/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1776 - acc: 0.7500\n",
      "Epoch 112/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1765 - acc: 0.7500\n",
      "Epoch 113/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1755 - acc: 0.7500\n",
      "Epoch 114/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1744 - acc: 0.7500\n",
      "Epoch 115/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1733 - acc: 0.7500\n",
      "Epoch 116/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1723 - acc: 0.7500\n",
      "Epoch 117/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1712 - acc: 0.7500\n",
      "Epoch 118/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1702 - acc: 0.7500\n",
      "Epoch 119/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1692 - acc: 0.7500\n",
      "Epoch 120/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1682 - acc: 0.7500\n",
      "Epoch 121/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1672 - acc: 0.7500\n",
      "Epoch 122/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1663 - acc: 0.7500\n",
      "Epoch 123/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1653 - acc: 0.7500\n",
      "Epoch 124/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1643 - acc: 0.7500\n",
      "Epoch 125/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1634 - acc: 0.7500\n",
      "Epoch 126/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1625 - acc: 0.7500\n",
      "Epoch 127/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1615 - acc: 0.7500\n",
      "Epoch 128/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1606 - acc: 0.7500\n",
      "Epoch 129/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1597 - acc: 0.7500\n",
      "Epoch 130/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1588 - acc: 0.7500\n",
      "Epoch 131/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1579 - acc: 0.7500\n",
      "Epoch 132/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1570 - acc: 0.7500\n",
      "Epoch 133/500\n",
      "1/1 [==============================] - 0s 3ms/step - loss: 0.1562 - acc: 0.7500\n",
      "Epoch 134/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1553 - acc: 0.7500\n",
      "Epoch 135/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1545 - acc: 0.7500\n",
      "Epoch 136/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1536 - acc: 0.7500\n",
      "Epoch 137/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1528 - acc: 0.7500\n",
      "Epoch 138/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1520 - acc: 0.7500\n",
      "Epoch 139/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1511 - acc: 0.7500\n",
      "Epoch 140/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1503 - acc: 0.7500\n",
      "Epoch 141/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1495 - acc: 0.7500\n",
      "Epoch 142/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1487 - acc: 0.7500\n",
      "Epoch 143/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1480 - acc: 0.7500\n",
      "Epoch 144/500\n",
      "1/1 [==============================] - 0s 3ms/step - loss: 0.1472 - acc: 0.7500\n",
      "Epoch 145/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1464 - acc: 0.7500\n",
      "Epoch 146/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1456 - acc: 0.7500\n",
      "Epoch 147/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1449 - acc: 0.7500\n",
      "Epoch 148/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.1441 - acc: 0.7500\n",
      "Epoch 149/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1434 - acc: 0.7500\n",
      "Epoch 150/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1427 - acc: 0.7500\n",
      "Epoch 151/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1419 - acc: 0.7500\n",
      "Epoch 152/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1412 - acc: 0.7500\n",
      "Epoch 153/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1405 - acc: 0.7500\n",
      "Epoch 154/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1398 - acc: 0.7500\n",
      "Epoch 155/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1391 - acc: 0.7500\n",
      "Epoch 156/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1384 - acc: 0.7500\n",
      "Epoch 157/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1377 - acc: 0.7500\n",
      "Epoch 158/500\n",
      "1/1 [==============================] - 0s 3ms/step - loss: 0.1370 - acc: 0.7500\n",
      "Epoch 159/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1364 - acc: 0.7500\n",
      "Epoch 160/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1357 - acc: 0.7500\n",
      "Epoch 161/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1350 - acc: 0.7500\n",
      "Epoch 162/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1344 - acc: 0.7500\n",
      "Epoch 163/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1337 - acc: 0.7500\n",
      "Epoch 164/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1331 - acc: 0.7500\n",
      "Epoch 165/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1325 - acc: 0.7500\n",
      "Epoch 166/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1318 - acc: 0.7500\n",
      "Epoch 167/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1312 - acc: 0.7500\n",
      "Epoch 168/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1306 - acc: 0.7500\n",
      "Epoch 169/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1300 - acc: 0.7500\n",
      "Epoch 170/500\n",
      "1/1 [==============================] - 0s 11ms/step - loss: 0.1294 - acc: 0.7500\n",
      "Epoch 171/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1288 - acc: 0.7500\n",
      "Epoch 172/500\n",
      "1/1 [==============================] - 0s 3ms/step - loss: 0.1282 - acc: 0.7500\n",
      "Epoch 173/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1276 - acc: 0.7500\n",
      "Epoch 174/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1270 - acc: 0.7500\n",
      "Epoch 175/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1264 - acc: 0.7500\n",
      "Epoch 176/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1258 - acc: 0.7500\n",
      "Epoch 177/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1253 - acc: 0.7500\n",
      "Epoch 178/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1247 - acc: 0.7500\n",
      "Epoch 179/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1242 - acc: 0.7500\n",
      "Epoch 180/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1236 - acc: 0.7500\n",
      "Epoch 181/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1231 - acc: 0.7500\n",
      "Epoch 182/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1225 - acc: 0.7500\n",
      "Epoch 183/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1220 - acc: 0.7500\n",
      "Epoch 184/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1214 - acc: 0.7500\n",
      "Epoch 185/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1209 - acc: 0.7500\n",
      "Epoch 186/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1204 - acc: 0.7500\n",
      "Epoch 187/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1199 - acc: 0.7500\n",
      "Epoch 188/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1194 - acc: 0.7500\n",
      "Epoch 189/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1189 - acc: 0.7500\n",
      "Epoch 190/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1184 - acc: 0.7500\n",
      "Epoch 191/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1179 - acc: 0.7500\n",
      "Epoch 192/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1174 - acc: 1.0000\n",
      "Epoch 193/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1169 - acc: 1.0000\n",
      "Epoch 194/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1164 - acc: 1.0000\n",
      "Epoch 195/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1159 - acc: 1.0000\n",
      "Epoch 196/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1154 - acc: 1.0000\n",
      "Epoch 197/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.1150 - acc: 1.0000\n",
      "Epoch 198/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1145 - acc: 1.0000\n",
      "Epoch 199/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1140 - acc: 1.0000\n",
      "Epoch 200/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1136 - acc: 1.0000\n",
      "Epoch 201/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1131 - acc: 1.0000\n",
      "Epoch 202/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.1127 - acc: 1.0000\n",
      "Epoch 203/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1122 - acc: 1.0000\n",
      "Epoch 204/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1118 - acc: 1.0000\n",
      "Epoch 205/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1114 - acc: 1.0000\n",
      "Epoch 206/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1109 - acc: 1.0000\n",
      "Epoch 207/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1105 - acc: 1.0000\n",
      "Epoch 208/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1101 - acc: 1.0000\n",
      "Epoch 209/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.1096 - acc: 1.0000\n",
      "Epoch 210/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1092 - acc: 1.0000\n",
      "Epoch 211/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1088 - acc: 1.0000\n",
      "Epoch 212/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1084 - acc: 1.0000\n",
      "Epoch 213/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1080 - acc: 1.0000\n",
      "Epoch 214/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1076 - acc: 1.0000\n",
      "Epoch 215/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1072 - acc: 1.0000\n",
      "Epoch 216/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1068 - acc: 1.0000\n",
      "Epoch 217/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1064 - acc: 1.0000\n",
      "Epoch 218/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1060 - acc: 1.0000\n",
      "Epoch 219/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1056 - acc: 1.0000\n",
      "Epoch 220/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1053 - acc: 1.0000\n",
      "Epoch 221/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1049 - acc: 1.0000\n",
      "Epoch 222/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1045 - acc: 1.0000\n",
      "Epoch 223/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1041 - acc: 1.0000\n",
      "Epoch 224/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1038 - acc: 1.0000\n",
      "Epoch 225/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1034 - acc: 1.0000\n",
      "Epoch 226/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1030 - acc: 1.0000\n",
      "Epoch 227/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1027 - acc: 1.0000\n",
      "Epoch 228/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1023 - acc: 1.0000\n",
      "Epoch 229/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1020 - acc: 1.0000\n",
      "Epoch 230/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1016 - acc: 1.0000\n",
      "Epoch 231/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1013 - acc: 1.0000\n",
      "Epoch 232/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1009 - acc: 1.0000\n",
      "Epoch 233/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1006 - acc: 1.0000\n",
      "Epoch 234/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.1003 - acc: 1.0000\n",
      "Epoch 235/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0999 - acc: 1.0000\n",
      "Epoch 236/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0996 - acc: 1.0000\n",
      "Epoch 237/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.0993 - acc: 1.0000\n",
      "Epoch 238/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0990 - acc: 1.0000\n",
      "Epoch 239/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.0986 - acc: 1.0000\n",
      "Epoch 240/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0983 - acc: 1.0000\n",
      "Epoch 241/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0980 - acc: 1.0000\n",
      "Epoch 242/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0977 - acc: 1.0000\n",
      "Epoch 243/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0974 - acc: 1.0000\n",
      "Epoch 244/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0971 - acc: 1.0000\n",
      "Epoch 245/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0968 - acc: 1.0000\n",
      "Epoch 246/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0965 - acc: 1.0000\n",
      "Epoch 247/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0962 - acc: 1.0000\n",
      "Epoch 248/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0959 - acc: 1.0000\n",
      "Epoch 249/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0956 - acc: 1.0000\n",
      "Epoch 250/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0953 - acc: 1.0000\n",
      "Epoch 251/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0950 - acc: 1.0000\n",
      "Epoch 252/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0947 - acc: 1.0000\n",
      "Epoch 253/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0945 - acc: 1.0000\n",
      "Epoch 254/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0942 - acc: 1.0000\n",
      "Epoch 255/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0939 - acc: 1.0000\n",
      "Epoch 256/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0936 - acc: 1.0000\n",
      "Epoch 257/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0934 - acc: 1.0000\n",
      "Epoch 258/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0931 - acc: 1.0000\n",
      "Epoch 259/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0928 - acc: 1.0000\n",
      "Epoch 260/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0926 - acc: 1.0000\n",
      "Epoch 261/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0923 - acc: 1.0000\n",
      "Epoch 262/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.0920 - acc: 1.0000\n",
      "Epoch 263/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0918 - acc: 1.0000\n",
      "Epoch 264/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0915 - acc: 1.0000\n",
      "Epoch 265/500\n",
      "1/1 [==============================] - 0s 3ms/step - loss: 0.0913 - acc: 1.0000\n",
      "Epoch 266/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0910 - acc: 1.0000\n",
      "Epoch 267/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0908 - acc: 1.0000\n",
      "Epoch 268/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0905 - acc: 1.0000\n",
      "Epoch 269/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0903 - acc: 1.0000\n",
      "Epoch 270/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0900 - acc: 1.0000\n",
      "Epoch 271/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0898 - acc: 1.0000\n",
      "Epoch 272/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0896 - acc: 1.0000\n",
      "Epoch 273/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0893 - acc: 1.0000\n",
      "Epoch 274/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0891 - acc: 1.0000\n",
      "Epoch 275/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0889 - acc: 1.0000\n",
      "Epoch 276/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0886 - acc: 1.0000\n",
      "Epoch 277/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0884 - acc: 1.0000\n",
      "Epoch 278/500\n",
      "1/1 [==============================] - 0s 12ms/step - loss: 0.0882 - acc: 1.0000\n",
      "Epoch 279/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0880 - acc: 1.0000\n",
      "Epoch 280/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.0878 - acc: 1.0000\n",
      "Epoch 281/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0875 - acc: 1.0000\n",
      "Epoch 282/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.0873 - acc: 1.0000\n",
      "Epoch 283/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0871 - acc: 1.0000\n",
      "Epoch 284/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0869 - acc: 1.0000\n",
      "Epoch 285/500\n",
      "1/1 [==============================] - 0s 12ms/step - loss: 0.0867 - acc: 1.0000\n",
      "Epoch 286/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0865 - acc: 1.0000\n",
      "Epoch 287/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0863 - acc: 1.0000\n",
      "Epoch 288/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0861 - acc: 1.0000\n",
      "Epoch 289/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0859 - acc: 1.0000\n",
      "Epoch 290/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0857 - acc: 1.0000\n",
      "Epoch 291/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0855 - acc: 1.0000\n",
      "Epoch 292/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0853 - acc: 1.0000\n",
      "Epoch 293/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0851 - acc: 1.0000\n",
      "Epoch 294/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0849 - acc: 1.0000\n",
      "Epoch 295/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0847 - acc: 1.0000\n",
      "Epoch 296/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0845 - acc: 1.0000\n",
      "Epoch 297/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0843 - acc: 1.0000\n",
      "Epoch 298/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0841 - acc: 1.0000\n",
      "Epoch 299/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0839 - acc: 1.0000\n",
      "Epoch 300/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0837 - acc: 1.0000\n",
      "Epoch 301/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0836 - acc: 1.0000\n",
      "Epoch 302/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0834 - acc: 1.0000\n",
      "Epoch 303/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0832 - acc: 1.0000\n",
      "Epoch 304/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0830 - acc: 1.0000\n",
      "Epoch 305/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0828 - acc: 1.0000\n",
      "Epoch 306/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0827 - acc: 1.0000\n",
      "Epoch 307/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0825 - acc: 1.0000\n",
      "Epoch 308/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0823 - acc: 1.0000\n",
      "Epoch 309/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0822 - acc: 1.0000\n",
      "Epoch 310/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0820 - acc: 1.0000\n",
      "Epoch 311/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0818 - acc: 1.0000\n",
      "Epoch 312/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0817 - acc: 1.0000\n",
      "Epoch 313/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0815 - acc: 1.0000\n",
      "Epoch 314/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0813 - acc: 1.0000\n",
      "Epoch 315/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0812 - acc: 1.0000\n",
      "Epoch 316/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.0810 - acc: 1.0000\n",
      "Epoch 317/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0809 - acc: 1.0000\n",
      "Epoch 318/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0807 - acc: 1.0000\n",
      "Epoch 319/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0805 - acc: 1.0000\n",
      "Epoch 320/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.0804 - acc: 1.0000\n",
      "Epoch 321/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0802 - acc: 1.0000\n",
      "Epoch 322/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0801 - acc: 1.0000\n",
      "Epoch 323/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0799 - acc: 1.0000\n",
      "Epoch 324/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0798 - acc: 1.0000\n",
      "Epoch 325/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0796 - acc: 1.0000\n",
      "Epoch 326/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0795 - acc: 1.0000\n",
      "Epoch 327/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0794 - acc: 1.0000\n",
      "Epoch 328/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0792 - acc: 1.0000\n",
      "Epoch 329/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0791 - acc: 1.0000\n",
      "Epoch 330/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0789 - acc: 1.0000\n",
      "Epoch 331/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0788 - acc: 1.0000\n",
      "Epoch 332/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0787 - acc: 1.0000\n",
      "Epoch 333/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0785 - acc: 1.0000\n",
      "Epoch 334/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0784 - acc: 1.0000\n",
      "Epoch 335/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0782 - acc: 1.0000\n",
      "Epoch 336/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0781 - acc: 1.0000\n",
      "Epoch 337/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0780 - acc: 1.0000\n",
      "Epoch 338/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0778 - acc: 1.0000\n",
      "Epoch 339/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0777 - acc: 1.0000\n",
      "Epoch 340/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0776 - acc: 1.0000\n",
      "Epoch 341/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0775 - acc: 1.0000\n",
      "Epoch 342/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0773 - acc: 1.0000\n",
      "Epoch 343/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0772 - acc: 1.0000\n",
      "Epoch 344/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0771 - acc: 1.0000\n",
      "Epoch 345/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0770 - acc: 1.0000\n",
      "Epoch 346/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0768 - acc: 1.0000\n",
      "Epoch 347/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0767 - acc: 1.0000\n",
      "Epoch 348/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.0766 - acc: 1.0000\n",
      "Epoch 349/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0765 - acc: 1.0000\n",
      "Epoch 350/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0764 - acc: 1.0000\n",
      "Epoch 351/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0762 - acc: 1.0000\n",
      "Epoch 352/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0761 - acc: 1.0000\n",
      "Epoch 353/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0760 - acc: 1.0000\n",
      "Epoch 354/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0759 - acc: 1.0000\n",
      "Epoch 355/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0758 - acc: 1.0000\n",
      "Epoch 356/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0757 - acc: 1.0000\n",
      "Epoch 357/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0756 - acc: 1.0000\n",
      "Epoch 358/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0755 - acc: 1.0000\n",
      "Epoch 359/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0754 - acc: 1.0000\n",
      "Epoch 360/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0752 - acc: 1.0000\n",
      "Epoch 361/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0751 - acc: 1.0000\n",
      "Epoch 362/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0750 - acc: 1.0000\n",
      "Epoch 363/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0749 - acc: 1.0000\n",
      "Epoch 364/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0748 - acc: 1.0000\n",
      "Epoch 365/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0747 - acc: 1.0000\n",
      "Epoch 366/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0746 - acc: 1.0000\n",
      "Epoch 367/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0745 - acc: 1.0000\n",
      "Epoch 368/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0744 - acc: 1.0000\n",
      "Epoch 369/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0743 - acc: 1.0000\n",
      "Epoch 370/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0742 - acc: 1.0000\n",
      "Epoch 371/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0741 - acc: 1.0000\n",
      "Epoch 372/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0740 - acc: 1.0000\n",
      "Epoch 373/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0739 - acc: 1.0000\n",
      "Epoch 374/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0738 - acc: 1.0000\n",
      "Epoch 375/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0737 - acc: 1.0000\n",
      "Epoch 376/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0736 - acc: 1.0000\n",
      "Epoch 377/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0736 - acc: 1.0000\n",
      "Epoch 378/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0735 - acc: 1.0000\n",
      "Epoch 379/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0734 - acc: 1.0000\n",
      "Epoch 380/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0733 - acc: 1.0000\n",
      "Epoch 381/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0732 - acc: 1.0000\n",
      "Epoch 382/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0731 - acc: 1.0000\n",
      "Epoch 383/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0730 - acc: 1.0000\n",
      "Epoch 384/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0729 - acc: 1.0000\n",
      "Epoch 385/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0728 - acc: 1.0000\n",
      "Epoch 386/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0728 - acc: 1.0000\n",
      "Epoch 387/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0727 - acc: 1.0000\n",
      "Epoch 388/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.0726 - acc: 1.0000\n",
      "Epoch 389/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0725 - acc: 1.0000\n",
      "Epoch 390/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0724 - acc: 1.0000\n",
      "Epoch 391/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0723 - acc: 1.0000\n",
      "Epoch 392/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0723 - acc: 1.0000\n",
      "Epoch 393/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0722 - acc: 1.0000\n",
      "Epoch 394/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0721 - acc: 1.0000\n",
      "Epoch 395/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0720 - acc: 1.0000\n",
      "Epoch 396/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0719 - acc: 1.0000\n",
      "Epoch 397/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0719 - acc: 1.0000\n",
      "Epoch 398/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0718 - acc: 1.0000\n",
      "Epoch 399/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0717 - acc: 1.0000\n",
      "Epoch 400/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0716 - acc: 1.0000\n",
      "Epoch 401/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0716 - acc: 1.0000\n",
      "Epoch 402/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0715 - acc: 1.0000\n",
      "Epoch 403/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0714 - acc: 1.0000\n",
      "Epoch 404/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0713 - acc: 1.0000\n",
      "Epoch 405/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0713 - acc: 1.0000\n",
      "Epoch 406/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0712 - acc: 1.0000\n",
      "Epoch 407/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0711 - acc: 1.0000\n",
      "Epoch 408/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0710 - acc: 1.0000\n",
      "Epoch 409/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0710 - acc: 1.0000\n",
      "Epoch 410/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0709 - acc: 1.0000\n",
      "Epoch 411/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0708 - acc: 1.0000\n",
      "Epoch 412/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0708 - acc: 1.0000\n",
      "Epoch 413/500\n",
      "1/1 [==============================] - 0s 11ms/step - loss: 0.0707 - acc: 1.0000\n",
      "Epoch 414/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0706 - acc: 1.0000\n",
      "Epoch 415/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0706 - acc: 1.0000\n",
      "Epoch 416/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0705 - acc: 1.0000\n",
      "Epoch 417/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0704 - acc: 1.0000\n",
      "Epoch 418/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0704 - acc: 1.0000\n",
      "Epoch 419/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0703 - acc: 1.0000\n",
      "Epoch 420/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0702 - acc: 1.0000\n",
      "Epoch 421/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0702 - acc: 1.0000\n",
      "Epoch 422/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0701 - acc: 1.0000\n",
      "Epoch 423/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0701 - acc: 1.0000\n",
      "Epoch 424/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0700 - acc: 1.0000\n",
      "Epoch 425/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0699 - acc: 1.0000\n",
      "Epoch 426/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0699 - acc: 1.0000\n",
      "Epoch 427/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0698 - acc: 1.0000\n",
      "Epoch 428/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0698 - acc: 1.0000\n",
      "Epoch 429/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0697 - acc: 1.0000\n",
      "Epoch 430/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0696 - acc: 1.0000\n",
      "Epoch 431/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0696 - acc: 1.0000\n",
      "Epoch 432/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0695 - acc: 1.0000\n",
      "Epoch 433/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0695 - acc: 1.0000\n",
      "Epoch 434/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0694 - acc: 1.0000\n",
      "Epoch 435/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0693 - acc: 1.0000\n",
      "Epoch 436/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0693 - acc: 1.0000\n",
      "Epoch 437/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0692 - acc: 1.0000\n",
      "Epoch 438/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0692 - acc: 1.0000\n",
      "Epoch 439/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0691 - acc: 1.0000\n",
      "Epoch 440/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0691 - acc: 1.0000\n",
      "Epoch 441/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0690 - acc: 1.0000\n",
      "Epoch 442/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0690 - acc: 1.0000\n",
      "Epoch 443/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0689 - acc: 1.0000\n",
      "Epoch 444/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0689 - acc: 1.0000\n",
      "Epoch 445/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0688 - acc: 1.0000\n",
      "Epoch 446/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0688 - acc: 1.0000\n",
      "Epoch 447/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0687 - acc: 1.0000\n",
      "Epoch 448/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0687 - acc: 1.0000\n",
      "Epoch 449/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0686 - acc: 1.0000\n",
      "Epoch 450/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0686 - acc: 1.0000\n",
      "Epoch 451/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0685 - acc: 1.0000\n",
      "Epoch 452/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0685 - acc: 1.0000\n",
      "Epoch 453/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0684 - acc: 1.0000\n",
      "Epoch 454/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0684 - acc: 1.0000\n",
      "Epoch 455/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0683 - acc: 1.0000\n",
      "Epoch 456/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0683 - acc: 1.0000\n",
      "Epoch 457/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0682 - acc: 1.0000\n",
      "Epoch 458/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0682 - acc: 1.0000\n",
      "Epoch 459/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0681 - acc: 1.0000\n",
      "Epoch 460/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0681 - acc: 1.0000\n",
      "Epoch 461/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0680 - acc: 1.0000\n",
      "Epoch 462/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0680 - acc: 1.0000\n",
      "Epoch 463/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0680 - acc: 1.0000\n",
      "Epoch 464/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0679 - acc: 1.0000\n",
      "Epoch 465/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.0679 - acc: 1.0000\n",
      "Epoch 466/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0678 - acc: 1.0000\n",
      "Epoch 467/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0678 - acc: 1.0000\n",
      "Epoch 468/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.0677 - acc: 1.0000\n",
      "Epoch 469/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0677 - acc: 1.0000\n",
      "Epoch 470/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0677 - acc: 1.0000\n",
      "Epoch 471/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0676 - acc: 1.0000\n",
      "Epoch 472/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0676 - acc: 1.0000\n",
      "Epoch 473/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0675 - acc: 1.0000\n",
      "Epoch 474/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0675 - acc: 1.0000\n",
      "Epoch 475/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0675 - acc: 1.0000\n",
      "Epoch 476/500\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.0674 - acc: 1.0000\n",
      "Epoch 477/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0674 - acc: 1.0000\n",
      "Epoch 478/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0673 - acc: 1.0000\n",
      "Epoch 479/500\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.0673 - acc: 1.0000\n",
      "Epoch 480/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0673 - acc: 1.0000\n",
      "Epoch 481/500\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.0672 - acc: 1.0000\n",
      "Epoch 482/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0672 - acc: 1.0000\n",
      "Epoch 483/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0671 - acc: 1.0000\n",
      "Epoch 484/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0671 - acc: 1.0000\n",
      "Epoch 485/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0671 - acc: 1.0000\n",
      "Epoch 486/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0670 - acc: 1.0000\n",
      "Epoch 487/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0670 - acc: 1.0000\n",
      "Epoch 488/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0670 - acc: 1.0000\n",
      "Epoch 489/500\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.0669 - acc: 1.0000\n",
      "Epoch 490/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0669 - acc: 1.0000\n",
      "Epoch 491/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0669 - acc: 1.0000\n",
      "Epoch 492/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0668 - acc: 1.0000\n",
      "Epoch 493/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0668 - acc: 1.0000\n",
      "Epoch 494/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0668 - acc: 1.0000\n",
      "Epoch 495/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0667 - acc: 1.0000\n",
      "Epoch 496/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0667 - acc: 1.0000\n",
      "Epoch 497/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0667 - acc: 1.0000\n",
      "Epoch 498/500\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.0666 - acc: 1.0000\n",
      "Epoch 499/500\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.0666 - acc: 1.0000\n",
      "Epoch 500/500\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.0666 - acc: 1.0000\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x152223f40>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#단층 퍼셉트론- OR게이트\n",
    "\n",
    "import tensorflow as tf\n",
    "tf.random.set_seed(777)\n",
    "\n",
    "import numpy as np\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "from tensorflow.keras.optimizers import SGD\n",
    "from tensorflow.keras.losses import mse\n",
    "\n",
    "#데이터 준비하기\n",
    "x=np.array([[0,0],[1,0],[0,1],[1,1]])\n",
    "y=np.array([[0],[1],[1],[1]])\n",
    "\n",
    "#모델 구성하기\n",
    "model=Sequential()\n",
    "\n",
    "#단층 퍼셉트론 구성\n",
    "model.add(Dense(1, input_shape=(2, ), activation='linear'))\n",
    "\n",
    "#모델 준비\n",
    "model.compile(optimizer=SGD(),\n",
    "             loss=mse,\n",
    "             metrics=['acc'])  #list 형태로 평가지표 전달\n",
    "\n",
    "#학습시키기\n",
    "model.fit(x,y,epochs=500)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "4f12a726",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([[0.49431452],\n",
       "        [0.37552658]], dtype=float32),\n",
       " array([0.3271933], dtype=float32)]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.get_weights()\n",
    "#가중치 2개 (x1,x2)\n",
    "#편향"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0de0e873",
   "metadata": {},
   "source": [
    "## 다층 퍼셉트론\n",
    "\n",
    "퍼셉트론에서 출력값은 입력값과 가중치를 곱하여 모두 더한 것\n",
    "다층일 경우 벡터를 사용해야함."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5b17bf48",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x와 w의 벡터 내적의 결과 크기 :(10, 3)\n"
     ]
    }
   ],
   "source": [
    "#벡터의 내적\n",
    "import tensorflow as tf\n",
    "\n",
    "x=tf.random.uniform((10,5)) #10*5짜리 난수 생성\n",
    "w=tf.random.uniform((5,3))\n",
    "d=tf.matmul(x,w)\n",
    "\n",
    "print(f'x와 w의 벡터 내적의 결과 크기 :{d.shape}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "72bac325",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-01-29 14:53:43.417547: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "1/1 [==============================] - 1s 594ms/step - loss: 0.3054 - acc: 0.2500\n",
      "Epoch 2/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2966 - acc: 0.0000e+00\n",
      "Epoch 3/100\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2907 - acc: 0.0000e+00\n",
      "Epoch 4/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2858 - acc: 0.0000e+00\n",
      "Epoch 5/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2816 - acc: 0.0000e+00\n",
      "Epoch 6/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.2777 - acc: 0.0000e+00\n",
      "Epoch 7/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.2742 - acc: 0.0000e+00\n",
      "Epoch 8/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.2709 - acc: 0.0000e+00\n",
      "Epoch 9/100\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.2678 - acc: 0.2500\n",
      "Epoch 10/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2649 - acc: 0.2500\n",
      "Epoch 11/100\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2622 - acc: 0.2500\n",
      "Epoch 12/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2595 - acc: 0.2500\n",
      "Epoch 13/100\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2569 - acc: 0.2500\n",
      "Epoch 14/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2544 - acc: 0.5000\n",
      "Epoch 15/100\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2520 - acc: 0.5000\n",
      "Epoch 16/100\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2496 - acc: 0.5000\n",
      "Epoch 17/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2473 - acc: 0.5000\n",
      "Epoch 18/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2450 - acc: 0.5000\n",
      "Epoch 19/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2429 - acc: 0.5000\n",
      "Epoch 20/100\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.2407 - acc: 0.5000\n",
      "Epoch 21/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.2385 - acc: 0.5000\n",
      "Epoch 22/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2364 - acc: 0.5000\n",
      "Epoch 23/100\n",
      "1/1 [==============================] - 0s 12ms/step - loss: 0.2344 - acc: 0.5000\n",
      "Epoch 24/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.2324 - acc: 0.5000\n",
      "Epoch 25/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2304 - acc: 0.5000\n",
      "Epoch 26/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2284 - acc: 0.5000\n",
      "Epoch 27/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2265 - acc: 0.7500\n",
      "Epoch 28/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2246 - acc: 0.7500\n",
      "Epoch 29/100\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.2227 - acc: 0.7500\n",
      "Epoch 30/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2209 - acc: 0.7500\n",
      "Epoch 31/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2191 - acc: 0.7500\n",
      "Epoch 32/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.2173 - acc: 0.7500\n",
      "Epoch 33/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.2155 - acc: 0.7500\n",
      "Epoch 34/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2138 - acc: 0.7500\n",
      "Epoch 35/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2121 - acc: 0.7500\n",
      "Epoch 36/100\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.2104 - acc: 0.7500\n",
      "Epoch 37/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2087 - acc: 0.7500\n",
      "Epoch 38/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2071 - acc: 0.7500\n",
      "Epoch 39/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2055 - acc: 0.7500\n",
      "Epoch 40/100\n",
      "1/1 [==============================] - 0s 13ms/step - loss: 0.2039 - acc: 0.7500\n",
      "Epoch 41/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.2024 - acc: 0.7500\n",
      "Epoch 42/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.2009 - acc: 0.7500\n",
      "Epoch 43/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1993 - acc: 0.7500\n",
      "Epoch 44/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1979 - acc: 0.7500\n",
      "Epoch 45/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1965 - acc: 0.7500\n",
      "Epoch 46/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1950 - acc: 0.7500\n",
      "Epoch 47/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1935 - acc: 0.7500\n",
      "Epoch 48/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1921 - acc: 0.7500\n",
      "Epoch 49/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1908 - acc: 0.7500\n",
      "Epoch 50/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1895 - acc: 0.7500\n",
      "Epoch 51/100\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.1882 - acc: 0.7500\n",
      "Epoch 52/100\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.1869 - acc: 0.7500\n",
      "Epoch 53/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1856 - acc: 0.7500\n",
      "Epoch 54/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1844 - acc: 0.7500\n",
      "Epoch 55/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.1832 - acc: 0.7500\n",
      "Epoch 56/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1820 - acc: 0.7500\n",
      "Epoch 57/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1808 - acc: 0.7500\n",
      "Epoch 58/100\n",
      "1/1 [==============================] - 0s 13ms/step - loss: 0.1796 - acc: 0.7500\n",
      "Epoch 59/100\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1785 - acc: 0.7500\n",
      "Epoch 60/100\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1774 - acc: 0.7500\n",
      "Epoch 61/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1763 - acc: 0.7500\n",
      "Epoch 62/100\n",
      "1/1 [==============================] - 0s 10ms/step - loss: 0.1751 - acc: 0.7500\n",
      "Epoch 63/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1740 - acc: 0.7500\n",
      "Epoch 64/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1729 - acc: 0.7500\n",
      "Epoch 65/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.1719 - acc: 0.7500\n",
      "Epoch 66/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1708 - acc: 0.7500\n",
      "Epoch 67/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1697 - acc: 0.7500\n",
      "Epoch 68/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1687 - acc: 0.7500\n",
      "Epoch 69/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1676 - acc: 0.7500\n",
      "Epoch 70/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1666 - acc: 0.7500\n",
      "Epoch 71/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1656 - acc: 0.7500\n",
      "Epoch 72/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1646 - acc: 0.7500\n",
      "Epoch 73/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1636 - acc: 0.7500\n",
      "Epoch 74/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1627 - acc: 0.7500\n",
      "Epoch 75/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.1617 - acc: 0.7500\n",
      "Epoch 76/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1608 - acc: 0.7500\n",
      "Epoch 77/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1598 - acc: 0.7500\n",
      "Epoch 78/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1589 - acc: 0.7500\n",
      "Epoch 79/100\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1580 - acc: 0.7500\n",
      "Epoch 80/100\n",
      "1/1 [==============================] - 0s 9ms/step - loss: 0.1571 - acc: 0.7500\n",
      "Epoch 81/100\n",
      "1/1 [==============================] - 0s 11ms/step - loss: 0.1562 - acc: 0.7500\n",
      "Epoch 82/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1554 - acc: 0.7500\n",
      "Epoch 83/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1545 - acc: 0.7500\n",
      "Epoch 84/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1536 - acc: 0.7500\n",
      "Epoch 85/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1528 - acc: 0.7500\n",
      "Epoch 86/100\n",
      "1/1 [==============================] - 0s 4ms/step - loss: 0.1520 - acc: 0.7500\n",
      "Epoch 87/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1512 - acc: 0.7500\n",
      "Epoch 88/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1504 - acc: 0.7500\n",
      "Epoch 89/100\n",
      "1/1 [==============================] - 0s 5ms/step - loss: 0.1496 - acc: 0.7500\n",
      "Epoch 90/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1488 - acc: 0.7500\n",
      "Epoch 91/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1481 - acc: 0.7500\n",
      "Epoch 92/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1473 - acc: 0.7500\n",
      "Epoch 93/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1466 - acc: 0.7500\n",
      "Epoch 94/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1458 - acc: 0.7500\n",
      "Epoch 95/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1451 - acc: 0.7500\n",
      "Epoch 96/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1444 - acc: 0.7500\n",
      "Epoch 97/100\n",
      "1/1 [==============================] - 0s 8ms/step - loss: 0.1437 - acc: 0.7500\n",
      "Epoch 98/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1430 - acc: 0.7500\n",
      "Epoch 99/100\n",
      "1/1 [==============================] - 0s 6ms/step - loss: 0.1423 - acc: 0.7500\n",
      "Epoch 100/100\n",
      "1/1 [==============================] - 0s 7ms/step - loss: 0.1416 - acc: 0.7500\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x144681c40>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#다층 퍼셉트론- XOR게이트\n",
    "import tensorflow as tf\n",
    "tf.random.set_seed(777)\n",
    "\n",
    "import numpy as np\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "from tensorflow.keras.optimizers import RMSprop\n",
    "from tensorflow.keras.losses import mse\n",
    "\n",
    "#데이터 준비하기\n",
    "x=np.array([[0,0],[1,0],[0,1],[1,1]])\n",
    "y=np.array([[0],[1],[1],[1]])\n",
    "\n",
    "#모델 구성하기\n",
    "model=Sequential()\n",
    "model.add(Dense(32, input_shape=(2, ), activation='relu')) #32개의 퍼셉트론, 비선형활성화 함수 : 시그모이드, 하이퍼볼릭 탄젠트, ReLU\n",
    "#단층 퍼셉트론 구성\n",
    "model.add(Dense(1,activation='sigmoid'))\n",
    "\n",
    "#모델 준비\n",
    "model.compile(optimizer=RMSprop(),\n",
    "             loss=mse,\n",
    "             metrics=['acc'])\n",
    "\n",
    "#학습시키기\n",
    "model.fit(x,y,epochs=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "267df0a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#*활성화 함수\n",
    "import math\n",
    "\n",
    "#시그모이드\n",
    "def sigmoid(x):\n",
    "    return 1/ (1-np.exp(-x))\n",
    "\n",
    "#하이퍼볼릭 탄젠트\n",
    "def tanh(x):\n",
    "    return list(map(lambda x : math.tanh(x),x))\n",
    "\n",
    "#relu함수\n",
    "def relu(x):\n",
    "    result=[]\n",
    "    for ele in x:\n",
    "        if(ele <=0):\n",
    "            result.append(0)\n",
    "        else:\n",
    "            result.append(ele)\n",
    "    \n",
    "    return result\n",
    "\n",
    "#시그모이드 함수\n",
    "x=np.linspace(-4,4,100)\n",
    "plt.plot(x,sigmoid(x))\n",
    "\n",
    "#하이퍼볼릭 함수\n",
    "x=np.linspace(-4,4,100)\n",
    "plt.plot(x,tanh(x))\n",
    "plt.show()\n",
    "\n",
    "#relu 함수\n",
    "x=np.linspace(-4,4,100)\n",
    "plt.plot(x,relu(x))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e37af5ee",
   "metadata": {},
   "source": [
    "## 경사하강법\n",
    ":가중치를 업데이트 하는 방법\n",
    "미분을 통해 얻은 기울기를 이용하여 최적의 값 찾기\n",
    "\n",
    "가중치 초기화 설정 : 케라스에서 제공하는 glorot(xavier),he,Lecun"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b0335279",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#확률적 경사하강법 SGD\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "lr_list=[0.001,0.1,0.5,0.9]\n",
    "\n",
    "def get_derivative(lr):\n",
    "    \n",
    "    w_old=2\n",
    "    derivative=[w_old]\n",
    "    \n",
    "    y=[w_old ** 2] #손실함수 y=x^2로 정의\n",
    "    \n",
    "    for i in range(1,10):\n",
    "        dev_value=w_old * 2 #미분값\n",
    "        \n",
    "        #가중치 업데이트\n",
    "        w_new = w_old-lr*dev_value\n",
    "        w_old=w_new\n",
    "        \n",
    "        derivative.append(w_old) #가중치 저장\n",
    "        y.append(w_old ** 2 ) #가중치의 손실값 저장\n",
    "        \n",
    "    return derivative,y\n",
    "\n",
    "x=np.linspace(-2,2,50)\n",
    "x_square=[i**2 for i in x]\n",
    "\n",
    "fig=plt.figure(figsize=(12,7))\n",
    "\n",
    "for i, lr in enumerate(lr_list):\n",
    "    derivative,y = get_derivative(lr)\n",
    "    ax=fig.add_subplot(2,2,i+1)\n",
    "    ax.scatter(derivative,y,color='red')\n",
    "    ax.plot(x,x_square)\n",
    "    ax.title.set_text('lr='+str(lr))\n",
    "    \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45796ee5",
   "metadata": {},
   "source": [
    "##### 개발 과정\n",
    "\n",
    "1. 학습 데이터 정의\n",
    "2. 데이터에 적함한 모델 정의\n",
    "3. 손실 함수, 옵티마이저, 평가지표를 선택하여 학습과정 설정\n",
    "4. 모델을 학습시키기\n",
    "5. 모델 평가하기"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49e1d418",
   "metadata": {},
   "source": [
    "#### 모델 구성 - 층을 쌓는 sequential\n",
    "import tensorflow as tf\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "\n",
    "model=Sequential()\n",
    "model.add(Dense(32,input_shape=(2, ),activation='relu'))\n",
    "model.add(Dense(1, activation='sigmoid'))\n",
    "\n",
    "* 모델의 첫번째층은 데이터의 형태(input_shape)를 전달해줘야 함"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78e91865",
   "metadata": {},
   "source": [
    "#### 학습 과정 - model.compile()\n",
    "\n",
    "#평균제곱 오차 회귀 문제\n",
    "model.compile(optimizer = RMSprop(),\n",
    "             loss= 'mse',\n",
    "             metrics=[])\n",
    "\n",
    "#이항 분류 문제\n",
    "model.compile(optimizer = RMSprop(),\n",
    "             loss= 'binary_crossentropy',\n",
    "             metrics=['acc'])\n",
    "\n",
    "#다항 분류 문제\n",
    "model.compile(optimizer = RMSprop(),\n",
    "             loss= 'categorical_crossentropy',\n",
    "             metrics=['acc'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a537a785",
   "metadata": {},
   "source": [
    "<model.compile에서 설정할 것 세가지>\n",
    "\n",
    "옵티마이저 : 최적화 방법 tf.keras.optimizer\n",
    "- sgd, 'rmsprop', 'adam'\n",
    "\n",
    "손실 함수 : 학습 과정에서 최적화시켜야 할 손실 함수 tf.keras.losses\n",
    "- mse, binary_crossentropy, categorical_crossentropy\n",
    "\n",
    "평가 지표 metrics : 학습 과정 모니터링 tf.keras.metrics\n",
    "- 'acc', 객체 호출"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c3a2aeb",
   "metadata": {},
   "source": [
    "#### 모델 학습 - model.fit()\n",
    "model.fit(data, label, epochs=100)\n",
    "model.fit(data, label, epochs=100, validation_data=(val_data, val_label))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e402f6d2",
   "metadata": {},
   "source": [
    "<fit 함수에서 설정할 것 세가지>\n",
    "\n",
    "에폭 : 전체 학습 데이터를 몇 회 반복할지\n",
    "\n",
    "배치 크기 : 전달한 배치 크기만큼 학습 데이터를 나누어 학습\n",
    "\n",
    "검증 데이터 : 모델의 성능 모니터링. 입력과 정답 데이터로 이루어진 검증 데이터를 전달하면 1회 에폭이 끝날 때나다 전달된 검증데이터의 손실과 평가지표 출력"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdc7766b",
   "metadata": {},
   "source": [
    "#### 평가 진행 - evaluate(),predict()\n",
    "model.evaluate(data, label)\n",
    "손실과 평가지표에 대한 정보\n",
    "\n",
    "model.predict(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0499b98",
   "metadata": {},
   "source": [
    "# 4장 신경망 적용해보기\n",
    "mnist 데이터셋 이용"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7bb37c40",
   "metadata": {},
   "outputs": [],
   "source": [
    "# mnist 데이터셋 다운\n",
    "from tensorflow.keras.datasets.mnist import load_data\n",
    "\n",
    "(x_train, y_train),(x_test, y_test)= load_data(path='mnist.npz')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d5caf797",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(60000, 28, 28) (60000,)\n",
      "[5 0 4 ... 5 6 8]\n",
      "(10000, 28, 28) (10000,)\n",
      "[7 2 1 ... 4 5 6]\n"
     ]
    }
   ],
   "source": [
    "# 학습 데이터\n",
    "print(x_train.shape,y_train.shape)\n",
    "print(y_train)\n",
    "\n",
    "# 테스트 데이터\n",
    "print(x_test.shape,y_test.shape)\n",
    "print(y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9d80cc4a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#데이터 그려보기\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "sample_size=3\n",
    "random_idx=np.random.randint(60000,size=sample_size) #육만개 중 3개\n",
    "\n",
    "for idx in random_idx:\n",
    "    img=x_train[idx, :]\n",
    "    label= y_train[idx]\n",
    "    plt.figure()\n",
    "    plt.imshow(img)                                  #이미지 그리기\n",
    "    plt.title('%d-th data, label is %d' % (idx,label))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "567350ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "훈련데이터 (42000, 28, 28) 레이블 (42000,)\n",
      "검증데이터 (18000, 28, 28) 레이블 (18000,)\n"
     ]
    }
   ],
   "source": [
    "#검증 데이터 만들기\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "#훈련/테스트 데이터를 0.7/0.3의 비율로 분리\n",
    "x_train,x_val,y_train,y_val = train_test_split(x_train,y_train,test_size=0.3,random_state=777)\n",
    "print(f'훈련데이터 {x_train.shape} 레이블 {y_train.shape}')\n",
    "print(f'검증데이터 {x_val.shape} 레이블 {y_val.shape}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b6eff8e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(42000, 784)\n"
     ]
    }
   ],
   "source": [
    "#모델 입력을 위한 전처리\n",
    "num_x_train=x_train.shape[0]\n",
    "num_x_val=x_val.shape[0]\n",
    "num_x_test=x_test.shape[0]\n",
    "\n",
    "x_train=(x_train.reshape((num_x_train, 28*28))) / 255 #픽셀 값이 0~255\n",
    "x_val=(x_val.reshape((num_x_val, 28*28))) / 255\n",
    "x_test=(x_test.reshape((num_x_test, 28*28))) / 255\n",
    "\n",
    "print(x_train.shape) #모델 입력을 위해 28*28차원으로\n",
    "\n",
    "#*minmax알고리즘 적용 x=(x-x_min)/(x_max-x_min)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bda305e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0. 0. 1. ... 0. 0. 0.]\n",
      " [0. 0. 0. ... 1. 0. 0.]\n",
      " [0. 0. 0. ... 0. 0. 0.]\n",
      " ...\n",
      " [0. 0. 0. ... 0. 0. 0.]\n",
      " [0. 0. 0. ... 0. 0. 0.]\n",
      " [0. 0. 0. ... 0. 0. 0.]]\n"
     ]
    }
   ],
   "source": [
    "#모델 입력을 위한 레이블 전처리\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "\n",
    "#레이블을 범주형 형태로 변경(소프트 맥스 함수를 사용하기 때문)\n",
    "y_train = to_categorical(y_train)\n",
    "y_val = to_categorical(y_val)\n",
    "y_test = to_categorical(y_test)\n",
    "\n",
    "print(y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9a75e17b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#모델 구성하기\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "\n",
    "model= Sequential()\n",
    "#784차원의 데이터를 입력으로 받고 64개의 출력을 가지는 첫번째 Dense층\n",
    "model.add(Dense(64, activation='relu', input_shape=(784, )))\n",
    "# 32개의 출력을 가지는 Dense층\n",
    "model.add(Dense(32, activation='relu'))\n",
    "# 10개의 출력을 가지는 신경망, 범주형 데이터를 다루기 위해 마지막 층에서 소프트맥스\n",
    "model.add(Dense(10, activation='softmax')) #출력값의 의미는 해당 클래스에 속할 값이며 합이 1이므로 확률로 해석 가능 > 비교수월"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "73958f7f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sigmoid [0.957 0.953 0.948], softmax [0.367 0.332 0.301]\n",
      "sigmoid [0.881 0.731 0.668], softmax [0.61  0.224 0.166]\n"
     ]
    }
   ],
   "source": [
    "## 소프트맥스와 시그모이드 값의 비교\n",
    "def softmax(arr):\n",
    "    m=np.max(arr)\n",
    "    arr=arr-m #exp의 오버플로우 방지\n",
    "    arr= np.exp(arr)\n",
    "    return arr / np.sum(arr)\n",
    "\n",
    "def sigmoid(x):\n",
    "    return 1 / (1+np.exp(-x))\n",
    "\n",
    "case_1=np.array([3.1, 3.0, 2.9])\n",
    "case_2=np.array([2.0, 1.0, 0.7])\n",
    "\n",
    "np.set_printoptions(precision=3) #numpy 소수점 제한\n",
    "print(f'sigmoid {sigmoid(case_1)}, softmax {softmax(case_1)}')\n",
    "print(f'sigmoid {sigmoid(case_2)}, softmax {softmax(case_2)}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6f7d5b7c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#학습과정 설정하기\n",
    "model.compile(optimizer='adam', #옵티마이저: adam\n",
    "             loss='categorical_crossentropy',#손실함수: categorical_crossentropy\n",
    "             metrics=['acc']) #모니터링 할 평가지표 : acc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "38e9f3f0",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 0.0074 - acc: 0.9975 - val_loss: 0.1890 - val_acc: 0.9724\n",
      "Epoch 2/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 0.0016 - acc: 0.9996 - val_loss: 0.1868 - val_acc: 0.9726\n",
      "Epoch 3/30\n",
      "329/329 [==============================] - 3s 9ms/step - loss: 8.2479e-04 - acc: 1.0000 - val_loss: 0.1864 - val_acc: 0.9729\n",
      "Epoch 4/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 6.0917e-04 - acc: 1.0000 - val_loss: 0.1869 - val_acc: 0.9728\n",
      "Epoch 5/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 4.9121e-04 - acc: 1.0000 - val_loss: 0.1865 - val_acc: 0.9732\n",
      "Epoch 6/30\n",
      "329/329 [==============================] - 4s 11ms/step - loss: 4.0271e-04 - acc: 1.0000 - val_loss: 0.1868 - val_acc: 0.9735\n",
      "Epoch 7/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 3.4214e-04 - acc: 1.0000 - val_loss: 0.1868 - val_acc: 0.9737\n",
      "Epoch 8/30\n",
      "329/329 [==============================] - 4s 11ms/step - loss: 2.9602e-04 - acc: 1.0000 - val_loss: 0.1873 - val_acc: 0.9735\n",
      "Epoch 9/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 2.5837e-04 - acc: 1.0000 - val_loss: 0.1874 - val_acc: 0.9737\n",
      "Epoch 10/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 2.2462e-04 - acc: 1.0000 - val_loss: 0.1878 - val_acc: 0.9738\n",
      "Epoch 11/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 1.9964e-04 - acc: 1.0000 - val_loss: 0.1880 - val_acc: 0.9738\n",
      "Epoch 12/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 1.7416e-04 - acc: 1.0000 - val_loss: 0.1882 - val_acc: 0.9738\n",
      "Epoch 13/30\n",
      "329/329 [==============================] - 3s 9ms/step - loss: 1.5382e-04 - acc: 1.0000 - val_loss: 0.1892 - val_acc: 0.9739\n",
      "Epoch 14/30\n",
      "329/329 [==============================] - 4s 11ms/step - loss: 1.3457e-04 - acc: 1.0000 - val_loss: 0.1896 - val_acc: 0.9736\n",
      "Epoch 15/30\n",
      "329/329 [==============================] - 4s 11ms/step - loss: 1.2097e-04 - acc: 1.0000 - val_loss: 0.1901 - val_acc: 0.9741\n",
      "Epoch 16/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 1.0546e-04 - acc: 1.0000 - val_loss: 0.1908 - val_acc: 0.9742\n",
      "Epoch 17/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 9.3537e-05 - acc: 1.0000 - val_loss: 0.1916 - val_acc: 0.9743\n",
      "Epoch 18/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 8.2959e-05 - acc: 1.0000 - val_loss: 0.1924 - val_acc: 0.9742\n",
      "Epoch 19/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 7.2794e-05 - acc: 1.0000 - val_loss: 0.1932 - val_acc: 0.9742\n",
      "Epoch 20/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 6.4945e-05 - acc: 1.0000 - val_loss: 0.1942 - val_acc: 0.9741\n",
      "Epoch 21/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 5.6628e-05 - acc: 1.0000 - val_loss: 0.1951 - val_acc: 0.9743\n",
      "Epoch 22/30\n",
      "329/329 [==============================] - 3s 9ms/step - loss: 5.0169e-05 - acc: 1.0000 - val_loss: 0.1961 - val_acc: 0.9744\n",
      "Epoch 23/30\n",
      "329/329 [==============================] - 4s 11ms/step - loss: 4.5896e-05 - acc: 1.0000 - val_loss: 0.1973 - val_acc: 0.9741\n",
      "Epoch 24/30\n",
      "329/329 [==============================] - 4s 11ms/step - loss: 3.8645e-05 - acc: 1.0000 - val_loss: 0.1986 - val_acc: 0.9743\n",
      "Epoch 25/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 3.3431e-05 - acc: 1.0000 - val_loss: 0.1995 - val_acc: 0.9743\n",
      "Epoch 26/30\n",
      "329/329 [==============================] - 3s 11ms/step - loss: 2.9249e-05 - acc: 1.0000 - val_loss: 0.2009 - val_acc: 0.9746\n",
      "Epoch 27/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 2.5493e-05 - acc: 1.0000 - val_loss: 0.2025 - val_acc: 0.9745\n",
      "Epoch 28/30\n",
      "329/329 [==============================] - 4s 11ms/step - loss: 2.2236e-05 - acc: 1.0000 - val_loss: 0.2046 - val_acc: 0.9743\n",
      "Epoch 29/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 1.9583e-05 - acc: 1.0000 - val_loss: 0.2050 - val_acc: 0.9745\n",
      "Epoch 30/30\n",
      "329/329 [==============================] - 3s 10ms/step - loss: 1.7209e-05 - acc: 1.0000 - val_loss: 0.2067 - val_acc: 0.9747\n"
     ]
    }
   ],
   "source": [
    "#모델 학습하기\n",
    "history = model.fit(x_train,y_train,\n",
    "                    epochs=30,batch_size=128,\n",
    "                    validation_data=(x_val, y_val)) \n",
    "#정확도 꽤 높음"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "07ae19f3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['loss', 'acc', 'val_loss', 'val_acc'])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "history.history.keys()\n",
    "\n",
    "#val_은 검증데이터"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "32147f83",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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kydPBmDQoEHMnz+f7du3c+aZZ3LiiSfyt7/9jb59+/L888/TsWPHeuN7+eWXuemmmygvL+fLX/4y06ZNo0OHDtxyyy3Mnj2b7OxsTj/9dO655x6efvppfvSjH5GVlUXXrl2ZO3du0z8gEUm5TNRlzV2P/frXv+bBBx9k9+7dHHbYYTz22GPk5eWxbt06rr76apYvXw7AtGnTOP7445kxYwb33HMPZsbIkSN57LHHmvyZ6MmZSCt29913c+ihh1JcXMzPf/5z3nrrLe666y6WLFkCwMMPP8yCBQuYP38+999/Pxs3bjzgHB999BHXXHMNixcvpqCggGeffbbe65aVlXH55Zfz1FNPsWjRIsrLy5k2bRqbNm1i1qxZLF68mHfffZfbbrsNgB//+Me8+OKLLFy4kNmzZ6f2QxCRFq2567GJEycyb948Fi5cyLBhw3jooYcAuO666zjllFNYuHAhb7/9NkcccQSLFy/mrrvu4pVXXmHhwoVMnTo1JfesJ2cizaC+J1zNZcyYMfsNgnj//fcza9YsAFatWsVHH31E9+7d9yszePBgioqKADjmmGNYsWJFvdf54IMPGDx4MF/60pcAuOyyy3jggQeYMmUKubm5XHXVVXz1q1/l7LPPBuCEE07g8ssv58ILL2TixIkpuFMRSYc41GXprsfee+89brvtNrZs2cL27ds544wzAHjllVeYMWMGwL6n/DNmzOD888+nR48eAHTr1i0l95jUkzMzu97MuljwkJm9bWanpyQCEWk2nTp12rf82muv8ac//Yk33niDhQsXctRRR9U4SGKHDh32LWdlZVFeXl7vddy9xu3Z2dm89dZbfO1rX+N3v/sd48ePB2D69OnceeedrFq1iqKiohr/8q2P6imRtiHd9djll1/OL37xCxYtWsTtt99e5+Cx7p6WMeCSbdb8Z3cvBU4HegJXAHenPBoRSan8/Hy2bdtW476tW7dSWFhIXl4eS5cu5c0330zZdYcOHcqKFStYtmwZAI899hinnHIK27dvZ+vWrZx11lncd999FEedVz7++GPGjh3Lj3/8Y3r06MGqVasac1nVUyKtUHPXY9u2baNPnz7s2bOHxx9/fN/2cePGMW3aNCB8GaG0tJRx48Yxc+bMfX9Qbtq0qcnXh+SbNSvTwrOA37r7QtNwwSKx1717d0444QRGjBhBx44d6d27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\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#학습결과 그려보기\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "his_dict=history.history\n",
    "loss=his_dict['loss']\n",
    "val_loss=his_dict['val_loss']\n",
    "\n",
    "epochs=range(1, len(loss)+1)\n",
    "fig=plt.figure(figsize=(10,5))\n",
    "\n",
    "#학습 및 검증 손실 그리기\n",
    "ax1= fig.add_subplot(1,2,1)\n",
    "ax1.plot(epochs, loss, color='blue', label='train_loss')\n",
    "ax1.plot(epochs, val_loss, color='orange',label='val_loss')\n",
    "ax1.set_title('train and val loss')\n",
    "ax1.set_xlabel('epochs')\n",
    "ax1.set_ylabel('loss')\n",
    "ax1.legend()\n",
    "\n",
    "acc=his_dict['acc']\n",
    "val_acc=his_dict['val_acc']\n",
    "\n",
    "#학습 및 검증 정확도 그리기\n",
    "ax2= fig.add_subplot(1,2,2)\n",
    "ax2.plot(epochs, acc, color='blue', label='train_acc')\n",
    "ax2.plot(epochs, val_acc, color='orange',label='val_acc')\n",
    "ax2.set_title('train and val acc')\n",
    "ax2.set_xlabel('epochs')\n",
    "ax2.set_ylabel('loss')\n",
    "ax2.legend()\n",
    "\n",
    "acc=his_dict['acc']\n",
    "val_acc=his_dict['val_acc']\n",
    "\n",
    "#두 그래프가 차이가 많이나면 과적합"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "8cb4adf4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "313/313 [==============================] - 1s 2ms/step - loss: 0.1802 - acc: 0.9784\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.18020720779895782, 0.9783999919891357]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#모델 성능 확인\n",
    "model.evaluate(x_test, y_test)\n",
    "#손실값, 정확도"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "54128331",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10000, 10)\n",
      "각 클래스에 속할 확률 : \n",
      "[2.7240201e-24 1.7372711e-21 6.4357802e-16 6.2757963e-15 9.0309575e-27\n",
      " 1.1514928e-24 0.0000000e+00 1.0000000e+00 5.2045463e-22 1.9251078e-18]\n"
     ]
    }
   ],
   "source": [
    "#값 예측하기\n",
    "import numpy as np\n",
    "\n",
    "results = model.predict(x_test)\n",
    "print(results.shape)\n",
    "np.set_printoptions(precision=7)\n",
    "print(f'각 클래스에 속할 확률 : \\n{results [0]}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "c2eefb4e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#예측값 확인\n",
    "arg_results =np.argmax(results, axis=-1) #가장 큰 값의 인덱스\n",
    "plt.imshow(x_test[0].reshape(28,28))\n",
    "plt.title('Predicted value of the first image :' +str(arg_results[0]))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "2cbc6734",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#모델 평가 방법 1 - 혼동행렬\n",
    "#sklearn.metrics 모듈은 여러 평가지표 기능 제공\n",
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "#혼동행렬 만들기\n",
    "plt.figure(figsize=(7,7))\n",
    "cm=confusion_matrix(np.argmax(y_test, axis = -1),np.argmax(results, axis=-1))\n",
    "sns.heatmap(cm, annot=True, fmt ='d',cmap='Blues')\n",
    "plt.xlabel('predicted label')\n",
    "plt.ylabel('true label')\n",
    "plt.show()\n",
    "\n",
    "#4와 9를 주로 혼동"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a758be38",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.99      0.99      0.99       980\n",
      "           1       0.99      0.99      0.99      1135\n",
      "           2       0.98      0.98      0.98      1032\n",
      "           3       0.97      0.98      0.97      1010\n",
      "           4       0.98      0.97      0.97       982\n",
      "           5       0.97      0.97      0.97       892\n",
      "           6       0.98      0.98      0.98       958\n",
      "           7       0.98      0.98      0.98      1028\n",
      "           8       0.97      0.97      0.97       974\n",
      "           9       0.97      0.97      0.97      1009\n",
      "\n",
      "    accuracy                           0.98     10000\n",
      "   macro avg       0.98      0.98      0.98     10000\n",
      "weighted avg       0.98      0.98      0.98     10000\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#모델 평가 방법 2 - 분류보고서\n",
    "print('\\n',classification_report(np.argmax(y_test, axis=-1),np.argmax(results, axis=-1)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "891ee9ce",
   "metadata": {},
   "source": [
    "### 전체코드"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "d64e2bea",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "329/329 [==============================] - 2s 4ms/step - loss: 0.5025 - acc: 0.8525 - val_loss: 0.2539 - val_acc: 0.9277\n",
      "Epoch 2/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2101 - acc: 0.9392 - val_loss: 0.1858 - val_acc: 0.9467\n",
      "Epoch 3/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.1582 - acc: 0.9538 - val_loss: 0.1597 - val_acc: 0.9533\n",
      "Epoch 4/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.1274 - acc: 0.9633 - val_loss: 0.1353 - val_acc: 0.9602\n",
      "Epoch 5/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.1058 - acc: 0.9687 - val_loss: 0.1277 - val_acc: 0.9626\n",
      "Epoch 6/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0897 - acc: 0.9733 - val_loss: 0.1201 - val_acc: 0.9651\n",
      "Epoch 7/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0786 - acc: 0.9766 - val_loss: 0.1137 - val_acc: 0.9650\n",
      "Epoch 8/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.0669 - acc: 0.9800 - val_loss: 0.1146 - val_acc: 0.9656\n",
      "Epoch 9/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0591 - acc: 0.9824 - val_loss: 0.1084 - val_acc: 0.9679\n",
      "Epoch 10/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.0511 - acc: 0.9849 - val_loss: 0.1026 - val_acc: 0.9696\n",
      "Epoch 11/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.0464 - acc: 0.9858 - val_loss: 0.1038 - val_acc: 0.9687\n",
      "Epoch 12/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0405 - acc: 0.9881 - val_loss: 0.1047 - val_acc: 0.9695\n",
      "Epoch 13/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0354 - acc: 0.9894 - val_loss: 0.1052 - val_acc: 0.9689\n",
      "Epoch 14/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0333 - acc: 0.9902 - val_loss: 0.1106 - val_acc: 0.9684\n",
      "Epoch 15/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0286 - acc: 0.9922 - val_loss: 0.1244 - val_acc: 0.9664\n",
      "Epoch 16/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0257 - acc: 0.9926 - val_loss: 0.1041 - val_acc: 0.9707\n",
      "Epoch 17/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0205 - acc: 0.9945 - val_loss: 0.1114 - val_acc: 0.9699\n",
      "Epoch 18/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.0206 - acc: 0.9938 - val_loss: 0.1057 - val_acc: 0.9723\n",
      "Epoch 19/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.0161 - acc: 0.9960 - val_loss: 0.1144 - val_acc: 0.9705\n",
      "Epoch 20/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.0153 - acc: 0.9960 - val_loss: 0.1139 - val_acc: 0.9706\n",
      "Epoch 21/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0127 - acc: 0.9969 - val_loss: 0.1166 - val_acc: 0.9707\n",
      "Epoch 22/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0129 - acc: 0.9967 - val_loss: 0.1264 - val_acc: 0.9688\n",
      "Epoch 23/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0114 - acc: 0.9967 - val_loss: 0.1285 - val_acc: 0.9695\n",
      "Epoch 24/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0105 - acc: 0.9974 - val_loss: 0.1269 - val_acc: 0.9701\n",
      "Epoch 25/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0086 - acc: 0.9979 - val_loss: 0.1267 - val_acc: 0.9711\n",
      "Epoch 26/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0087 - acc: 0.9979 - val_loss: 0.1352 - val_acc: 0.9692\n",
      "Epoch 27/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0075 - acc: 0.9983 - val_loss: 0.1271 - val_acc: 0.9718\n",
      "Epoch 28/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0112 - acc: 0.9967 - val_loss: 0.1365 - val_acc: 0.9692\n",
      "Epoch 29/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.0120 - acc: 0.9963 - val_loss: 0.1318 - val_acc: 0.9714\n",
      "Epoch 30/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.0040 - acc: 0.9992 - val_loss: 0.1401 - val_acc: 0.9711\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras.datasets.mnist import load_data\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "tf.random.set_seed(777)\n",
    "\n",
    "(x_train, y_train),(x_test, y_test)= load_data(path='mnist.npz')\n",
    "\n",
    "x_train,x_val,y_train,y_val = train_test_split(x_train,y_train,test_size=0.3,random_state=777)\n",
    "\n",
    "num_x_train=x_train.shape[0]\n",
    "num_x_val=x_val.shape[0]\n",
    "num_x_test=x_test.shape[0]\n",
    "\n",
    "x_train=(x_train.reshape((num_x_train, 28*28))) / 255\n",
    "x_val=(x_val.reshape((num_x_val, 28*28))) / 255\n",
    "x_test=(x_test.reshape((num_x_test, 28*28))) / 255\n",
    "\n",
    "y_train = to_categorical(y_train)\n",
    "y_val = to_categorical(y_val)\n",
    "y_test = to_categorical(y_test)\n",
    "\n",
    "model= Sequential()\n",
    "model.add(Dense(64, activation='relu', input_shape=(784, )))\n",
    "model.add(Dense(32, activation='relu'))\n",
    "model.add(Dense(10, activation='softmax'))\n",
    "\n",
    "model.compile(optimizer='adam',\n",
    "             loss='categorical_crossentropy',\n",
    "             metrics=['acc'])\n",
    "\n",
    "history = model.fit(x_train,y_train,\n",
    "                    epochs=30,\n",
    "                    batch_size=128,\n",
    "                    validation_data=(x_val, y_val)) \n",
    "\n",
    "#model.evaluate(x_test, y_test)\n",
    "results=model.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5ca15bab",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "63ed503c",
   "metadata": {},
   "source": [
    "### Fashion-mnist\n",
    "60000개의 학습데이터와 10000개의 테스트 데이터"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "3394eedd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-labels-idx1-ubyte.gz\n",
      "32768/29515 [=================================] - 0s 1us/step\n",
      "40960/29515 [=========================================] - 0s 1us/step\n",
      "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-images-idx3-ubyte.gz\n",
      "26427392/26421880 [==============================] - 10s 0us/step\n",
      "26435584/26421880 [==============================] - 10s 0us/step\n",
      "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-labels-idx1-ubyte.gz\n",
      "16384/5148 [===============================================================================================] - 0s 0us/step\n",
      "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-images-idx3-ubyte.gz\n",
      "4423680/4422102 [==============================] - 2s 0us/step\n",
      "4431872/4422102 [==============================] - 2s 0us/step\n",
      "(60000, 28, 28) (10000, 28, 28)\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.datasets.fashion_mnist import load_data\n",
    "\n",
    "(x_train, y_train),(x_test, y_test)=load_data()\n",
    "print(x_train.shape, x_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "e3f57359",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 9 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "np.random.seed(777)\n",
    "\n",
    "class_names=['T-shirt/top','Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot']\n",
    "\n",
    "sample_size=9\n",
    "random_idx=np.random.randint(60000,size=sample_size)\n",
    "\n",
    "plt.figure(figsize=(5,5))\n",
    "for i, idx in enumerate(random_idx):\n",
    "    plt.subplot(3,3,i+1)\n",
    "    plt.xticks([])\n",
    "    plt.yticks([])\n",
    "    plt.imshow(x_train[i],cmap='gray')\n",
    "    plt.xlabel(class_names[y_train[i]])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "14059926",
   "metadata": {},
   "outputs": [],
   "source": [
    "#0~1범위\n",
    "x_train=x_train/255\n",
    "x_test=x_test/255\n",
    "\n",
    "#범주형 형태로 변환 from tensorflow.keras.utils import to_categorical\n",
    "y_train=to_categorical(y_train)\n",
    "y_test=to_categorical(y_test)\n",
    "\n",
    "#검증데이터셋 from sklearn.model_selection import train_test_split\n",
    "\n",
    "#훈련/테스트 데이터를 0.7/0.3의 비율로 분리\n",
    "x_train,x_val,y_train,y_val = train_test_split(x_train,y_train,test_size=0.3,random_state=777)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "4a994db2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#첫번째 모델\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense, Flatten\n",
    "\n",
    "first_model=Sequential()\n",
    "\n",
    "first_model.add(Flatten(input_shape=(28,28))) #(28,28) flatten층을 추가 (fltten은 배치크기를 제외하고 1차원 배열의 형태로 변환)\n",
    "first_model.add(Dense(64, activation='relu'))\n",
    "first_model.add(Dense(32, activation='relu'))\n",
    "first_model.add(Dense(10, activation='softmax'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "7b0951f8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "329/329 [==============================] - 3s 8ms/step - loss: 0.6773 - acc: 0.7692 - val_loss: 0.4745 - val_acc: 0.8392\n",
      "Epoch 2/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.4461 - acc: 0.8425 - val_loss: 0.4301 - val_acc: 0.8494\n",
      "Epoch 3/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.4027 - acc: 0.8575 - val_loss: 0.4103 - val_acc: 0.8527\n",
      "Epoch 4/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.3801 - acc: 0.8635 - val_loss: 0.3975 - val_acc: 0.8583\n",
      "Epoch 5/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.3565 - acc: 0.8727 - val_loss: 0.3881 - val_acc: 0.8578\n",
      "Epoch 6/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.3443 - acc: 0.8770 - val_loss: 0.3652 - val_acc: 0.8690\n",
      "Epoch 7/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.3317 - acc: 0.8806 - val_loss: 0.3660 - val_acc: 0.8698\n",
      "Epoch 8/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.3179 - acc: 0.8833 - val_loss: 0.3543 - val_acc: 0.8747\n",
      "Epoch 9/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.3052 - acc: 0.8889 - val_loss: 0.3387 - val_acc: 0.8769\n",
      "Epoch 10/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2974 - acc: 0.8908 - val_loss: 0.3275 - val_acc: 0.8829\n",
      "Epoch 11/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2900 - acc: 0.8935 - val_loss: 0.3341 - val_acc: 0.8805\n",
      "Epoch 12/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2834 - acc: 0.8961 - val_loss: 0.3424 - val_acc: 0.8802\n",
      "Epoch 13/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2751 - acc: 0.8983 - val_loss: 0.3300 - val_acc: 0.8833\n",
      "Epoch 14/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2690 - acc: 0.8998 - val_loss: 0.3255 - val_acc: 0.8849\n",
      "Epoch 15/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2617 - acc: 0.9036 - val_loss: 0.3168 - val_acc: 0.8859\n",
      "Epoch 16/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2613 - acc: 0.9025 - val_loss: 0.3473 - val_acc: 0.8751\n",
      "Epoch 17/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2547 - acc: 0.9055 - val_loss: 0.3248 - val_acc: 0.8871\n",
      "Epoch 18/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2468 - acc: 0.9075 - val_loss: 0.3465 - val_acc: 0.8792\n",
      "Epoch 19/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2405 - acc: 0.9098 - val_loss: 0.3187 - val_acc: 0.8874\n",
      "Epoch 20/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2341 - acc: 0.9140 - val_loss: 0.3372 - val_acc: 0.8888\n",
      "Epoch 21/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2288 - acc: 0.9144 - val_loss: 0.3257 - val_acc: 0.8881\n",
      "Epoch 22/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2300 - acc: 0.9146 - val_loss: 0.3362 - val_acc: 0.8816\n",
      "Epoch 23/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2245 - acc: 0.9160 - val_loss: 0.3310 - val_acc: 0.8792\n",
      "Epoch 24/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2185 - acc: 0.9191 - val_loss: 0.3271 - val_acc: 0.8903\n",
      "Epoch 25/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2119 - acc: 0.9217 - val_loss: 0.3323 - val_acc: 0.8863\n",
      "Epoch 26/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2123 - acc: 0.9211 - val_loss: 0.3414 - val_acc: 0.8852\n",
      "Epoch 27/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2107 - acc: 0.9218 - val_loss: 0.3254 - val_acc: 0.8886\n",
      "Epoch 28/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2044 - acc: 0.9241 - val_loss: 0.3401 - val_acc: 0.8897\n",
      "Epoch 29/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.2003 - acc: 0.9251 - val_loss: 0.3374 - val_acc: 0.8876\n",
      "Epoch 30/30\n",
      "329/329 [==============================] - 1s 3ms/step - loss: 0.1963 - acc: 0.9265 - val_loss: 0.3375 - val_acc: 0.8878\n"
     ]
    }
   ],
   "source": [
    "#학습 과정 설정 및 학습\n",
    "first_model.compile(optimizer='adam',\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['acc'])\n",
    "\n",
    "first_history= first_model.fit(x_train, y_train,\n",
    "                              epochs=30,\n",
    "                              batch_size=128,\n",
    "                              validation_data=(x_val, y_val))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "638959a2",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "329/329 [==============================] - 2s 5ms/step - loss: 0.6096 - acc: 0.7856 - val_loss: 0.4576 - val_acc: 0.8363\n",
      "Epoch 2/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.4144 - acc: 0.8507 - val_loss: 0.4109 - val_acc: 0.8509\n",
      "Epoch 3/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.3752 - acc: 0.8637 - val_loss: 0.3768 - val_acc: 0.8669\n",
      "Epoch 4/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.3428 - acc: 0.8745 - val_loss: 0.3600 - val_acc: 0.8709\n",
      "Epoch 5/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.3251 - acc: 0.8803 - val_loss: 0.3714 - val_acc: 0.8624\n",
      "Epoch 6/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.3086 - acc: 0.8875 - val_loss: 0.3430 - val_acc: 0.8774\n",
      "Epoch 7/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2976 - acc: 0.8915 - val_loss: 0.3385 - val_acc: 0.8784\n",
      "Epoch 8/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2854 - acc: 0.8946 - val_loss: 0.3517 - val_acc: 0.8746\n",
      "Epoch 9/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2716 - acc: 0.8995 - val_loss: 0.3164 - val_acc: 0.8866\n",
      "Epoch 10/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2601 - acc: 0.9038 - val_loss: 0.3149 - val_acc: 0.8839\n",
      "Epoch 11/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2571 - acc: 0.9037 - val_loss: 0.3338 - val_acc: 0.8793\n",
      "Epoch 12/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2472 - acc: 0.9065 - val_loss: 0.3234 - val_acc: 0.8883\n",
      "Epoch 13/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2368 - acc: 0.9109 - val_loss: 0.3229 - val_acc: 0.8901\n",
      "Epoch 14/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2293 - acc: 0.9124 - val_loss: 0.3162 - val_acc: 0.8881\n",
      "Epoch 15/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2236 - acc: 0.9154 - val_loss: 0.3055 - val_acc: 0.8917\n",
      "Epoch 16/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2174 - acc: 0.9177 - val_loss: 0.3517 - val_acc: 0.8782\n",
      "Epoch 17/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2141 - acc: 0.9183 - val_loss: 0.3050 - val_acc: 0.8958\n",
      "Epoch 18/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.2001 - acc: 0.9239 - val_loss: 0.3219 - val_acc: 0.8884\n",
      "Epoch 19/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1993 - acc: 0.9245 - val_loss: 0.3162 - val_acc: 0.8921\n",
      "Epoch 20/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1917 - acc: 0.9288 - val_loss: 0.3605 - val_acc: 0.8817\n",
      "Epoch 21/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1894 - acc: 0.9280 - val_loss: 0.3534 - val_acc: 0.8868\n",
      "Epoch 22/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1859 - acc: 0.9292 - val_loss: 0.3438 - val_acc: 0.8871\n",
      "Epoch 23/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1776 - acc: 0.9320 - val_loss: 0.3425 - val_acc: 0.8829\n",
      "Epoch 24/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1746 - acc: 0.9340 - val_loss: 0.3456 - val_acc: 0.8910\n",
      "Epoch 25/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1644 - acc: 0.9394 - val_loss: 0.3423 - val_acc: 0.8898\n",
      "Epoch 26/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1655 - acc: 0.9372 - val_loss: 0.3508 - val_acc: 0.8889\n",
      "Epoch 27/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1635 - acc: 0.9387 - val_loss: 0.3397 - val_acc: 0.8919\n",
      "Epoch 28/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1566 - acc: 0.9415 - val_loss: 0.3585 - val_acc: 0.8888\n",
      "Epoch 29/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1531 - acc: 0.9424 - val_loss: 0.3553 - val_acc: 0.8906\n",
      "Epoch 30/30\n",
      "329/329 [==============================] - 1s 4ms/step - loss: 0.1466 - acc: 0.9444 - val_loss: 0.3448 - val_acc: 0.8963\n"
     ]
    }
   ],
   "source": [
    "#두번째 모델\n",
    "second_model=Sequential()\n",
    "\n",
    "second_model.add(Flatten(input_shape=(28,28))) \n",
    "second_model.add(Dense(128, activation='relu'))\n",
    "second_model.add(Dense(64, activation='relu'))\n",
    "second_model.add(Dense(32, activation='relu'))\n",
    "second_model.add(Dense(10, activation='softmax'))\n",
    "\n",
    "second_model.compile(optimizer='adam',\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['acc'])\n",
    "\n",
    "second_history= second_model.fit(x_train, y_train,\n",
    "                              epochs=30,\n",
    "                              batch_size=128,\n",
    "                              validation_data=(x_val, y_val))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "2840e3a8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#두 모델의 학습과정 그리기\n",
    "def draw_loss_acc(history_1, history_2, epochs):\n",
    "    his_dict_1=history_1.history\n",
    "    his_dict_2=history_2.history\n",
    "    keys=list(his_dict_1.keys())\n",
    "    \n",
    "    epochs=range(1,epochs)\n",
    "    fig=plt.figure(figsize=(10,10))\n",
    "    ax=fig.add_subplot(1,1,1)\n",
    "    #axis선과 ax의 축 레이블 제거\n",
    "    ax.spines['top'].set_color('none')\n",
    "    ax.spines['bottom'].set_color('none')\n",
    "    ax.spines['left'].set_color('none')\n",
    "    ax.spines['right'].set_color('none')\n",
    "    ax.tick_params(labelcolor='w',top=False, bottom=False, left=False, right=False)\n",
    "    \n",
    "    for i in range(len(his_dict_1)):\n",
    "        temp_ax=fig.add_subplot(2,2,i+1)\n",
    "        temp=keys[i%2]\n",
    "        val_temp=keys[(i+2)%2 +2]\n",
    "        temp_history=his_dict_1 if i<2 else his_dict_2\n",
    "        temp_ax.plot(epochs, temp_history[temp][1:],\n",
    "                    color='blue',label='train_'+temp)\n",
    "        temp_ax.plot(epochs, temp_history[val_temp][1:],\n",
    "                    color='orange',label=val_temp)\n",
    "        if(i==1 or i==3):\n",
    "            start, end=temp_ax.get_ylim()\n",
    "            temp_ax.yaxis.set_ticks(np.arange(np.round(start,2), end, 0.01))\n",
    "        temp_ax.legend()\n",
    "    ax.set_ylabel('loss', size=20)\n",
    "    ax.set_xlabel('epochs', size=20)\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "    \n",
    "draw_loss_acc(first_history, second_history, 30)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c34d33c",
   "metadata": {},
   "source": [
    "파란색이 첫번쨰 모델\n",
    "주황색이 두번째 모델( dense 128 추가)\n",
    "\n",
    "두번째 모델이 높은 정확도를 가지나 파란색과 주황색이 벌어지면서 과적합 발생\n",
    ">8에폭까지만 두번째 모델 사용"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0af91a1",
   "metadata": {},
   "source": [
    "## 보스턴 주택 가격 예측"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8a3094dc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(404, 13) (404,)\n",
      "(102, 13) (102,)\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.datasets.boston_housing import load_data\n",
    "\n",
    "(x_train, y_train),(x_test,y_test)=load_data(path='boston_housing.npz',test_split=0.2,seed=777)\n",
    "\n",
    "print(x_train.shape,y_train.shape)\n",
    "print(x_test.shape,y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "89c1b716",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "#표준화 (범위가 달라서)\n",
    "mean=np.mean(x_train, axis=0)\n",
    "std=np.std(x_train, axis=0)\n",
    "\n",
    "x_train=(x_train-mean)/std\n",
    "x_test=(x_test-mean)/std\n",
    "\n",
    "#데이터셋\n",
    "from sklearn.model_selection import train_test_split\n",
    "x_train,x_val,y_train,y_val = train_test_split(x_train,y_train,test_size=0.33,random_state=777)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "dd423e58",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-01-31 22:43:02.144695: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "\n",
    "model= Sequential()\n",
    "model.add(Dense(64, activation='relu', input_shape=(13, )))\n",
    "model.add(Dense(32, activation='relu'))\n",
    "model.add(Dense(1))\n",
    "\n",
    "model.compile(optimizer='adam', loss='mse', metrics=['mae']) #mae : 평균절대오차"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "deb040cd",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "9/9 [==============================] - 1s 44ms/step - loss: 525.5138 - mae: 21.1308 - val_loss: 574.3901 - val_mae: 21.5474\n",
      "Epoch 2/30\n",
      "9/9 [==============================] - 0s 8ms/step - loss: 496.5108 - mae: 20.3796 - val_loss: 543.6290 - val_mae: 20.7565\n",
      "Epoch 3/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 466.0201 - mae: 19.5576 - val_loss: 508.9463 - val_mae: 19.8257\n",
      "Epoch 4/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 430.5728 - mae: 18.6112 - val_loss: 468.6107 - val_mae: 18.6860\n",
      "Epoch 5/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 390.4858 - mae: 17.5218 - val_loss: 420.5313 - val_mae: 17.3869\n",
      "Epoch 6/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 343.5470 - mae: 16.2366 - val_loss: 366.0283 - val_mae: 15.9656\n",
      "Epoch 7/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 289.1958 - mae: 14.7387 - val_loss: 306.4551 - val_mae: 14.3868\n",
      "Epoch 8/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 233.5510 - mae: 13.0146 - val_loss: 241.6555 - val_mae: 12.5329\n",
      "Epoch 9/30\n",
      "9/9 [==============================] - 0s 8ms/step - loss: 174.3916 - mae: 10.9744 - val_loss: 179.4285 - val_mae: 10.4049\n",
      "Epoch 10/30\n",
      "9/9 [==============================] - 0s 6ms/step - loss: 123.0480 - mae: 8.8217 - val_loss: 129.9100 - val_mae: 8.4380\n",
      "Epoch 11/30\n",
      "9/9 [==============================] - 0s 8ms/step - loss: 86.1020 - mae: 7.1068 - val_loss: 98.7143 - val_mae: 7.1256\n",
      "Epoch 12/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 64.6752 - mae: 6.1514 - val_loss: 82.0313 - val_mae: 6.5364\n",
      "Epoch 13/30\n",
      "9/9 [==============================] - 0s 8ms/step - loss: 53.7501 - mae: 5.6330 - val_loss: 70.7216 - val_mae: 6.0985\n",
      "Epoch 14/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 45.5445 - mae: 5.2151 - val_loss: 61.7351 - val_mae: 5.6789\n",
      "Epoch 15/30\n",
      "9/9 [==============================] - 0s 8ms/step - loss: 39.3635 - mae: 4.7841 - val_loss: 54.5096 - val_mae: 5.2457\n",
      "Epoch 16/30\n",
      "9/9 [==============================] - 0s 6ms/step - loss: 33.9936 - mae: 4.3767 - val_loss: 49.7603 - val_mae: 4.9704\n",
      "Epoch 17/30\n",
      "9/9 [==============================] - 0s 6ms/step - loss: 30.5787 - mae: 4.0900 - val_loss: 46.0074 - val_mae: 4.7414\n",
      "Epoch 18/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 28.1521 - mae: 3.8746 - val_loss: 43.0494 - val_mae: 4.5943\n",
      "Epoch 19/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 26.1987 - mae: 3.7072 - val_loss: 40.5798 - val_mae: 4.4253\n",
      "Epoch 20/30\n",
      "9/9 [==============================] - 0s 9ms/step - loss: 24.8874 - mae: 3.5665 - val_loss: 38.6404 - val_mae: 4.2798\n",
      "Epoch 21/30\n",
      "9/9 [==============================] - 0s 10ms/step - loss: 23.8271 - mae: 3.4595 - val_loss: 36.6784 - val_mae: 4.2005\n",
      "Epoch 22/30\n",
      "9/9 [==============================] - 0s 9ms/step - loss: 22.9665 - mae: 3.3912 - val_loss: 35.3031 - val_mae: 4.1244\n",
      "Epoch 23/30\n",
      "9/9 [==============================] - 0s 9ms/step - loss: 22.0537 - mae: 3.3024 - val_loss: 34.7139 - val_mae: 4.0338\n",
      "Epoch 24/30\n",
      "9/9 [==============================] - 0s 6ms/step - loss: 21.5213 - mae: 3.2170 - val_loss: 33.9816 - val_mae: 3.9599\n",
      "Epoch 25/30\n",
      "9/9 [==============================] - 0s 6ms/step - loss: 20.9636 - mae: 3.1760 - val_loss: 32.7192 - val_mae: 3.9244\n",
      "Epoch 26/30\n",
      "9/9 [==============================] - 0s 8ms/step - loss: 20.3044 - mae: 3.1300 - val_loss: 31.9143 - val_mae: 3.8724\n",
      "Epoch 27/30\n",
      "9/9 [==============================] - 0s 6ms/step - loss: 19.8484 - mae: 3.0760 - val_loss: 31.3291 - val_mae: 3.8265\n",
      "Epoch 28/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 19.4087 - mae: 3.0349 - val_loss: 30.4766 - val_mae: 3.7709\n",
      "Epoch 29/30\n",
      "9/9 [==============================] - 0s 8ms/step - loss: 19.0312 - mae: 2.9915 - val_loss: 29.8867 - val_mae: 3.7110\n",
      "Epoch 30/30\n",
      "9/9 [==============================] - 0s 7ms/step - loss: 18.6674 - mae: 2.9429 - val_loss: 29.4805 - val_mae: 3.6763\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 18.9569 - mae: 3.2278\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[18.95691680908203, 3.227769136428833]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "history= model.fit(x_train, y_train,\n",
    "                   epochs=30, validation_data=(x_val, y_val))\n",
    "\n",
    "model.evaluate(x_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e2cadf01",
   "metadata": {},
   "outputs": [],
   "source": [
    "#최종점수 3.3 : 주택의 실제가격과 예측가격이 평균적으로 3,300달러 정도의 차이가 있음"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "714462f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#k-fold 검증\n",
    "from sklearn.model_selection import KFold\n",
    "\n",
    "k=3\n",
    "kfold=KFold(n_splits=k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a0216c5e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#kfold 재사용을 위해 모델 반환\n",
    "def get_model():\n",
    "    model=Sequential()\n",
    "    model.add(Dense(64, activation='relu', input_shape=(13, )))\n",
    "    model.add(Dense(32, activation='relu'))\n",
    "    model.add(Dense(1))\n",
    "    \n",
    "    model.compile(optimizer='adam', loss='mse', metrics=['mae'])\n",
    "    \n",
    "    return model\n",
    "\n",
    "mae_list=[]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "410eb128",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/300\n",
      "6/6 [==============================] - 1s 33ms/step - loss: 551.3694 - mae: 21.9121 - val_loss: 556.6425 - val_mae: 21.7892\n",
      "Epoch 2/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 538.1296 - mae: 21.6045 - val_loss: 543.1844 - val_mae: 21.4742\n",
      "Epoch 3/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 525.6633 - mae: 21.3088 - val_loss: 529.5663 - val_mae: 21.1545\n",
      "Epoch 4/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 513.0313 - mae: 21.0062 - val_loss: 515.4783 - val_mae: 20.8198\n",
      "Epoch 5/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 499.8606 - mae: 20.6907 - val_loss: 499.9868 - val_mae: 20.4553\n",
      "Epoch 6/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 484.8792 - mae: 20.3363 - val_loss: 482.8587 - val_mae: 20.0484\n",
      "Epoch 7/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 468.4423 - mae: 19.9315 - val_loss: 462.8853 - val_mae: 19.5677\n",
      "Epoch 8/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 448.8136 - mae: 19.4485 - val_loss: 440.0484 - val_mae: 19.0207\n",
      "Epoch 9/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 426.7974 - mae: 18.8842 - val_loss: 414.0961 - val_mae: 18.3900\n",
      "Epoch 10/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 401.6259 - mae: 18.2382 - val_loss: 385.1555 - val_mae: 17.6632\n",
      "Epoch 11/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 373.5258 - mae: 17.4987 - val_loss: 353.4450 - val_mae: 16.8219\n",
      "Epoch 12/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 343.8590 - mae: 16.6668 - val_loss: 318.6852 - val_mae: 15.8678\n",
      "Epoch 13/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 311.1265 - mae: 15.7323 - val_loss: 282.0078 - val_mae: 14.8105\n",
      "Epoch 14/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 275.7592 - mae: 14.7211 - val_loss: 244.3757 - val_mae: 13.6537\n",
      "Epoch 15/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 240.1129 - mae: 13.5889 - val_loss: 206.0477 - val_mae: 12.3712\n",
      "Epoch 16/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 203.6558 - mae: 12.3091 - val_loss: 169.2796 - val_mae: 11.0534\n",
      "Epoch 17/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 170.1150 - mae: 11.0402 - val_loss: 135.5241 - val_mae: 9.6883\n",
      "Epoch 18/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 139.7587 - mae: 9.7898 - val_loss: 107.3257 - val_mae: 8.3865\n",
      "Epoch 19/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 112.5025 - mae: 8.5955 - val_loss: 86.0056 - val_mae: 7.3642\n",
      "Epoch 20/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 93.6613 - mae: 7.7588 - val_loss: 70.1869 - val_mae: 6.5620\n",
      "Epoch 21/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 78.3714 - mae: 7.0213 - val_loss: 59.4430 - val_mae: 5.9677\n",
      "Epoch 22/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 68.7727 - mae: 6.5363 - val_loss: 51.7494 - val_mae: 5.5322\n",
      "Epoch 23/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 61.2924 - mae: 6.1809 - val_loss: 46.0243 - val_mae: 5.2585\n",
      "Epoch 24/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 55.3282 - mae: 5.8161 - val_loss: 40.9184 - val_mae: 4.9706\n",
      "Epoch 25/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 50.5374 - mae: 5.5102 - val_loss: 36.1764 - val_mae: 4.6971\n",
      "Epoch 26/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 45.8513 - mae: 5.2275 - val_loss: 32.0590 - val_mae: 4.4336\n",
      "Epoch 27/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 42.2227 - mae: 4.9759 - val_loss: 28.3822 - val_mae: 4.1728\n",
      "Epoch 28/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 38.8378 - mae: 4.7422 - val_loss: 25.3942 - val_mae: 3.9564\n",
      "Epoch 29/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 36.3873 - mae: 4.5571 - val_loss: 23.0447 - val_mae: 3.7895\n",
      "Epoch 30/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 33.9651 - mae: 4.3824 - val_loss: 21.1461 - val_mae: 3.6382\n",
      "Epoch 31/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 32.3005 - mae: 4.2231 - val_loss: 19.5972 - val_mae: 3.5089\n",
      "Epoch 32/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 30.5282 - mae: 4.0791 - val_loss: 18.4329 - val_mae: 3.3927\n",
      "Epoch 33/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 29.4187 - mae: 3.9620 - val_loss: 17.4587 - val_mae: 3.2901\n",
      "Epoch 34/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 28.3256 - mae: 3.8508 - val_loss: 16.7386 - val_mae: 3.2039\n",
      "Epoch 35/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 27.4450 - mae: 3.7628 - val_loss: 16.1830 - val_mae: 3.1262\n",
      "Epoch 36/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 26.7705 - mae: 3.6852 - val_loss: 15.6750 - val_mae: 3.0646\n",
      "Epoch 37/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 26.0463 - mae: 3.6128 - val_loss: 15.3130 - val_mae: 3.0131\n",
      "Epoch 38/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 25.4988 - mae: 3.5508 - val_loss: 14.9464 - val_mae: 2.9686\n",
      "Epoch 39/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 25.0977 - mae: 3.5040 - val_loss: 14.7454 - val_mae: 2.9457\n",
      "Epoch 40/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 24.4789 - mae: 3.4528 - val_loss: 14.4520 - val_mae: 2.9130\n",
      "Epoch 41/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 24.0737 - mae: 3.3965 - val_loss: 14.2108 - val_mae: 2.8903\n",
      "Epoch 42/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 23.6439 - mae: 3.3546 - val_loss: 14.0466 - val_mae: 2.8743\n",
      "Epoch 43/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 23.2728 - mae: 3.3229 - val_loss: 13.8525 - val_mae: 2.8572\n",
      "Epoch 44/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 22.8791 - mae: 3.2860 - val_loss: 13.6859 - val_mae: 2.8395\n",
      "Epoch 45/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 22.6049 - mae: 3.2602 - val_loss: 13.5934 - val_mae: 2.8281\n",
      "Epoch 46/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 22.2110 - mae: 3.2228 - val_loss: 13.3940 - val_mae: 2.8052\n",
      "Epoch 47/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 21.9214 - mae: 3.1989 - val_loss: 13.2381 - val_mae: 2.7876\n",
      "Epoch 48/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 21.6144 - mae: 3.1709 - val_loss: 13.0571 - val_mae: 2.7651\n",
      "Epoch 49/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 21.2957 - mae: 3.1399 - val_loss: 12.9011 - val_mae: 2.7448\n",
      "Epoch 50/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 21.0263 - mae: 3.1146 - val_loss: 12.7553 - val_mae: 2.7258\n",
      "Epoch 51/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 20.7461 - mae: 3.0861 - val_loss: 12.7401 - val_mae: 2.7223\n",
      "Epoch 52/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 20.4851 - mae: 3.0703 - val_loss: 12.6815 - val_mae: 2.7158\n",
      "Epoch 53/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 20.1703 - mae: 3.0541 - val_loss: 12.5538 - val_mae: 2.6970\n",
      "Epoch 54/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 19.9870 - mae: 3.0384 - val_loss: 12.4463 - val_mae: 2.6828\n",
      "Epoch 55/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 19.6628 - mae: 3.0143 - val_loss: 12.3203 - val_mae: 2.6633\n",
      "Epoch 56/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 19.4566 - mae: 2.9931 - val_loss: 12.1392 - val_mae: 2.6393\n",
      "Epoch 57/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 19.2267 - mae: 2.9704 - val_loss: 12.0108 - val_mae: 2.6211\n",
      "Epoch 58/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 19.0526 - mae: 2.9543 - val_loss: 11.9249 - val_mae: 2.6054\n",
      "Epoch 59/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 18.9173 - mae: 2.9477 - val_loss: 11.9566 - val_mae: 2.6095\n",
      "Epoch 60/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 18.6292 - mae: 2.9315 - val_loss: 11.9266 - val_mae: 2.6034\n",
      "Epoch 61/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 18.3755 - mae: 2.9102 - val_loss: 11.7649 - val_mae: 2.5803\n",
      "Epoch 62/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 18.2211 - mae: 2.8880 - val_loss: 11.6794 - val_mae: 2.5650\n",
      "Epoch 63/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 18.0236 - mae: 2.8684 - val_loss: 11.6070 - val_mae: 2.5557\n",
      "Epoch 64/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 17.8119 - mae: 2.8477 - val_loss: 11.5115 - val_mae: 2.5416\n",
      "Epoch 65/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 17.6965 - mae: 2.8349 - val_loss: 11.4816 - val_mae: 2.5373\n",
      "Epoch 66/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 17.4715 - mae: 2.8117 - val_loss: 11.3380 - val_mae: 2.5182\n",
      "Epoch 67/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 17.2506 - mae: 2.7973 - val_loss: 11.3595 - val_mae: 2.5276\n",
      "Epoch 68/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 17.0811 - mae: 2.7955 - val_loss: 11.3960 - val_mae: 2.5397\n",
      "Epoch 69/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 16.9955 - mae: 2.7923 - val_loss: 11.5059 - val_mae: 2.5615\n",
      "Epoch 70/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 16.7734 - mae: 2.7746 - val_loss: 11.3555 - val_mae: 2.5401\n",
      "Epoch 71/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 16.5965 - mae: 2.7516 - val_loss: 11.3146 - val_mae: 2.5372\n",
      "Epoch 72/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 16.4120 - mae: 2.7323 - val_loss: 11.2110 - val_mae: 2.5234\n",
      "Epoch 73/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 16.2808 - mae: 2.7129 - val_loss: 11.0691 - val_mae: 2.5040\n",
      "Epoch 74/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 16.2106 - mae: 2.7030 - val_loss: 11.0449 - val_mae: 2.5159\n",
      "Epoch 75/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.9583 - mae: 2.6824 - val_loss: 10.9850 - val_mae: 2.5079\n",
      "Epoch 76/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.8546 - mae: 2.6632 - val_loss: 10.9143 - val_mae: 2.4969\n",
      "Epoch 77/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.7435 - mae: 2.6501 - val_loss: 10.9980 - val_mae: 2.5101\n",
      "Epoch 78/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 15.5870 - mae: 2.6369 - val_loss: 10.9581 - val_mae: 2.5107\n",
      "Epoch 79/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.4205 - mae: 2.6180 - val_loss: 10.9463 - val_mae: 2.5120\n",
      "Epoch 80/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 15.2729 - mae: 2.5983 - val_loss: 10.8822 - val_mae: 2.5058\n",
      "Epoch 81/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.1963 - mae: 2.5816 - val_loss: 10.7562 - val_mae: 2.4959\n",
      "Epoch 82/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.0429 - mae: 2.5735 - val_loss: 10.8198 - val_mae: 2.5101\n",
      "Epoch 83/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 14.9657 - mae: 2.5747 - val_loss: 10.9345 - val_mae: 2.5270\n",
      "Epoch 84/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 14.7849 - mae: 2.5572 - val_loss: 10.8625 - val_mae: 2.5195\n",
      "Epoch 85/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 14.7176 - mae: 2.5390 - val_loss: 10.6755 - val_mae: 2.5023\n",
      "Epoch 86/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 14.5652 - mae: 2.5183 - val_loss: 10.6105 - val_mae: 2.4979\n",
      "Epoch 87/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 14.4864 - mae: 2.5049 - val_loss: 10.6602 - val_mae: 2.5058\n",
      "Epoch 88/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 14.3321 - mae: 2.4946 - val_loss: 10.6663 - val_mae: 2.5057\n",
      "Epoch 89/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 14.2436 - mae: 2.4827 - val_loss: 10.7051 - val_mae: 2.5126\n",
      "Epoch 90/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 14.1756 - mae: 2.4751 - val_loss: 10.7377 - val_mae: 2.5205\n",
      "Epoch 91/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 14.0485 - mae: 2.4704 - val_loss: 10.6971 - val_mae: 2.5209\n",
      "Epoch 92/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 13.9315 - mae: 2.4536 - val_loss: 10.6463 - val_mae: 2.5140\n",
      "Epoch 93/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 13.8415 - mae: 2.4388 - val_loss: 10.6346 - val_mae: 2.5111\n",
      "Epoch 94/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 13.7236 - mae: 2.4270 - val_loss: 10.6625 - val_mae: 2.5203\n",
      "Epoch 95/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 13.6665 - mae: 2.4286 - val_loss: 10.7253 - val_mae: 2.5349\n",
      "Epoch 96/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 13.5251 - mae: 2.4194 - val_loss: 10.6778 - val_mae: 2.5292\n",
      "Epoch 97/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 13.4736 - mae: 2.4095 - val_loss: 10.6897 - val_mae: 2.5277\n",
      "Epoch 98/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 13.3800 - mae: 2.3956 - val_loss: 10.6873 - val_mae: 2.5277\n",
      "Epoch 99/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 13.2848 - mae: 2.3886 - val_loss: 10.7262 - val_mae: 2.5314\n",
      "Epoch 100/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 13.2075 - mae: 2.3815 - val_loss: 10.7336 - val_mae: 2.5368\n",
      "Epoch 101/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 13.1323 - mae: 2.3725 - val_loss: 10.6799 - val_mae: 2.5359\n",
      "Epoch 102/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 13.0727 - mae: 2.3752 - val_loss: 10.7790 - val_mae: 2.5534\n",
      "Epoch 103/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.9628 - mae: 2.3709 - val_loss: 10.7314 - val_mae: 2.5560\n",
      "Epoch 104/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 12.8604 - mae: 2.3613 - val_loss: 10.7099 - val_mae: 2.5595\n",
      "Epoch 105/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.8202 - mae: 2.3606 - val_loss: 10.7638 - val_mae: 2.5677\n",
      "Epoch 106/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.7633 - mae: 2.3468 - val_loss: 10.7215 - val_mae: 2.5626\n",
      "Epoch 107/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 12.6860 - mae: 2.3363 - val_loss: 10.7354 - val_mae: 2.5696\n",
      "Epoch 108/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 12.5619 - mae: 2.3344 - val_loss: 10.8067 - val_mae: 2.5789\n",
      "Epoch 109/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.5999 - mae: 2.3356 - val_loss: 10.7496 - val_mae: 2.5759\n",
      "Epoch 110/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.4587 - mae: 2.3224 - val_loss: 10.9004 - val_mae: 2.5899\n",
      "Epoch 111/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.4015 - mae: 2.3263 - val_loss: 10.9898 - val_mae: 2.5997\n",
      "Epoch 112/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.3111 - mae: 2.3246 - val_loss: 10.8880 - val_mae: 2.6021\n",
      "Epoch 113/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.3071 - mae: 2.3118 - val_loss: 10.7634 - val_mae: 2.5922\n",
      "Epoch 114/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.1745 - mae: 2.2997 - val_loss: 10.8386 - val_mae: 2.6025\n",
      "Epoch 115/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.1046 - mae: 2.2952 - val_loss: 10.9490 - val_mae: 2.6055\n",
      "Epoch 116/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.0209 - mae: 2.2879 - val_loss: 10.9963 - val_mae: 2.6089\n",
      "Epoch 117/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.9803 - mae: 2.2792 - val_loss: 10.9481 - val_mae: 2.6063\n",
      "Epoch 118/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.9352 - mae: 2.2834 - val_loss: 11.0434 - val_mae: 2.6185\n",
      "Epoch 119/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.8499 - mae: 2.2750 - val_loss: 11.0427 - val_mae: 2.6208\n",
      "Epoch 120/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.7584 - mae: 2.2642 - val_loss: 11.0870 - val_mae: 2.6242\n",
      "Epoch 121/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.6998 - mae: 2.2628 - val_loss: 11.1504 - val_mae: 2.6330\n",
      "Epoch 122/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.6508 - mae: 2.2607 - val_loss: 11.1989 - val_mae: 2.6387\n",
      "Epoch 123/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.5868 - mae: 2.2521 - val_loss: 11.1370 - val_mae: 2.6319\n",
      "Epoch 124/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 11.5149 - mae: 2.2376 - val_loss: 11.1846 - val_mae: 2.6383\n",
      "Epoch 125/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 11.5485 - mae: 2.2374 - val_loss: 11.0532 - val_mae: 2.6249\n",
      "Epoch 126/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.3550 - mae: 2.2282 - val_loss: 11.2420 - val_mae: 2.6484\n",
      "Epoch 127/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.4840 - mae: 2.2513 - val_loss: 11.4588 - val_mae: 2.6703\n",
      "Epoch 128/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.2966 - mae: 2.2476 - val_loss: 11.3065 - val_mae: 2.6589\n",
      "Epoch 129/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.2660 - mae: 2.2260 - val_loss: 11.2605 - val_mae: 2.6551\n",
      "Epoch 130/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.1769 - mae: 2.2191 - val_loss: 11.4593 - val_mae: 2.6760\n",
      "Epoch 131/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.0630 - mae: 2.2209 - val_loss: 11.3884 - val_mae: 2.6691\n",
      "Epoch 132/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.0762 - mae: 2.2213 - val_loss: 11.3745 - val_mae: 2.6690\n",
      "Epoch 133/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 10.8963 - mae: 2.1994 - val_loss: 11.2863 - val_mae: 2.6581\n",
      "Epoch 134/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 10.8897 - mae: 2.1800 - val_loss: 11.2203 - val_mae: 2.6480\n",
      "Epoch 135/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 10.8130 - mae: 2.1697 - val_loss: 11.3692 - val_mae: 2.6661\n",
      "Epoch 136/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.7518 - mae: 2.1707 - val_loss: 11.4460 - val_mae: 2.6730\n",
      "Epoch 137/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.6823 - mae: 2.1682 - val_loss: 11.5321 - val_mae: 2.6827\n",
      "Epoch 138/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.6342 - mae: 2.1731 - val_loss: 11.5028 - val_mae: 2.6809\n",
      "Epoch 139/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 10.6049 - mae: 2.1627 - val_loss: 11.5596 - val_mae: 2.6947\n",
      "Epoch 140/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 10.4972 - mae: 2.1539 - val_loss: 11.6471 - val_mae: 2.7100\n",
      "Epoch 141/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.4307 - mae: 2.1434 - val_loss: 11.5614 - val_mae: 2.6948\n",
      "Epoch 142/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.3751 - mae: 2.1374 - val_loss: 11.5302 - val_mae: 2.6874\n",
      "Epoch 143/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.3347 - mae: 2.1414 - val_loss: 11.6445 - val_mae: 2.6976\n",
      "Epoch 144/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 10.2704 - mae: 2.1340 - val_loss: 11.6104 - val_mae: 2.6972\n",
      "Epoch 145/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.2083 - mae: 2.1248 - val_loss: 11.6891 - val_mae: 2.7106\n",
      "Epoch 146/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.1484 - mae: 2.1175 - val_loss: 11.6445 - val_mae: 2.7057\n",
      "Epoch 147/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.0764 - mae: 2.1117 - val_loss: 11.7233 - val_mae: 2.7151\n",
      "Epoch 148/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.0084 - mae: 2.1070 - val_loss: 11.7336 - val_mae: 2.7200\n",
      "Epoch 149/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.9755 - mae: 2.1017 - val_loss: 11.6883 - val_mae: 2.7169\n",
      "Epoch 150/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.9169 - mae: 2.0920 - val_loss: 11.7318 - val_mae: 2.7198\n",
      "Epoch 151/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.8856 - mae: 2.0941 - val_loss: 11.9482 - val_mae: 2.7542\n",
      "Epoch 152/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.8160 - mae: 2.0871 - val_loss: 11.9241 - val_mae: 2.7563\n",
      "Epoch 153/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.7413 - mae: 2.0758 - val_loss: 11.8339 - val_mae: 2.7413\n",
      "Epoch 154/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.7030 - mae: 2.0705 - val_loss: 11.8177 - val_mae: 2.7289\n",
      "Epoch 155/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.6466 - mae: 2.0725 - val_loss: 11.8937 - val_mae: 2.7358\n",
      "Epoch 156/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.5760 - mae: 2.0600 - val_loss: 11.8822 - val_mae: 2.7392\n",
      "Epoch 157/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.5030 - mae: 2.0501 - val_loss: 11.9439 - val_mae: 2.7509\n",
      "Epoch 158/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.4395 - mae: 2.0516 - val_loss: 12.0859 - val_mae: 2.7710\n",
      "Epoch 159/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.3788 - mae: 2.0463 - val_loss: 11.9938 - val_mae: 2.7531\n",
      "Epoch 160/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.3259 - mae: 2.0446 - val_loss: 11.9136 - val_mae: 2.7405\n",
      "Epoch 161/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.2630 - mae: 2.0369 - val_loss: 11.9711 - val_mae: 2.7442\n",
      "Epoch 162/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.1895 - mae: 2.0322 - val_loss: 12.0795 - val_mae: 2.7599\n",
      "Epoch 163/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.1652 - mae: 2.0279 - val_loss: 12.0484 - val_mae: 2.7644\n",
      "Epoch 164/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.0991 - mae: 2.0171 - val_loss: 12.0545 - val_mae: 2.7533\n",
      "Epoch 165/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.1244 - mae: 2.0311 - val_loss: 12.1593 - val_mae: 2.7580\n",
      "Epoch 166/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.9881 - mae: 2.0114 - val_loss: 12.1246 - val_mae: 2.7607\n",
      "Epoch 167/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.9215 - mae: 1.9975 - val_loss: 12.2080 - val_mae: 2.7741\n",
      "Epoch 168/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.8905 - mae: 2.0000 - val_loss: 12.2880 - val_mae: 2.7874\n",
      "Epoch 169/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.7920 - mae: 2.0013 - val_loss: 12.4075 - val_mae: 2.8047\n",
      "Epoch 170/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 8.7819 - mae: 1.9979 - val_loss: 12.4050 - val_mae: 2.7916\n",
      "Epoch 171/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.7270 - mae: 1.9962 - val_loss: 12.2979 - val_mae: 2.7700\n",
      "Epoch 172/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.6032 - mae: 1.9887 - val_loss: 12.4684 - val_mae: 2.7974\n",
      "Epoch 173/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 8.6056 - mae: 1.9985 - val_loss: 12.5653 - val_mae: 2.8066\n",
      "Epoch 174/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.5081 - mae: 1.9902 - val_loss: 12.5235 - val_mae: 2.7968\n",
      "Epoch 175/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.4666 - mae: 1.9701 - val_loss: 12.3788 - val_mae: 2.7735\n",
      "Epoch 176/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.4313 - mae: 1.9618 - val_loss: 12.4373 - val_mae: 2.7761\n",
      "Epoch 177/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.4330 - mae: 1.9688 - val_loss: 12.6152 - val_mae: 2.8017\n",
      "Epoch 178/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.2913 - mae: 1.9479 - val_loss: 12.5994 - val_mae: 2.7995\n",
      "Epoch 179/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.2933 - mae: 1.9401 - val_loss: 12.5160 - val_mae: 2.7854\n",
      "Epoch 180/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.2068 - mae: 1.9332 - val_loss: 12.5708 - val_mae: 2.7965\n",
      "Epoch 181/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.1178 - mae: 1.9219 - val_loss: 12.5592 - val_mae: 2.7846\n",
      "Epoch 182/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.0911 - mae: 1.9313 - val_loss: 12.6568 - val_mae: 2.7960\n",
      "Epoch 183/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.0729 - mae: 1.9343 - val_loss: 12.9033 - val_mae: 2.8349\n",
      "Epoch 184/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.9627 - mae: 1.9347 - val_loss: 12.8079 - val_mae: 2.8191\n",
      "Epoch 185/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.9077 - mae: 1.9181 - val_loss: 12.7992 - val_mae: 2.8195\n",
      "Epoch 186/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.8999 - mae: 1.9143 - val_loss: 12.9781 - val_mae: 2.8300\n",
      "Epoch 187/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.7919 - mae: 1.9084 - val_loss: 12.9917 - val_mae: 2.8247\n",
      "Epoch 188/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.7419 - mae: 1.8988 - val_loss: 12.9179 - val_mae: 2.8109\n",
      "Epoch 189/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.7167 - mae: 1.8969 - val_loss: 12.8740 - val_mae: 2.8046\n",
      "Epoch 190/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.6335 - mae: 1.8904 - val_loss: 12.8931 - val_mae: 2.8157\n",
      "Epoch 191/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.5785 - mae: 1.8810 - val_loss: 12.9669 - val_mae: 2.8265\n",
      "Epoch 192/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.5342 - mae: 1.8774 - val_loss: 13.0179 - val_mae: 2.8295\n",
      "Epoch 193/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.4713 - mae: 1.8755 - val_loss: 13.0541 - val_mae: 2.8272\n",
      "Epoch 194/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.4258 - mae: 1.8674 - val_loss: 13.1173 - val_mae: 2.8343\n",
      "Epoch 195/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.3755 - mae: 1.8613 - val_loss: 13.1472 - val_mae: 2.8268\n",
      "Epoch 196/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.3192 - mae: 1.8607 - val_loss: 13.1830 - val_mae: 2.8350\n",
      "Epoch 197/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2729 - mae: 1.8566 - val_loss: 13.2810 - val_mae: 2.8443\n",
      "Epoch 198/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.2353 - mae: 1.8482 - val_loss: 13.3306 - val_mae: 2.8423\n",
      "Epoch 199/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.1422 - mae: 1.8408 - val_loss: 13.3872 - val_mae: 2.8456\n",
      "Epoch 200/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.0909 - mae: 1.8403 - val_loss: 13.5011 - val_mae: 2.8599\n",
      "Epoch 201/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.0646 - mae: 1.8287 - val_loss: 13.5274 - val_mae: 2.8603\n",
      "Epoch 202/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.0405 - mae: 1.8309 - val_loss: 13.4848 - val_mae: 2.8362\n",
      "Epoch 203/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.9511 - mae: 1.8270 - val_loss: 13.6468 - val_mae: 2.8543\n",
      "Epoch 204/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.8822 - mae: 1.8151 - val_loss: 13.6310 - val_mae: 2.8548\n",
      "Epoch 205/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.8990 - mae: 1.8153 - val_loss: 13.6348 - val_mae: 2.8551\n",
      "Epoch 206/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.7943 - mae: 1.8082 - val_loss: 13.7830 - val_mae: 2.8749\n",
      "Epoch 207/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.7703 - mae: 1.8247 - val_loss: 13.8726 - val_mae: 2.8720\n",
      "Epoch 208/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 6.6552 - mae: 1.8076 - val_loss: 13.8390 - val_mae: 2.8621\n",
      "Epoch 209/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.6214 - mae: 1.7917 - val_loss: 13.7411 - val_mae: 2.8457\n",
      "Epoch 210/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.6227 - mae: 1.7835 - val_loss: 14.0336 - val_mae: 2.8909\n",
      "Epoch 211/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.5513 - mae: 1.7678 - val_loss: 14.0569 - val_mae: 2.8844\n",
      "Epoch 212/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.4817 - mae: 1.7700 - val_loss: 14.0702 - val_mae: 2.8818\n",
      "Epoch 213/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.4518 - mae: 1.7640 - val_loss: 13.9970 - val_mae: 2.8625\n",
      "Epoch 214/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.4005 - mae: 1.7568 - val_loss: 14.1659 - val_mae: 2.8800\n",
      "Epoch 215/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.3289 - mae: 1.7533 - val_loss: 14.1683 - val_mae: 2.8754\n",
      "Epoch 216/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.2988 - mae: 1.7473 - val_loss: 14.2049 - val_mae: 2.8732\n",
      "Epoch 217/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.3035 - mae: 1.7488 - val_loss: 14.3714 - val_mae: 2.8917\n",
      "Epoch 218/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.2298 - mae: 1.7458 - val_loss: 14.4120 - val_mae: 2.8925\n",
      "Epoch 219/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.1440 - mae: 1.7294 - val_loss: 14.4136 - val_mae: 2.8986\n",
      "Epoch 220/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.1287 - mae: 1.7291 - val_loss: 14.4537 - val_mae: 2.9030\n",
      "Epoch 221/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.0489 - mae: 1.7114 - val_loss: 14.3283 - val_mae: 2.8731\n",
      "Epoch 222/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.1053 - mae: 1.7259 - val_loss: 14.4375 - val_mae: 2.8814\n",
      "Epoch 223/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.9887 - mae: 1.7199 - val_loss: 14.3759 - val_mae: 2.8741\n",
      "Epoch 224/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.9368 - mae: 1.7131 - val_loss: 14.5210 - val_mae: 2.8894\n",
      "Epoch 225/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.8884 - mae: 1.6995 - val_loss: 14.5051 - val_mae: 2.8864\n",
      "Epoch 226/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.8445 - mae: 1.6923 - val_loss: 14.6712 - val_mae: 2.9019\n",
      "Epoch 227/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.7932 - mae: 1.6843 - val_loss: 14.9428 - val_mae: 2.9251\n",
      "Epoch 228/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 5.7752 - mae: 1.6881 - val_loss: 15.0034 - val_mae: 2.9293\n",
      "Epoch 229/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.7014 - mae: 1.6729 - val_loss: 14.9257 - val_mae: 2.9230\n",
      "Epoch 230/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.6500 - mae: 1.6666 - val_loss: 14.9164 - val_mae: 2.9173\n",
      "Epoch 231/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.6106 - mae: 1.6626 - val_loss: 15.0818 - val_mae: 2.9385\n",
      "Epoch 232/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.5668 - mae: 1.6593 - val_loss: 15.1542 - val_mae: 2.9444\n",
      "Epoch 233/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.5336 - mae: 1.6535 - val_loss: 15.1069 - val_mae: 2.9364\n",
      "Epoch 234/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.4764 - mae: 1.6478 - val_loss: 15.1398 - val_mae: 2.9345\n",
      "Epoch 235/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.4492 - mae: 1.6411 - val_loss: 15.2580 - val_mae: 2.9460\n",
      "Epoch 236/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.3866 - mae: 1.6334 - val_loss: 15.1281 - val_mae: 2.9225\n",
      "Epoch 237/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.3585 - mae: 1.6353 - val_loss: 15.1765 - val_mae: 2.9283\n",
      "Epoch 238/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.3455 - mae: 1.6430 - val_loss: 15.2638 - val_mae: 2.9395\n",
      "Epoch 239/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.2800 - mae: 1.6293 - val_loss: 15.3524 - val_mae: 2.9493\n",
      "Epoch 240/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.2331 - mae: 1.6185 - val_loss: 15.2790 - val_mae: 2.9368\n",
      "Epoch 241/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.2189 - mae: 1.6048 - val_loss: 15.2565 - val_mae: 2.9297\n",
      "Epoch 242/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 5.1170 - mae: 1.6011 - val_loss: 15.3521 - val_mae: 2.9378\n",
      "Epoch 243/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.1798 - mae: 1.6151 - val_loss: 15.6061 - val_mae: 2.9612\n",
      "Epoch 244/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.1039 - mae: 1.6059 - val_loss: 15.7437 - val_mae: 2.9751\n",
      "Epoch 245/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.0372 - mae: 1.5931 - val_loss: 15.8602 - val_mae: 2.9856\n",
      "Epoch 246/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.0577 - mae: 1.5988 - val_loss: 16.0360 - val_mae: 2.9972\n",
      "Epoch 247/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.9633 - mae: 1.5810 - val_loss: 16.0255 - val_mae: 2.9971\n",
      "Epoch 248/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.9320 - mae: 1.5706 - val_loss: 15.9019 - val_mae: 2.9801\n",
      "Epoch 249/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 4.9293 - mae: 1.5811 - val_loss: 15.8021 - val_mae: 2.9627\n",
      "Epoch 250/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 4.8337 - mae: 1.5669 - val_loss: 16.0114 - val_mae: 2.9872\n",
      "Epoch 251/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.7977 - mae: 1.5595 - val_loss: 16.1978 - val_mae: 3.0103\n",
      "Epoch 252/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 4.7677 - mae: 1.5475 - val_loss: 16.1179 - val_mae: 3.0024\n",
      "Epoch 253/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.7602 - mae: 1.5526 - val_loss: 16.1783 - val_mae: 3.0010\n",
      "Epoch 254/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.6919 - mae: 1.5438 - val_loss: 16.1658 - val_mae: 2.9929\n",
      "Epoch 255/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.6485 - mae: 1.5358 - val_loss: 16.3051 - val_mae: 3.0079\n",
      "Epoch 256/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 4.6382 - mae: 1.5333 - val_loss: 16.3783 - val_mae: 3.0153\n",
      "Epoch 257/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 4.6202 - mae: 1.5288 - val_loss: 16.4699 - val_mae: 3.0186\n",
      "Epoch 258/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.5760 - mae: 1.5164 - val_loss: 16.5325 - val_mae: 3.0236\n",
      "Epoch 259/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.5131 - mae: 1.5137 - val_loss: 16.5027 - val_mae: 3.0218\n",
      "Epoch 260/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.5884 - mae: 1.5121 - val_loss: 16.4206 - val_mae: 3.0031\n",
      "Epoch 261/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.5234 - mae: 1.5059 - val_loss: 16.5548 - val_mae: 3.0180\n",
      "Epoch 262/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.4408 - mae: 1.4992 - val_loss: 16.7216 - val_mae: 3.0385\n",
      "Epoch 263/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.3962 - mae: 1.4879 - val_loss: 16.6484 - val_mae: 3.0321\n",
      "Epoch 264/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.3874 - mae: 1.4926 - val_loss: 16.4663 - val_mae: 3.0021\n",
      "Epoch 265/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 4.3384 - mae: 1.4847 - val_loss: 16.4924 - val_mae: 3.0008\n",
      "Epoch 266/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.3322 - mae: 1.4756 - val_loss: 16.5920 - val_mae: 3.0122\n",
      "Epoch 267/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.2350 - mae: 1.4621 - val_loss: 16.7242 - val_mae: 3.0287\n",
      "Epoch 268/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.2908 - mae: 1.4823 - val_loss: 16.8477 - val_mae: 3.0341\n",
      "Epoch 269/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.2098 - mae: 1.4754 - val_loss: 16.8561 - val_mae: 3.0267\n",
      "Epoch 270/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.1758 - mae: 1.4621 - val_loss: 17.0021 - val_mae: 3.0447\n",
      "Epoch 271/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.1870 - mae: 1.4712 - val_loss: 17.1116 - val_mae: 3.0497\n",
      "Epoch 272/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.1423 - mae: 1.4594 - val_loss: 17.1425 - val_mae: 3.0644\n",
      "Epoch 273/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.1549 - mae: 1.4475 - val_loss: 16.9407 - val_mae: 3.0362\n",
      "Epoch 274/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.0510 - mae: 1.4286 - val_loss: 17.0523 - val_mae: 3.0468\n",
      "Epoch 275/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.0498 - mae: 1.4416 - val_loss: 16.9978 - val_mae: 3.0281\n",
      "Epoch 276/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 3.9880 - mae: 1.4316 - val_loss: 17.0801 - val_mae: 3.0408\n",
      "Epoch 277/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 3.9569 - mae: 1.4205 - val_loss: 17.2841 - val_mae: 3.0677\n",
      "Epoch 278/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.9479 - mae: 1.4097 - val_loss: 17.3132 - val_mae: 3.0761\n",
      "Epoch 279/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 3.8681 - mae: 1.4077 - val_loss: 17.4570 - val_mae: 3.0898\n",
      "Epoch 280/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.9536 - mae: 1.4287 - val_loss: 17.5261 - val_mae: 3.0905\n",
      "Epoch 281/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 3.8367 - mae: 1.4175 - val_loss: 17.4613 - val_mae: 3.0791\n",
      "Epoch 282/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 3.8200 - mae: 1.4006 - val_loss: 17.4654 - val_mae: 3.0761\n",
      "Epoch 283/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 3.8064 - mae: 1.3875 - val_loss: 17.3956 - val_mae: 3.0674\n",
      "Epoch 284/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 3.7609 - mae: 1.3743 - val_loss: 17.4985 - val_mae: 3.0812\n",
      "Epoch 285/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 3.7637 - mae: 1.3859 - val_loss: 17.6140 - val_mae: 3.0865\n",
      "Epoch 286/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 3.7267 - mae: 1.3861 - val_loss: 17.5825 - val_mae: 3.0677\n",
      "Epoch 287/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 3.6951 - mae: 1.3800 - val_loss: 17.7850 - val_mae: 3.0940\n",
      "Epoch 288/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.7054 - mae: 1.3816 - val_loss: 17.8949 - val_mae: 3.1018\n",
      "Epoch 289/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 3.6463 - mae: 1.3665 - val_loss: 17.8778 - val_mae: 3.1078\n",
      "Epoch 290/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 3.6134 - mae: 1.3587 - val_loss: 17.8334 - val_mae: 3.1039\n",
      "Epoch 291/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.5933 - mae: 1.3645 - val_loss: 17.9478 - val_mae: 3.0946\n",
      "Epoch 292/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 3.5765 - mae: 1.3662 - val_loss: 18.1049 - val_mae: 3.1201\n",
      "Epoch 293/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 3.5468 - mae: 1.3495 - val_loss: 18.1552 - val_mae: 3.1270\n",
      "Epoch 294/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.5336 - mae: 1.3475 - val_loss: 18.0135 - val_mae: 3.1075\n",
      "Epoch 295/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 3.4902 - mae: 1.3457 - val_loss: 18.0919 - val_mae: 3.1221\n",
      "Epoch 296/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.4430 - mae: 1.3302 - val_loss: 18.1311 - val_mae: 3.1325\n",
      "Epoch 297/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.4226 - mae: 1.3213 - val_loss: 18.0836 - val_mae: 3.1228\n",
      "Epoch 298/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.4224 - mae: 1.3228 - val_loss: 18.0116 - val_mae: 3.1039\n",
      "Epoch 299/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 3.3726 - mae: 1.3175 - val_loss: 18.0557 - val_mae: 3.1104\n",
      "Epoch 300/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.3783 - mae: 1.3097 - val_loss: 18.2154 - val_mae: 3.1335\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 11.4271 - mae: 2.4837\n",
      "Epoch 1/300\n",
      "6/6 [==============================] - 1s 32ms/step - loss: 567.0266 - mae: 22.0720 - val_loss: 485.5049 - val_mae: 20.4897\n",
      "Epoch 2/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 550.2335 - mae: 21.7019 - val_loss: 470.8161 - val_mae: 20.1321\n",
      "Epoch 3/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 532.9720 - mae: 21.3016 - val_loss: 454.8599 - val_mae: 19.7396\n",
      "Epoch 4/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 512.9709 - mae: 20.8498 - val_loss: 437.4632 - val_mae: 19.3035\n",
      "Epoch 5/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 491.6294 - mae: 20.3457 - val_loss: 417.9264 - val_mae: 18.8079\n",
      "Epoch 6/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 466.2251 - mae: 19.7607 - val_loss: 395.8741 - val_mae: 18.2367\n",
      "Epoch 7/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 438.7378 - mae: 19.0957 - val_loss: 370.8963 - val_mae: 17.5714\n",
      "Epoch 8/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 406.2880 - mae: 18.2796 - val_loss: 342.7924 - val_mae: 16.7954\n",
      "Epoch 9/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 370.2066 - mae: 17.3426 - val_loss: 311.5498 - val_mae: 15.8876\n",
      "Epoch 10/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 331.3171 - mae: 16.2862 - val_loss: 277.4028 - val_mae: 14.8235\n",
      "Epoch 11/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 288.4537 - mae: 15.0748 - val_loss: 241.7265 - val_mae: 13.6734\n",
      "Epoch 12/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 246.7052 - mae: 13.6942 - val_loss: 205.2337 - val_mae: 12.4234\n",
      "Epoch 13/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 204.5523 - mae: 12.1927 - val_loss: 170.6118 - val_mae: 11.1467\n",
      "Epoch 14/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 168.3884 - mae: 10.7254 - val_loss: 139.4010 - val_mae: 9.8335\n",
      "Epoch 15/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 135.6788 - mae: 9.4319 - val_loss: 114.0463 - val_mae: 8.6651\n",
      "Epoch 16/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 113.3617 - mae: 8.5548 - val_loss: 94.0392 - val_mae: 7.7296\n",
      "Epoch 17/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 97.5559 - mae: 7.8301 - val_loss: 79.3517 - val_mae: 7.0072\n",
      "Epoch 18/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 83.7208 - mae: 7.1945 - val_loss: 69.1664 - val_mae: 6.4763\n",
      "Epoch 19/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 74.7115 - mae: 6.7841 - val_loss: 61.0459 - val_mae: 6.0987\n",
      "Epoch 20/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 66.8812 - mae: 6.3594 - val_loss: 54.4258 - val_mae: 5.7779\n",
      "Epoch 21/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 59.3047 - mae: 5.9433 - val_loss: 49.1696 - val_mae: 5.5051\n",
      "Epoch 22/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 52.3052 - mae: 5.5271 - val_loss: 44.8548 - val_mae: 5.2495\n",
      "Epoch 23/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 46.9200 - mae: 5.1636 - val_loss: 41.4240 - val_mae: 5.0488\n",
      "Epoch 24/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 42.3580 - mae: 4.8677 - val_loss: 38.4714 - val_mae: 4.8558\n",
      "Epoch 25/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 38.2339 - mae: 4.6086 - val_loss: 36.0541 - val_mae: 4.6871\n",
      "Epoch 26/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 35.2242 - mae: 4.3856 - val_loss: 33.9069 - val_mae: 4.5099\n",
      "Epoch 27/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 32.8884 - mae: 4.2002 - val_loss: 32.1853 - val_mae: 4.3701\n",
      "Epoch 28/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 30.8078 - mae: 4.0281 - val_loss: 30.7774 - val_mae: 4.2358\n",
      "Epoch 29/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 29.2096 - mae: 3.8810 - val_loss: 29.7855 - val_mae: 4.1327\n",
      "Epoch 30/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 28.0782 - mae: 3.7936 - val_loss: 28.9226 - val_mae: 4.0248\n",
      "Epoch 31/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 27.0182 - mae: 3.6901 - val_loss: 28.3517 - val_mae: 3.9579\n",
      "Epoch 32/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 26.1037 - mae: 3.6144 - val_loss: 27.8893 - val_mae: 3.9114\n",
      "Epoch 33/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 25.4629 - mae: 3.5694 - val_loss: 27.3985 - val_mae: 3.8513\n",
      "Epoch 34/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 24.8486 - mae: 3.5229 - val_loss: 27.0823 - val_mae: 3.8138\n",
      "Epoch 35/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 24.3127 - mae: 3.4846 - val_loss: 26.6890 - val_mae: 3.7623\n",
      "Epoch 36/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 23.8171 - mae: 3.4402 - val_loss: 26.2987 - val_mae: 3.7094\n",
      "Epoch 37/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 23.4510 - mae: 3.4071 - val_loss: 26.0266 - val_mae: 3.6864\n",
      "Epoch 38/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 22.8950 - mae: 3.3616 - val_loss: 25.5727 - val_mae: 3.6309\n",
      "Epoch 39/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 22.5060 - mae: 3.3280 - val_loss: 25.2440 - val_mae: 3.6067\n",
      "Epoch 40/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 22.1032 - mae: 3.2923 - val_loss: 24.9621 - val_mae: 3.5820\n",
      "Epoch 41/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 21.7297 - mae: 3.2576 - val_loss: 24.6730 - val_mae: 3.5539\n",
      "Epoch 42/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 21.4315 - mae: 3.2276 - val_loss: 24.3858 - val_mae: 3.5334\n",
      "Epoch 43/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 21.0145 - mae: 3.1889 - val_loss: 24.0629 - val_mae: 3.4993\n",
      "Epoch 44/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 20.6730 - mae: 3.1575 - val_loss: 23.8277 - val_mae: 3.4815\n",
      "Epoch 45/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 20.3635 - mae: 3.1332 - val_loss: 23.5103 - val_mae: 3.4481\n",
      "Epoch 46/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 20.0394 - mae: 3.1061 - val_loss: 23.2851 - val_mae: 3.4307\n",
      "Epoch 47/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 19.6909 - mae: 3.0774 - val_loss: 23.0294 - val_mae: 3.4007\n",
      "Epoch 48/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 19.3967 - mae: 3.0534 - val_loss: 22.8147 - val_mae: 3.3818\n",
      "Epoch 49/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 19.0765 - mae: 3.0317 - val_loss: 22.5856 - val_mae: 3.3582\n",
      "Epoch 50/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 18.8053 - mae: 3.0041 - val_loss: 22.3414 - val_mae: 3.3289\n",
      "Epoch 51/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 18.5260 - mae: 2.9798 - val_loss: 22.1446 - val_mae: 3.3061\n",
      "Epoch 52/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 18.2670 - mae: 2.9531 - val_loss: 21.9618 - val_mae: 3.2846\n",
      "Epoch 53/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 17.9441 - mae: 2.9263 - val_loss: 21.7723 - val_mae: 3.2588\n",
      "Epoch 54/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 17.7304 - mae: 2.9041 - val_loss: 21.5604 - val_mae: 3.2370\n",
      "Epoch 55/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 17.4657 - mae: 2.8792 - val_loss: 21.3956 - val_mae: 3.2165\n",
      "Epoch 56/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 17.1866 - mae: 2.8522 - val_loss: 21.2275 - val_mae: 3.1972\n",
      "Epoch 57/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 16.9596 - mae: 2.8298 - val_loss: 21.1181 - val_mae: 3.1895\n",
      "Epoch 58/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 16.7470 - mae: 2.8106 - val_loss: 20.9371 - val_mae: 3.1683\n",
      "Epoch 59/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 16.5181 - mae: 2.7903 - val_loss: 20.8402 - val_mae: 3.1577\n",
      "Epoch 60/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 16.3010 - mae: 2.7708 - val_loss: 20.6985 - val_mae: 3.1401\n",
      "Epoch 61/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 16.0723 - mae: 2.7448 - val_loss: 20.4814 - val_mae: 3.1181\n",
      "Epoch 62/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.8399 - mae: 2.7197 - val_loss: 20.3006 - val_mae: 3.1005\n",
      "Epoch 63/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.6360 - mae: 2.7006 - val_loss: 20.2229 - val_mae: 3.0914\n",
      "Epoch 64/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.4215 - mae: 2.6829 - val_loss: 20.2111 - val_mae: 3.0886\n",
      "Epoch 65/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 15.1945 - mae: 2.6668 - val_loss: 20.0485 - val_mae: 3.0718\n",
      "Epoch 66/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.0236 - mae: 2.6533 - val_loss: 20.0594 - val_mae: 3.0663\n",
      "Epoch 67/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 14.7536 - mae: 2.6325 - val_loss: 19.9509 - val_mae: 3.0509\n",
      "Epoch 68/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 14.5812 - mae: 2.6163 - val_loss: 19.9093 - val_mae: 3.0378\n",
      "Epoch 69/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 14.3786 - mae: 2.5998 - val_loss: 19.8588 - val_mae: 3.0287\n",
      "Epoch 70/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 14.1869 - mae: 2.5813 - val_loss: 19.6484 - val_mae: 2.9962\n",
      "Epoch 71/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 14.0152 - mae: 2.5658 - val_loss: 19.6184 - val_mae: 2.9826\n",
      "Epoch 72/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 13.8320 - mae: 2.5494 - val_loss: 19.5940 - val_mae: 2.9780\n",
      "Epoch 73/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 13.6547 - mae: 2.5316 - val_loss: 19.4943 - val_mae: 2.9694\n",
      "Epoch 74/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 13.5264 - mae: 2.5248 - val_loss: 19.5214 - val_mae: 2.9656\n",
      "Epoch 75/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 13.3596 - mae: 2.5141 - val_loss: 19.4255 - val_mae: 2.9504\n",
      "Epoch 76/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 13.2106 - mae: 2.4987 - val_loss: 19.3440 - val_mae: 2.9287\n",
      "Epoch 77/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 13.0673 - mae: 2.4863 - val_loss: 19.2362 - val_mae: 2.9065\n",
      "Epoch 78/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 12.9298 - mae: 2.4717 - val_loss: 19.1090 - val_mae: 2.8941\n",
      "Epoch 79/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 12.7913 - mae: 2.4556 - val_loss: 19.0474 - val_mae: 2.8798\n",
      "Epoch 80/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 12.6740 - mae: 2.4462 - val_loss: 18.9484 - val_mae: 2.8663\n",
      "Epoch 81/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.5702 - mae: 2.4351 - val_loss: 18.9413 - val_mae: 2.8571\n",
      "Epoch 82/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 12.4332 - mae: 2.4235 - val_loss: 18.7901 - val_mae: 2.8362\n",
      "Epoch 83/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 12.3163 - mae: 2.4107 - val_loss: 18.7532 - val_mae: 2.8217\n",
      "Epoch 84/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.2382 - mae: 2.4051 - val_loss: 18.6113 - val_mae: 2.8028\n",
      "Epoch 85/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.1622 - mae: 2.3953 - val_loss: 18.7472 - val_mae: 2.8025\n",
      "Epoch 86/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 12.0231 - mae: 2.3910 - val_loss: 18.7018 - val_mae: 2.7904\n",
      "Epoch 87/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 11.8858 - mae: 2.3840 - val_loss: 18.7557 - val_mae: 2.7919\n",
      "Epoch 88/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.8358 - mae: 2.3789 - val_loss: 18.7499 - val_mae: 2.7874\n",
      "Epoch 89/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.7530 - mae: 2.3707 - val_loss: 18.5190 - val_mae: 2.7577\n",
      "Epoch 90/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 11.6155 - mae: 2.3524 - val_loss: 18.4739 - val_mae: 2.7546\n",
      "Epoch 91/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.5030 - mae: 2.3385 - val_loss: 18.5037 - val_mae: 2.7600\n",
      "Epoch 92/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.4500 - mae: 2.3339 - val_loss: 18.4797 - val_mae: 2.7620\n",
      "Epoch 93/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.3727 - mae: 2.3289 - val_loss: 18.3553 - val_mae: 2.7311\n",
      "Epoch 94/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.2687 - mae: 2.3226 - val_loss: 18.4506 - val_mae: 2.7385\n",
      "Epoch 95/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.1722 - mae: 2.3128 - val_loss: 18.4677 - val_mae: 2.7425\n",
      "Epoch 96/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.0906 - mae: 2.3018 - val_loss: 18.4392 - val_mae: 2.7392\n",
      "Epoch 97/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.0313 - mae: 2.2898 - val_loss: 18.2770 - val_mae: 2.7160\n",
      "Epoch 98/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.9705 - mae: 2.2790 - val_loss: 18.1647 - val_mae: 2.6933\n",
      "Epoch 99/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 10.8850 - mae: 2.2702 - val_loss: 18.2178 - val_mae: 2.6922\n",
      "Epoch 100/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 10.8185 - mae: 2.2658 - val_loss: 18.3331 - val_mae: 2.7065\n",
      "Epoch 101/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.7797 - mae: 2.2654 - val_loss: 18.3816 - val_mae: 2.7130\n",
      "Epoch 102/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.6915 - mae: 2.2553 - val_loss: 18.1979 - val_mae: 2.6890\n",
      "Epoch 103/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.6293 - mae: 2.2437 - val_loss: 18.1273 - val_mae: 2.6797\n",
      "Epoch 104/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.5839 - mae: 2.2357 - val_loss: 18.0602 - val_mae: 2.6826\n",
      "Epoch 105/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 10.4994 - mae: 2.2296 - val_loss: 18.0544 - val_mae: 2.6764\n",
      "Epoch 106/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.4306 - mae: 2.2277 - val_loss: 18.0998 - val_mae: 2.6719\n",
      "Epoch 107/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 10.4168 - mae: 2.2221 - val_loss: 17.9706 - val_mae: 2.6528\n",
      "Epoch 108/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 10.3096 - mae: 2.2130 - val_loss: 18.2611 - val_mae: 2.6855\n",
      "Epoch 109/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.3124 - mae: 2.2210 - val_loss: 18.4664 - val_mae: 2.7103\n",
      "Epoch 110/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.2223 - mae: 2.2163 - val_loss: 18.3447 - val_mae: 2.6923\n",
      "Epoch 111/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.1800 - mae: 2.2028 - val_loss: 18.1997 - val_mae: 2.6621\n",
      "Epoch 112/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.1233 - mae: 2.2021 - val_loss: 18.3775 - val_mae: 2.6820\n",
      "Epoch 113/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 10.0423 - mae: 2.1948 - val_loss: 18.4150 - val_mae: 2.6886\n",
      "Epoch 114/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.0333 - mae: 2.1956 - val_loss: 18.5100 - val_mae: 2.7047\n",
      "Epoch 115/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.9557 - mae: 2.1865 - val_loss: 18.3180 - val_mae: 2.6816\n",
      "Epoch 116/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.9121 - mae: 2.1794 - val_loss: 18.2754 - val_mae: 2.6642\n",
      "Epoch 117/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.9146 - mae: 2.1810 - val_loss: 18.3848 - val_mae: 2.6843\n",
      "Epoch 118/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.8005 - mae: 2.1702 - val_loss: 18.2834 - val_mae: 2.6688\n",
      "Epoch 119/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.7967 - mae: 2.1634 - val_loss: 18.1183 - val_mae: 2.6487\n",
      "Epoch 120/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 9.7452 - mae: 2.1588 - val_loss: 18.3020 - val_mae: 2.6704\n",
      "Epoch 121/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.7096 - mae: 2.1590 - val_loss: 18.4813 - val_mae: 2.6844\n",
      "Epoch 122/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.6324 - mae: 2.1569 - val_loss: 18.2867 - val_mae: 2.6632\n",
      "Epoch 123/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.5882 - mae: 2.1430 - val_loss: 18.2061 - val_mae: 2.6457\n",
      "Epoch 124/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.6013 - mae: 2.1430 - val_loss: 18.0987 - val_mae: 2.6302\n",
      "Epoch 125/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.5139 - mae: 2.1429 - val_loss: 18.4726 - val_mae: 2.6683\n",
      "Epoch 126/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.4705 - mae: 2.1374 - val_loss: 18.5339 - val_mae: 2.6787\n",
      "Epoch 127/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.4401 - mae: 2.1321 - val_loss: 18.5455 - val_mae: 2.6758\n",
      "Epoch 128/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.3769 - mae: 2.1222 - val_loss: 18.4980 - val_mae: 2.6717\n",
      "Epoch 129/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.3586 - mae: 2.1201 - val_loss: 18.3802 - val_mae: 2.6651\n",
      "Epoch 130/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.3918 - mae: 2.1275 - val_loss: 18.2147 - val_mae: 2.6416\n",
      "Epoch 131/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.3190 - mae: 2.1129 - val_loss: 18.1299 - val_mae: 2.6396\n",
      "Epoch 132/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.2323 - mae: 2.0972 - val_loss: 18.3954 - val_mae: 2.6705\n",
      "Epoch 133/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.2894 - mae: 2.1010 - val_loss: 18.6688 - val_mae: 2.6943\n",
      "Epoch 134/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.2009 - mae: 2.0958 - val_loss: 18.6060 - val_mae: 2.6857\n",
      "Epoch 135/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.1632 - mae: 2.0953 - val_loss: 18.5280 - val_mae: 2.6777\n",
      "Epoch 136/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.1257 - mae: 2.0890 - val_loss: 18.4633 - val_mae: 2.6701\n",
      "Epoch 137/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 9.1253 - mae: 2.0802 - val_loss: 18.2999 - val_mae: 2.6519\n",
      "Epoch 138/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.0730 - mae: 2.0707 - val_loss: 18.4804 - val_mae: 2.6735\n",
      "Epoch 139/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.0215 - mae: 2.0727 - val_loss: 18.4652 - val_mae: 2.6733\n",
      "Epoch 140/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.0196 - mae: 2.0684 - val_loss: 18.2013 - val_mae: 2.6425\n",
      "Epoch 141/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.9817 - mae: 2.0635 - val_loss: 18.1907 - val_mae: 2.6358\n",
      "Epoch 142/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.9207 - mae: 2.0565 - val_loss: 18.2872 - val_mae: 2.6496\n",
      "Epoch 143/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.8908 - mae: 2.0440 - val_loss: 18.5456 - val_mae: 2.6789\n",
      "Epoch 144/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 8.9062 - mae: 2.0504 - val_loss: 18.6435 - val_mae: 2.6853\n",
      "Epoch 145/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.8460 - mae: 2.0457 - val_loss: 18.5283 - val_mae: 2.6717\n",
      "Epoch 146/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.8333 - mae: 2.0438 - val_loss: 18.3848 - val_mae: 2.6576\n",
      "Epoch 147/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.8408 - mae: 2.0457 - val_loss: 18.3534 - val_mae: 2.6470\n",
      "Epoch 148/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.7826 - mae: 2.0390 - val_loss: 18.4242 - val_mae: 2.6672\n",
      "Epoch 149/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.7704 - mae: 2.0295 - val_loss: 18.2931 - val_mae: 2.6533\n",
      "Epoch 150/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.7036 - mae: 2.0282 - val_loss: 18.4073 - val_mae: 2.6671\n",
      "Epoch 151/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.6992 - mae: 2.0398 - val_loss: 18.7563 - val_mae: 2.7033\n",
      "Epoch 152/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.6814 - mae: 2.0409 - val_loss: 18.7773 - val_mae: 2.7024\n",
      "Epoch 153/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.6986 - mae: 2.0387 - val_loss: 18.5648 - val_mae: 2.6788\n",
      "Epoch 154/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.6116 - mae: 2.0180 - val_loss: 18.6298 - val_mae: 2.6890\n",
      "Epoch 155/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.5822 - mae: 2.0101 - val_loss: 18.6195 - val_mae: 2.6863\n",
      "Epoch 156/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.5590 - mae: 2.0033 - val_loss: 18.5571 - val_mae: 2.6773\n",
      "Epoch 157/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.5576 - mae: 2.0082 - val_loss: 18.3898 - val_mae: 2.6570\n",
      "Epoch 158/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.5689 - mae: 2.0169 - val_loss: 18.5914 - val_mae: 2.6710\n",
      "Epoch 159/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 8.5257 - mae: 2.0030 - val_loss: 18.5422 - val_mae: 2.6791\n",
      "Epoch 160/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.5375 - mae: 1.9920 - val_loss: 18.7698 - val_mae: 2.7042\n",
      "Epoch 161/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.4408 - mae: 1.9905 - val_loss: 18.6957 - val_mae: 2.6843\n",
      "Epoch 162/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.4285 - mae: 1.9955 - val_loss: 18.5371 - val_mae: 2.6616\n",
      "Epoch 163/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.4565 - mae: 1.9938 - val_loss: 18.4408 - val_mae: 2.6549\n",
      "Epoch 164/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.4009 - mae: 1.9840 - val_loss: 18.6486 - val_mae: 2.6792\n",
      "Epoch 165/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.3531 - mae: 1.9776 - val_loss: 18.6649 - val_mae: 2.6820\n",
      "Epoch 166/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.3192 - mae: 1.9712 - val_loss: 18.6229 - val_mae: 2.6769\n",
      "Epoch 167/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.3513 - mae: 1.9806 - val_loss: 18.7523 - val_mae: 2.6905\n",
      "Epoch 168/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 8.2936 - mae: 1.9740 - val_loss: 18.6235 - val_mae: 2.6695\n",
      "Epoch 169/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.3355 - mae: 1.9762 - val_loss: 18.4942 - val_mae: 2.6467\n",
      "Epoch 170/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.3183 - mae: 1.9667 - val_loss: 18.9904 - val_mae: 2.7073\n",
      "Epoch 171/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.2261 - mae: 1.9594 - val_loss: 18.8952 - val_mae: 2.6957\n",
      "Epoch 172/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.2197 - mae: 1.9699 - val_loss: 18.8820 - val_mae: 2.6927\n",
      "Epoch 173/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.2408 - mae: 1.9758 - val_loss: 18.6546 - val_mae: 2.6733\n",
      "Epoch 174/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.1646 - mae: 1.9562 - val_loss: 18.7566 - val_mae: 2.6799\n",
      "Epoch 175/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.1638 - mae: 1.9566 - val_loss: 18.9187 - val_mae: 2.6974\n",
      "Epoch 176/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.1437 - mae: 1.9508 - val_loss: 18.7158 - val_mae: 2.6752\n",
      "Epoch 177/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.1096 - mae: 1.9428 - val_loss: 18.7052 - val_mae: 2.6800\n",
      "Epoch 178/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.1048 - mae: 1.9422 - val_loss: 19.0189 - val_mae: 2.7063\n",
      "Epoch 179/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.0789 - mae: 1.9478 - val_loss: 18.9266 - val_mae: 2.6888\n",
      "Epoch 180/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.0488 - mae: 1.9427 - val_loss: 19.0596 - val_mae: 2.6971\n",
      "Epoch 181/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.1964 - mae: 1.9521 - val_loss: 19.0486 - val_mae: 2.7110\n",
      "Epoch 182/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.9996 - mae: 1.9246 - val_loss: 18.7792 - val_mae: 2.6682\n",
      "Epoch 183/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.9920 - mae: 1.9315 - val_loss: 18.6882 - val_mae: 2.6528\n",
      "Epoch 184/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.0203 - mae: 1.9405 - val_loss: 18.7629 - val_mae: 2.6681\n",
      "Epoch 185/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.9506 - mae: 1.9254 - val_loss: 18.9285 - val_mae: 2.6870\n",
      "Epoch 186/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.9460 - mae: 1.9200 - val_loss: 19.0078 - val_mae: 2.7018\n",
      "Epoch 187/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.9115 - mae: 1.9160 - val_loss: 19.0551 - val_mae: 2.6977\n",
      "Epoch 188/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.9224 - mae: 1.9161 - val_loss: 18.9043 - val_mae: 2.6743\n",
      "Epoch 189/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 7.8677 - mae: 1.9108 - val_loss: 19.0379 - val_mae: 2.6886\n",
      "Epoch 190/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.8606 - mae: 1.9005 - val_loss: 19.1239 - val_mae: 2.7021\n",
      "Epoch 191/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.8548 - mae: 1.9023 - val_loss: 18.9727 - val_mae: 2.6831\n",
      "Epoch 192/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.8473 - mae: 1.9008 - val_loss: 18.8644 - val_mae: 2.6671\n",
      "Epoch 193/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.8525 - mae: 1.9111 - val_loss: 19.3456 - val_mae: 2.7099\n",
      "Epoch 194/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.8212 - mae: 1.9117 - val_loss: 19.4456 - val_mae: 2.7204\n",
      "Epoch 195/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.7924 - mae: 1.9050 - val_loss: 19.2625 - val_mae: 2.7035\n",
      "Epoch 196/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.7770 - mae: 1.9032 - val_loss: 19.1766 - val_mae: 2.6890\n",
      "Epoch 197/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.7452 - mae: 1.9008 - val_loss: 19.2672 - val_mae: 2.7021\n",
      "Epoch 198/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.7325 - mae: 1.8935 - val_loss: 19.2570 - val_mae: 2.7133\n",
      "Epoch 199/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.7081 - mae: 1.8915 - val_loss: 19.0580 - val_mae: 2.6849\n",
      "Epoch 200/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.7712 - mae: 1.8909 - val_loss: 18.9163 - val_mae: 2.6700\n",
      "Epoch 201/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.7240 - mae: 1.8913 - val_loss: 19.5620 - val_mae: 2.7307\n",
      "Epoch 202/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.6558 - mae: 1.8892 - val_loss: 19.6420 - val_mae: 2.7386\n",
      "Epoch 203/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 7.6369 - mae: 1.8834 - val_loss: 19.4930 - val_mae: 2.7316\n",
      "Epoch 204/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.6171 - mae: 1.8707 - val_loss: 19.5022 - val_mae: 2.7283\n",
      "Epoch 205/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.5984 - mae: 1.8703 - val_loss: 19.4179 - val_mae: 2.7103\n",
      "Epoch 206/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.6500 - mae: 1.8838 - val_loss: 19.1675 - val_mae: 2.6833\n",
      "Epoch 207/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.5975 - mae: 1.8690 - val_loss: 19.3072 - val_mae: 2.7098\n",
      "Epoch 208/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.5408 - mae: 1.8608 - val_loss: 19.4435 - val_mae: 2.7280\n",
      "Epoch 209/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.5364 - mae: 1.8587 - val_loss: 19.4110 - val_mae: 2.7212\n",
      "Epoch 210/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.5051 - mae: 1.8586 - val_loss: 19.3110 - val_mae: 2.7029\n",
      "Epoch 211/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.5186 - mae: 1.8570 - val_loss: 19.2131 - val_mae: 2.6876\n",
      "Epoch 212/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 7.4606 - mae: 1.8568 - val_loss: 19.5233 - val_mae: 2.7232\n",
      "Epoch 213/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.4334 - mae: 1.8484 - val_loss: 19.6575 - val_mae: 2.7470\n",
      "Epoch 214/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 7.5009 - mae: 1.8541 - val_loss: 19.5357 - val_mae: 2.7322\n",
      "Epoch 215/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.4286 - mae: 1.8441 - val_loss: 19.6257 - val_mae: 2.7333\n",
      "Epoch 216/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.4135 - mae: 1.8468 - val_loss: 19.5849 - val_mae: 2.7250\n",
      "Epoch 217/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.4181 - mae: 1.8586 - val_loss: 20.0425 - val_mae: 2.7669\n",
      "Epoch 218/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.4317 - mae: 1.8714 - val_loss: 20.0350 - val_mae: 2.7660\n",
      "Epoch 219/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.3800 - mae: 1.8512 - val_loss: 19.7537 - val_mae: 2.7479\n",
      "Epoch 220/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 7.3333 - mae: 1.8361 - val_loss: 19.5766 - val_mae: 2.7281\n",
      "Epoch 221/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.3202 - mae: 1.8359 - val_loss: 19.4852 - val_mae: 2.7208\n",
      "Epoch 222/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.3087 - mae: 1.8402 - val_loss: 19.4412 - val_mae: 2.7070\n",
      "Epoch 223/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2999 - mae: 1.8380 - val_loss: 19.5790 - val_mae: 2.7241\n",
      "Epoch 224/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2739 - mae: 1.8284 - val_loss: 19.6148 - val_mae: 2.7301\n",
      "Epoch 225/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2762 - mae: 1.8232 - val_loss: 19.6683 - val_mae: 2.7385\n",
      "Epoch 226/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2303 - mae: 1.8273 - val_loss: 19.8765 - val_mae: 2.7490\n",
      "Epoch 227/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 7.2369 - mae: 1.8296 - val_loss: 19.8831 - val_mae: 2.7384\n",
      "Epoch 228/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2726 - mae: 1.8395 - val_loss: 20.0547 - val_mae: 2.7573\n",
      "Epoch 229/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.1914 - mae: 1.8224 - val_loss: 19.8066 - val_mae: 2.7377\n",
      "Epoch 230/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.2016 - mae: 1.8211 - val_loss: 19.5666 - val_mae: 2.7203\n",
      "Epoch 231/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.1855 - mae: 1.8199 - val_loss: 19.5345 - val_mae: 2.7191\n",
      "Epoch 232/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.1997 - mae: 1.8113 - val_loss: 19.9568 - val_mae: 2.7654\n",
      "Epoch 233/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.1673 - mae: 1.8124 - val_loss: 19.8793 - val_mae: 2.7495\n",
      "Epoch 234/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.1263 - mae: 1.8127 - val_loss: 19.7664 - val_mae: 2.7379\n",
      "Epoch 235/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.1118 - mae: 1.8078 - val_loss: 19.6987 - val_mae: 2.7285\n",
      "Epoch 236/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.0918 - mae: 1.8076 - val_loss: 19.6334 - val_mae: 2.7252\n",
      "Epoch 237/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.0888 - mae: 1.8113 - val_loss: 19.8317 - val_mae: 2.7404\n",
      "Epoch 238/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.0700 - mae: 1.8039 - val_loss: 20.0242 - val_mae: 2.7605\n",
      "Epoch 239/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.0658 - mae: 1.8029 - val_loss: 20.2354 - val_mae: 2.7821\n",
      "Epoch 240/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.0563 - mae: 1.8046 - val_loss: 20.1840 - val_mae: 2.7670\n",
      "Epoch 241/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.0198 - mae: 1.8020 - val_loss: 20.0676 - val_mae: 2.7581\n",
      "Epoch 242/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.0788 - mae: 1.8058 - val_loss: 19.7064 - val_mae: 2.7300\n",
      "Epoch 243/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.9924 - mae: 1.7881 - val_loss: 19.9066 - val_mae: 2.7459\n",
      "Epoch 244/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 6.9647 - mae: 1.7843 - val_loss: 19.9650 - val_mae: 2.7479\n",
      "Epoch 245/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.9658 - mae: 1.7859 - val_loss: 20.0854 - val_mae: 2.7573\n",
      "Epoch 246/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.9592 - mae: 1.7901 - val_loss: 19.8930 - val_mae: 2.7448\n",
      "Epoch 247/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.9470 - mae: 1.7888 - val_loss: 19.9730 - val_mae: 2.7533\n",
      "Epoch 248/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.9156 - mae: 1.7812 - val_loss: 19.8966 - val_mae: 2.7434\n",
      "Epoch 249/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.9329 - mae: 1.7745 - val_loss: 19.8317 - val_mae: 2.7419\n",
      "Epoch 250/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.9018 - mae: 1.7773 - val_loss: 20.1783 - val_mae: 2.7628\n",
      "Epoch 251/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.8858 - mae: 1.7907 - val_loss: 20.3988 - val_mae: 2.7763\n",
      "Epoch 252/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.8858 - mae: 1.7838 - val_loss: 20.2846 - val_mae: 2.7663\n",
      "Epoch 253/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.8350 - mae: 1.7748 - val_loss: 20.3621 - val_mae: 2.7778\n",
      "Epoch 254/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.8403 - mae: 1.7684 - val_loss: 20.1257 - val_mae: 2.7684\n",
      "Epoch 255/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.8024 - mae: 1.7570 - val_loss: 20.1174 - val_mae: 2.7658\n",
      "Epoch 256/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.8077 - mae: 1.7684 - val_loss: 20.3028 - val_mae: 2.7725\n",
      "Epoch 257/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7987 - mae: 1.7751 - val_loss: 20.2701 - val_mae: 2.7687\n",
      "Epoch 258/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7656 - mae: 1.7631 - val_loss: 20.1505 - val_mae: 2.7650\n",
      "Epoch 259/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7445 - mae: 1.7528 - val_loss: 20.2158 - val_mae: 2.7725\n",
      "Epoch 260/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.7496 - mae: 1.7567 - val_loss: 20.3913 - val_mae: 2.7836\n",
      "Epoch 261/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.7264 - mae: 1.7517 - val_loss: 20.1809 - val_mae: 2.7647\n",
      "Epoch 262/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7284 - mae: 1.7506 - val_loss: 20.2527 - val_mae: 2.7682\n",
      "Epoch 263/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7096 - mae: 1.7535 - val_loss: 20.3305 - val_mae: 2.7757\n",
      "Epoch 264/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7033 - mae: 1.7491 - val_loss: 20.4839 - val_mae: 2.7971\n",
      "Epoch 265/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.6881 - mae: 1.7403 - val_loss: 20.2643 - val_mae: 2.7828\n",
      "Epoch 266/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7159 - mae: 1.7390 - val_loss: 20.1255 - val_mae: 2.7692\n",
      "Epoch 267/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.6597 - mae: 1.7450 - val_loss: 20.4097 - val_mae: 2.7792\n",
      "Epoch 268/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7043 - mae: 1.7574 - val_loss: 20.8940 - val_mae: 2.8145\n",
      "Epoch 269/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.6414 - mae: 1.7528 - val_loss: 20.6396 - val_mae: 2.8006\n",
      "Epoch 270/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.6194 - mae: 1.7412 - val_loss: 20.2771 - val_mae: 2.7777\n",
      "Epoch 271/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.6167 - mae: 1.7395 - val_loss: 20.3972 - val_mae: 2.7858\n",
      "Epoch 272/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.6071 - mae: 1.7335 - val_loss: 20.1719 - val_mae: 2.7723\n",
      "Epoch 273/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 6.5829 - mae: 1.7232 - val_loss: 20.3838 - val_mae: 2.7849\n",
      "Epoch 274/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 6.5545 - mae: 1.7286 - val_loss: 20.4115 - val_mae: 2.7782\n",
      "Epoch 275/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.5840 - mae: 1.7340 - val_loss: 20.6356 - val_mae: 2.7936\n",
      "Epoch 276/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.5882 - mae: 1.7344 - val_loss: 20.2527 - val_mae: 2.7706\n",
      "Epoch 277/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.4815 - mae: 1.7147 - val_loss: 20.5061 - val_mae: 2.7948\n",
      "Epoch 278/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.5158 - mae: 1.7261 - val_loss: 20.9136 - val_mae: 2.8251\n",
      "Epoch 279/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.5221 - mae: 1.7387 - val_loss: 20.8699 - val_mae: 2.8176\n",
      "Epoch 280/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.4811 - mae: 1.7291 - val_loss: 20.6960 - val_mae: 2.8047\n",
      "Epoch 281/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.4828 - mae: 1.7182 - val_loss: 20.3036 - val_mae: 2.7781\n",
      "Epoch 282/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.5170 - mae: 1.7121 - val_loss: 20.4363 - val_mae: 2.7858\n",
      "Epoch 283/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.4500 - mae: 1.7111 - val_loss: 20.5868 - val_mae: 2.7979\n",
      "Epoch 284/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.4169 - mae: 1.7133 - val_loss: 20.5680 - val_mae: 2.7931\n",
      "Epoch 285/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 6.4129 - mae: 1.7084 - val_loss: 20.5166 - val_mae: 2.7893\n",
      "Epoch 286/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.3855 - mae: 1.7000 - val_loss: 20.5100 - val_mae: 2.7892\n",
      "Epoch 287/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.3809 - mae: 1.7061 - val_loss: 20.7070 - val_mae: 2.8022\n",
      "Epoch 288/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.3620 - mae: 1.7030 - val_loss: 20.7486 - val_mae: 2.8053\n",
      "Epoch 289/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.3576 - mae: 1.6987 - val_loss: 20.7414 - val_mae: 2.8011\n",
      "Epoch 290/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.3676 - mae: 1.6921 - val_loss: 20.5736 - val_mae: 2.7913\n",
      "Epoch 291/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.4158 - mae: 1.7059 - val_loss: 20.9220 - val_mae: 2.8148\n",
      "Epoch 292/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.3190 - mae: 1.6990 - val_loss: 20.6198 - val_mae: 2.7946\n",
      "Epoch 293/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.3103 - mae: 1.6860 - val_loss: 20.5580 - val_mae: 2.7858\n",
      "Epoch 294/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.3484 - mae: 1.6995 - val_loss: 20.8449 - val_mae: 2.8072\n",
      "Epoch 295/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.2601 - mae: 1.6823 - val_loss: 20.8501 - val_mae: 2.8090\n",
      "Epoch 296/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.2928 - mae: 1.6977 - val_loss: 20.8603 - val_mae: 2.8113\n",
      "Epoch 297/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.2719 - mae: 1.6913 - val_loss: 20.6366 - val_mae: 2.7968\n",
      "Epoch 298/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.2755 - mae: 1.6862 - val_loss: 20.8083 - val_mae: 2.8067\n",
      "Epoch 299/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.2208 - mae: 1.6809 - val_loss: 20.8157 - val_mae: 2.8060\n",
      "Epoch 300/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.2367 - mae: 1.6805 - val_loss: 20.8078 - val_mae: 2.8098\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 11.0242 - mae: 2.3832\n",
      "Epoch 1/300\n",
      "6/6 [==============================] - 1s 44ms/step - loss: 530.3929 - mae: 21.3152 - val_loss: 581.0107 - val_mae: 22.4100\n",
      "Epoch 2/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 509.5590 - mae: 20.8155 - val_loss: 562.3293 - val_mae: 21.9801\n",
      "Epoch 3/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 490.7152 - mae: 20.3467 - val_loss: 543.7386 - val_mae: 21.5465\n",
      "Epoch 4/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 471.4312 - mae: 19.8624 - val_loss: 523.8943 - val_mae: 21.0777\n",
      "Epoch 5/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 450.9251 - mae: 19.3384 - val_loss: 501.2863 - val_mae: 20.5339\n",
      "Epoch 6/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 427.2881 - mae: 18.7332 - val_loss: 474.9314 - val_mae: 19.8937\n",
      "Epoch 7/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 400.8563 - mae: 18.0391 - val_loss: 444.7355 - val_mae: 19.1794\n",
      "Epoch 8/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 372.0273 - mae: 17.2619 - val_loss: 410.6570 - val_mae: 18.3572\n",
      "Epoch 9/300\n",
      "6/6 [==============================] - 0s 20ms/step - loss: 338.4087 - mae: 16.3432 - val_loss: 373.9494 - val_mae: 17.4385\n",
      "Epoch 10/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 303.3549 - mae: 15.3732 - val_loss: 334.3651 - val_mae: 16.4008\n",
      "Epoch 11/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 266.1119 - mae: 14.2779 - val_loss: 293.3481 - val_mae: 15.2547\n",
      "Epoch 12/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 226.6472 - mae: 13.0848 - val_loss: 252.8660 - val_mae: 14.0564\n",
      "Epoch 13/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 190.5819 - mae: 11.8081 - val_loss: 212.8448 - val_mae: 12.7193\n",
      "Epoch 14/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 154.4944 - mae: 10.4577 - val_loss: 176.6601 - val_mae: 11.3416\n",
      "Epoch 15/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 124.8008 - mae: 9.2099 - val_loss: 145.3327 - val_mae: 10.0953\n",
      "Epoch 16/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 98.9977 - mae: 8.0266 - val_loss: 120.9568 - val_mae: 9.0786\n",
      "Epoch 17/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 79.2948 - mae: 7.1232 - val_loss: 103.1736 - val_mae: 8.2832\n",
      "Epoch 18/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 65.4955 - mae: 6.3894 - val_loss: 90.5757 - val_mae: 7.6295\n",
      "Epoch 19/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 56.2629 - mae: 5.8508 - val_loss: 81.5219 - val_mae: 7.1280\n",
      "Epoch 20/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 50.6982 - mae: 5.4428 - val_loss: 74.6082 - val_mae: 6.7230\n",
      "Epoch 21/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 45.4047 - mae: 5.0938 - val_loss: 68.9503 - val_mae: 6.3587\n",
      "Epoch 22/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 41.3789 - mae: 4.8399 - val_loss: 63.7449 - val_mae: 6.0228\n",
      "Epoch 23/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 38.0388 - mae: 4.6262 - val_loss: 58.9511 - val_mae: 5.6886\n",
      "Epoch 24/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 34.4706 - mae: 4.4086 - val_loss: 54.9332 - val_mae: 5.4157\n",
      "Epoch 25/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 31.9988 - mae: 4.2407 - val_loss: 51.2933 - val_mae: 5.1727\n",
      "Epoch 26/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 29.6245 - mae: 4.0713 - val_loss: 48.1935 - val_mae: 4.9642\n",
      "Epoch 27/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 27.7394 - mae: 3.9478 - val_loss: 45.5045 - val_mae: 4.7958\n",
      "Epoch 28/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 26.0881 - mae: 3.8216 - val_loss: 43.1407 - val_mae: 4.6628\n",
      "Epoch 29/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 24.5597 - mae: 3.7071 - val_loss: 41.1660 - val_mae: 4.5376\n",
      "Epoch 30/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 23.4030 - mae: 3.6118 - val_loss: 39.4349 - val_mae: 4.4260\n",
      "Epoch 31/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 22.4004 - mae: 3.5343 - val_loss: 37.9189 - val_mae: 4.3225\n",
      "Epoch 32/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 21.4389 - mae: 3.4645 - val_loss: 36.7250 - val_mae: 4.2243\n",
      "Epoch 33/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 20.7139 - mae: 3.4002 - val_loss: 35.5327 - val_mae: 4.1539\n",
      "Epoch 34/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 19.9783 - mae: 3.3431 - val_loss: 34.5800 - val_mae: 4.0910\n",
      "Epoch 35/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 19.4021 - mae: 3.2885 - val_loss: 33.7553 - val_mae: 4.0205\n",
      "Epoch 36/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 18.9301 - mae: 3.2375 - val_loss: 33.0415 - val_mae: 3.9544\n",
      "Epoch 37/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 18.4104 - mae: 3.1828 - val_loss: 32.3239 - val_mae: 3.9009\n",
      "Epoch 38/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 17.9857 - mae: 3.1459 - val_loss: 31.6894 - val_mae: 3.8518\n",
      "Epoch 39/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 17.6588 - mae: 3.1106 - val_loss: 31.0780 - val_mae: 3.8000\n",
      "Epoch 40/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 17.3427 - mae: 3.0792 - val_loss: 30.5457 - val_mae: 3.7569\n",
      "Epoch 41/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 17.0162 - mae: 3.0503 - val_loss: 30.1496 - val_mae: 3.7181\n",
      "Epoch 42/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 16.7120 - mae: 3.0187 - val_loss: 29.7513 - val_mae: 3.6838\n",
      "Epoch 43/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 16.4279 - mae: 2.9938 - val_loss: 29.4070 - val_mae: 3.6514\n",
      "Epoch 44/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 16.1783 - mae: 2.9697 - val_loss: 29.0259 - val_mae: 3.6150\n",
      "Epoch 45/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 15.9419 - mae: 2.9421 - val_loss: 28.7948 - val_mae: 3.5847\n",
      "Epoch 46/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 15.6981 - mae: 2.9133 - val_loss: 28.4711 - val_mae: 3.5534\n",
      "Epoch 47/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 15.5044 - mae: 2.8925 - val_loss: 28.1070 - val_mae: 3.5273\n",
      "Epoch 48/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 15.2694 - mae: 2.8690 - val_loss: 27.8594 - val_mae: 3.5044\n",
      "Epoch 49/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 15.0517 - mae: 2.8500 - val_loss: 27.5826 - val_mae: 3.4834\n",
      "Epoch 50/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 14.8661 - mae: 2.8299 - val_loss: 27.3810 - val_mae: 3.4608\n",
      "Epoch 51/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 14.6754 - mae: 2.8106 - val_loss: 27.1351 - val_mae: 3.4356\n",
      "Epoch 52/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 14.4912 - mae: 2.7920 - val_loss: 26.9067 - val_mae: 3.4121\n",
      "Epoch 53/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 14.3405 - mae: 2.7686 - val_loss: 26.8178 - val_mae: 3.3868\n",
      "Epoch 54/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 14.1286 - mae: 2.7435 - val_loss: 26.6377 - val_mae: 3.3615\n",
      "Epoch 55/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 13.9774 - mae: 2.7230 - val_loss: 26.3885 - val_mae: 3.3431\n",
      "Epoch 56/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 13.8014 - mae: 2.7073 - val_loss: 26.1536 - val_mae: 3.3235\n",
      "Epoch 57/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 13.6442 - mae: 2.6915 - val_loss: 25.9437 - val_mae: 3.3085\n",
      "Epoch 58/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 13.4798 - mae: 2.6711 - val_loss: 25.8227 - val_mae: 3.2936\n",
      "Epoch 59/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 13.3375 - mae: 2.6561 - val_loss: 25.5403 - val_mae: 3.2797\n",
      "Epoch 60/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 13.1646 - mae: 2.6389 - val_loss: 25.3040 - val_mae: 3.2591\n",
      "Epoch 61/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 13.0748 - mae: 2.6281 - val_loss: 25.0649 - val_mae: 3.2483\n",
      "Epoch 62/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 12.9097 - mae: 2.6099 - val_loss: 24.8692 - val_mae: 3.2287\n",
      "Epoch 63/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.7927 - mae: 2.5962 - val_loss: 24.6877 - val_mae: 3.2024\n",
      "Epoch 64/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.6448 - mae: 2.5775 - val_loss: 24.6033 - val_mae: 3.1888\n",
      "Epoch 65/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.5601 - mae: 2.5681 - val_loss: 24.4614 - val_mae: 3.1845\n",
      "Epoch 66/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.4378 - mae: 2.5489 - val_loss: 24.3597 - val_mae: 3.1714\n",
      "Epoch 67/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.2914 - mae: 2.5363 - val_loss: 24.3144 - val_mae: 3.1672\n",
      "Epoch 68/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 12.2268 - mae: 2.5272 - val_loss: 24.2067 - val_mae: 3.1604\n",
      "Epoch 69/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.1328 - mae: 2.5171 - val_loss: 24.0927 - val_mae: 3.1556\n",
      "Epoch 70/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 12.0345 - mae: 2.5064 - val_loss: 23.7600 - val_mae: 3.1272\n",
      "Epoch 71/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.8894 - mae: 2.4910 - val_loss: 23.6809 - val_mae: 3.1248\n",
      "Epoch 72/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 11.7867 - mae: 2.4790 - val_loss: 23.5989 - val_mae: 3.1176\n",
      "Epoch 73/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.7199 - mae: 2.4694 - val_loss: 23.4622 - val_mae: 3.1069\n",
      "Epoch 74/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.6305 - mae: 2.4602 - val_loss: 23.3607 - val_mae: 3.0900\n",
      "Epoch 75/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.5000 - mae: 2.4448 - val_loss: 23.3404 - val_mae: 3.0870\n",
      "Epoch 76/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 11.4118 - mae: 2.4323 - val_loss: 23.2396 - val_mae: 3.0753\n",
      "Epoch 77/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 11.3358 - mae: 2.4276 - val_loss: 23.1713 - val_mae: 3.0685\n",
      "Epoch 78/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.2447 - mae: 2.4139 - val_loss: 23.0460 - val_mae: 3.0591\n",
      "Epoch 79/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 11.1277 - mae: 2.4033 - val_loss: 22.8155 - val_mae: 3.0469\n",
      "Epoch 80/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 11.0875 - mae: 2.4047 - val_loss: 22.5639 - val_mae: 3.0321\n",
      "Epoch 81/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.9669 - mae: 2.3915 - val_loss: 22.5045 - val_mae: 3.0263\n",
      "Epoch 82/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.8868 - mae: 2.3754 - val_loss: 22.6233 - val_mae: 3.0340\n",
      "Epoch 83/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 10.7857 - mae: 2.3631 - val_loss: 22.5309 - val_mae: 3.0169\n",
      "Epoch 84/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 10.6974 - mae: 2.3533 - val_loss: 22.3661 - val_mae: 3.0013\n",
      "Epoch 85/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.5982 - mae: 2.3432 - val_loss: 22.2434 - val_mae: 2.9866\n",
      "Epoch 86/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.5687 - mae: 2.3449 - val_loss: 22.1012 - val_mae: 2.9791\n",
      "Epoch 87/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.5360 - mae: 2.3413 - val_loss: 22.0196 - val_mae: 2.9687\n",
      "Epoch 88/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.3970 - mae: 2.3217 - val_loss: 22.0581 - val_mae: 2.9761\n",
      "Epoch 89/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.2954 - mae: 2.3126 - val_loss: 21.8274 - val_mae: 2.9600\n",
      "Epoch 90/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 10.2267 - mae: 2.3081 - val_loss: 21.7018 - val_mae: 2.9471\n",
      "Epoch 91/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 10.1843 - mae: 2.3030 - val_loss: 21.5966 - val_mae: 2.9417\n",
      "Epoch 92/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 10.1036 - mae: 2.2911 - val_loss: 21.7203 - val_mae: 2.9480\n",
      "Epoch 93/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 10.0282 - mae: 2.2730 - val_loss: 21.6842 - val_mae: 2.9356\n",
      "Epoch 94/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.9842 - mae: 2.2678 - val_loss: 21.5562 - val_mae: 2.9246\n",
      "Epoch 95/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.9093 - mae: 2.2612 - val_loss: 21.5028 - val_mae: 2.9219\n",
      "Epoch 96/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.8499 - mae: 2.2567 - val_loss: 21.4320 - val_mae: 2.9160\n",
      "Epoch 97/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.8086 - mae: 2.2499 - val_loss: 21.3945 - val_mae: 2.9063\n",
      "Epoch 98/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.7696 - mae: 2.2458 - val_loss: 21.2565 - val_mae: 2.8984\n",
      "Epoch 99/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.7406 - mae: 2.2377 - val_loss: 21.3625 - val_mae: 2.8999\n",
      "Epoch 100/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.6369 - mae: 2.2242 - val_loss: 21.3134 - val_mae: 2.8949\n",
      "Epoch 101/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.6029 - mae: 2.2215 - val_loss: 21.2278 - val_mae: 2.8906\n",
      "Epoch 102/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.5750 - mae: 2.2143 - val_loss: 21.3179 - val_mae: 2.8896\n",
      "Epoch 103/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.5314 - mae: 2.2085 - val_loss: 21.2436 - val_mae: 2.8811\n",
      "Epoch 104/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.4326 - mae: 2.2010 - val_loss: 21.0350 - val_mae: 2.8671\n",
      "Epoch 105/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.3893 - mae: 2.2016 - val_loss: 20.9924 - val_mae: 2.8597\n",
      "Epoch 106/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.3280 - mae: 2.1952 - val_loss: 20.8580 - val_mae: 2.8509\n",
      "Epoch 107/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.3255 - mae: 2.1971 - val_loss: 20.8093 - val_mae: 2.8450\n",
      "Epoch 108/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.2142 - mae: 2.1841 - val_loss: 20.8004 - val_mae: 2.8520\n",
      "Epoch 109/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.1976 - mae: 2.1802 - val_loss: 20.8604 - val_mae: 2.8604\n",
      "Epoch 110/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 9.1432 - mae: 2.1729 - val_loss: 20.9421 - val_mae: 2.8643\n",
      "Epoch 111/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 9.1521 - mae: 2.1696 - val_loss: 20.8257 - val_mae: 2.8497\n",
      "Epoch 112/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 9.0589 - mae: 2.1636 - val_loss: 20.6681 - val_mae: 2.8380\n",
      "Epoch 113/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 9.0253 - mae: 2.1654 - val_loss: 20.5614 - val_mae: 2.8332\n",
      "Epoch 114/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.9722 - mae: 2.1599 - val_loss: 20.5880 - val_mae: 2.8263\n",
      "Epoch 115/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.9277 - mae: 2.1515 - val_loss: 20.5684 - val_mae: 2.8302\n",
      "Epoch 116/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.8687 - mae: 2.1423 - val_loss: 20.5842 - val_mae: 2.8283\n",
      "Epoch 117/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.8257 - mae: 2.1383 - val_loss: 20.5466 - val_mae: 2.8258\n",
      "Epoch 118/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.7804 - mae: 2.1336 - val_loss: 20.4582 - val_mae: 2.8144\n",
      "Epoch 119/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.7471 - mae: 2.1355 - val_loss: 20.4467 - val_mae: 2.8125\n",
      "Epoch 120/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.7329 - mae: 2.1308 - val_loss: 20.4140 - val_mae: 2.8032\n",
      "Epoch 121/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.6656 - mae: 2.1241 - val_loss: 20.3104 - val_mae: 2.8097\n",
      "Epoch 122/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.6253 - mae: 2.1229 - val_loss: 20.3482 - val_mae: 2.8137\n",
      "Epoch 123/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 8.5772 - mae: 2.1172 - val_loss: 20.3098 - val_mae: 2.8180\n",
      "Epoch 124/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.5669 - mae: 2.1159 - val_loss: 20.3578 - val_mae: 2.8192\n",
      "Epoch 125/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.5041 - mae: 2.1074 - val_loss: 20.1621 - val_mae: 2.7998\n",
      "Epoch 126/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 8.4701 - mae: 2.1119 - val_loss: 19.9343 - val_mae: 2.7845\n",
      "Epoch 127/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 8.4578 - mae: 2.1119 - val_loss: 19.9069 - val_mae: 2.7820\n",
      "Epoch 128/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.3897 - mae: 2.0981 - val_loss: 20.1272 - val_mae: 2.8121\n",
      "Epoch 129/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.3440 - mae: 2.0909 - val_loss: 20.1662 - val_mae: 2.8129\n",
      "Epoch 130/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.3249 - mae: 2.0824 - val_loss: 20.1490 - val_mae: 2.8018\n",
      "Epoch 131/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.2701 - mae: 2.0717 - val_loss: 20.0729 - val_mae: 2.7917\n",
      "Epoch 132/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.2683 - mae: 2.0688 - val_loss: 20.0036 - val_mae: 2.7848\n",
      "Epoch 133/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.2173 - mae: 2.0682 - val_loss: 19.8023 - val_mae: 2.7754\n",
      "Epoch 134/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.1760 - mae: 2.0695 - val_loss: 19.8511 - val_mae: 2.7745\n",
      "Epoch 135/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.1243 - mae: 2.0580 - val_loss: 19.9300 - val_mae: 2.7775\n",
      "Epoch 136/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 8.1401 - mae: 2.0555 - val_loss: 20.0757 - val_mae: 2.7987\n",
      "Epoch 137/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 8.1129 - mae: 2.0610 - val_loss: 19.9026 - val_mae: 2.8024\n",
      "Epoch 138/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.0551 - mae: 2.0561 - val_loss: 19.8689 - val_mae: 2.7861\n",
      "Epoch 139/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 8.0218 - mae: 2.0408 - val_loss: 19.9025 - val_mae: 2.7786\n",
      "Epoch 140/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.9866 - mae: 2.0381 - val_loss: 19.9723 - val_mae: 2.8017\n",
      "Epoch 141/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.9749 - mae: 2.0391 - val_loss: 19.8892 - val_mae: 2.7937\n",
      "Epoch 142/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.9219 - mae: 2.0358 - val_loss: 19.8740 - val_mae: 2.7924\n",
      "Epoch 143/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.8797 - mae: 2.0299 - val_loss: 19.7176 - val_mae: 2.7669\n",
      "Epoch 144/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.8551 - mae: 2.0269 - val_loss: 19.6427 - val_mae: 2.7598\n",
      "Epoch 145/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.8322 - mae: 2.0260 - val_loss: 19.6361 - val_mae: 2.7634\n",
      "Epoch 146/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.8123 - mae: 2.0260 - val_loss: 19.6756 - val_mae: 2.7712\n",
      "Epoch 147/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.7597 - mae: 2.0121 - val_loss: 19.6907 - val_mae: 2.7634\n",
      "Epoch 148/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.7210 - mae: 2.0086 - val_loss: 19.6234 - val_mae: 2.7713\n",
      "Epoch 149/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.6857 - mae: 2.0084 - val_loss: 19.6984 - val_mae: 2.7802\n",
      "Epoch 150/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.6634 - mae: 2.0042 - val_loss: 19.7066 - val_mae: 2.7739\n",
      "Epoch 151/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.6387 - mae: 2.0010 - val_loss: 19.6993 - val_mae: 2.7803\n",
      "Epoch 152/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.6078 - mae: 1.9991 - val_loss: 19.6417 - val_mae: 2.7734\n",
      "Epoch 153/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.5730 - mae: 1.9894 - val_loss: 19.5450 - val_mae: 2.7582\n",
      "Epoch 154/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.5542 - mae: 1.9801 - val_loss: 19.5811 - val_mae: 2.7529\n",
      "Epoch 155/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 7.4878 - mae: 1.9707 - val_loss: 19.4655 - val_mae: 2.7515\n",
      "Epoch 156/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 7.4878 - mae: 1.9768 - val_loss: 19.4147 - val_mae: 2.7584\n",
      "Epoch 157/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 7.4492 - mae: 1.9776 - val_loss: 19.3352 - val_mae: 2.7662\n",
      "Epoch 158/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.4615 - mae: 1.9823 - val_loss: 19.2412 - val_mae: 2.7442\n",
      "Epoch 159/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.3595 - mae: 1.9642 - val_loss: 19.4023 - val_mae: 2.7481\n",
      "Epoch 160/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.3724 - mae: 1.9610 - val_loss: 19.5530 - val_mae: 2.7611\n",
      "Epoch 161/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.3436 - mae: 1.9545 - val_loss: 19.4582 - val_mae: 2.7523\n",
      "Epoch 162/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.3189 - mae: 1.9477 - val_loss: 19.4775 - val_mae: 2.7447\n",
      "Epoch 163/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2747 - mae: 1.9450 - val_loss: 19.4603 - val_mae: 2.7581\n",
      "Epoch 164/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2228 - mae: 1.9549 - val_loss: 19.2670 - val_mae: 2.7611\n",
      "Epoch 165/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2314 - mae: 1.9548 - val_loss: 19.2520 - val_mae: 2.7483\n",
      "Epoch 166/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.2117 - mae: 1.9426 - val_loss: 19.2004 - val_mae: 2.7441\n",
      "Epoch 167/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 7.1550 - mae: 1.9476 - val_loss: 19.0752 - val_mae: 2.7578\n",
      "Epoch 168/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.1409 - mae: 1.9559 - val_loss: 19.0185 - val_mae: 2.7455\n",
      "Epoch 169/300\n",
      "6/6 [==============================] - ETA: 0s - loss: 7.6615 - mae: 1.779 - 0s 10ms/step - loss: 7.0932 - mae: 1.9326 - val_loss: 19.2164 - val_mae: 2.7430\n",
      "Epoch 170/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 7.0683 - mae: 1.9110 - val_loss: 19.3233 - val_mae: 2.7347\n",
      "Epoch 171/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 7.0647 - mae: 1.9129 - val_loss: 19.1990 - val_mae: 2.7405\n",
      "Epoch 172/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.9745 - mae: 1.9086 - val_loss: 19.2820 - val_mae: 2.7461\n",
      "Epoch 173/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.9563 - mae: 1.9017 - val_loss: 19.3382 - val_mae: 2.7560\n",
      "Epoch 174/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.9449 - mae: 1.9035 - val_loss: 19.3227 - val_mae: 2.7556\n",
      "Epoch 175/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.9091 - mae: 1.9006 - val_loss: 19.2281 - val_mae: 2.7623\n",
      "Epoch 176/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.8736 - mae: 1.8976 - val_loss: 19.2274 - val_mae: 2.7542\n",
      "Epoch 177/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.8470 - mae: 1.8898 - val_loss: 19.2659 - val_mae: 2.7515\n",
      "Epoch 178/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.8040 - mae: 1.8873 - val_loss: 19.1451 - val_mae: 2.7451\n",
      "Epoch 179/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 6.7924 - mae: 1.8876 - val_loss: 19.1107 - val_mae: 2.7417\n",
      "Epoch 180/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.7441 - mae: 1.8804 - val_loss: 19.2143 - val_mae: 2.7508\n",
      "Epoch 181/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7080 - mae: 1.8728 - val_loss: 19.1626 - val_mae: 2.7529\n",
      "Epoch 182/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.7350 - mae: 1.8782 - val_loss: 19.1612 - val_mae: 2.7511\n",
      "Epoch 183/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.6563 - mae: 1.8690 - val_loss: 19.1032 - val_mae: 2.7439\n",
      "Epoch 184/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.6296 - mae: 1.8658 - val_loss: 19.0958 - val_mae: 2.7608\n",
      "Epoch 185/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.5909 - mae: 1.8632 - val_loss: 19.0688 - val_mae: 2.7484\n",
      "Epoch 186/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.6021 - mae: 1.8556 - val_loss: 19.1417 - val_mae: 2.7399\n",
      "Epoch 187/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.5375 - mae: 1.8417 - val_loss: 19.0969 - val_mae: 2.7395\n",
      "Epoch 188/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.5611 - mae: 1.8436 - val_loss: 19.0854 - val_mae: 2.7336\n",
      "Epoch 189/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.4940 - mae: 1.8428 - val_loss: 18.9322 - val_mae: 2.7458\n",
      "Epoch 190/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 6.4645 - mae: 1.8492 - val_loss: 18.9063 - val_mae: 2.7381\n",
      "Epoch 191/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.4423 - mae: 1.8397 - val_loss: 19.0362 - val_mae: 2.7393\n",
      "Epoch 192/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.4601 - mae: 1.8481 - val_loss: 18.8797 - val_mae: 2.7390\n",
      "Epoch 193/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.3827 - mae: 1.8347 - val_loss: 18.9349 - val_mae: 2.7423\n",
      "Epoch 194/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.3757 - mae: 1.8271 - val_loss: 19.0730 - val_mae: 2.7395\n",
      "Epoch 195/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.3175 - mae: 1.8174 - val_loss: 18.9132 - val_mae: 2.7445\n",
      "Epoch 196/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.3120 - mae: 1.8247 - val_loss: 18.8210 - val_mae: 2.7314\n",
      "Epoch 197/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 6.2719 - mae: 1.8187 - val_loss: 18.8292 - val_mae: 2.7295\n",
      "Epoch 198/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.2253 - mae: 1.8092 - val_loss: 19.0128 - val_mae: 2.7501\n",
      "Epoch 199/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 6.2019 - mae: 1.8083 - val_loss: 18.9922 - val_mae: 2.7514\n",
      "Epoch 200/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.1808 - mae: 1.8072 - val_loss: 18.9124 - val_mae: 2.7500\n",
      "Epoch 201/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 6.1594 - mae: 1.7991 - val_loss: 18.7813 - val_mae: 2.7144\n",
      "Epoch 202/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.1522 - mae: 1.7966 - val_loss: 18.6543 - val_mae: 2.7210\n",
      "Epoch 203/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 6.0981 - mae: 1.7913 - val_loss: 18.8022 - val_mae: 2.7240\n",
      "Epoch 204/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 6.0916 - mae: 1.7847 - val_loss: 18.8857 - val_mae: 2.7271\n",
      "Epoch 205/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.0792 - mae: 1.7932 - val_loss: 18.6455 - val_mae: 2.7281\n",
      "Epoch 206/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 6.0785 - mae: 1.8093 - val_loss: 18.7825 - val_mae: 2.7550\n",
      "Epoch 207/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 5.9944 - mae: 1.7866 - val_loss: 18.8671 - val_mae: 2.7304\n",
      "Epoch 208/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.9620 - mae: 1.7683 - val_loss: 18.7680 - val_mae: 2.7099\n",
      "Epoch 209/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.9570 - mae: 1.7697 - val_loss: 18.7562 - val_mae: 2.7151\n",
      "Epoch 210/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.9310 - mae: 1.7730 - val_loss: 18.7332 - val_mae: 2.7336\n",
      "Epoch 211/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.9078 - mae: 1.7804 - val_loss: 18.7569 - val_mae: 2.7461\n",
      "Epoch 212/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.8545 - mae: 1.7784 - val_loss: 18.8862 - val_mae: 2.7476\n",
      "Epoch 213/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 5.9021 - mae: 1.7673 - val_loss: 18.8736 - val_mae: 2.7144\n",
      "Epoch 214/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.8353 - mae: 1.7473 - val_loss: 18.8011 - val_mae: 2.7242\n",
      "Epoch 215/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.7905 - mae: 1.7548 - val_loss: 18.6077 - val_mae: 2.7215\n",
      "Epoch 216/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.7876 - mae: 1.7655 - val_loss: 18.7235 - val_mae: 2.7508\n",
      "Epoch 217/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.7353 - mae: 1.7644 - val_loss: 18.9081 - val_mae: 2.7696\n",
      "Epoch 218/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.7235 - mae: 1.7456 - val_loss: 19.0258 - val_mae: 2.7425\n",
      "Epoch 219/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.7279 - mae: 1.7380 - val_loss: 18.8861 - val_mae: 2.7267\n",
      "Epoch 220/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.6702 - mae: 1.7317 - val_loss: 18.7684 - val_mae: 2.7244\n",
      "Epoch 221/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.6137 - mae: 1.7454 - val_loss: 18.6038 - val_mae: 2.7518\n",
      "Epoch 222/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.6659 - mae: 1.7670 - val_loss: 18.5753 - val_mae: 2.7451\n",
      "Epoch 223/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.5822 - mae: 1.7375 - val_loss: 18.8025 - val_mae: 2.7404\n",
      "Epoch 224/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.6089 - mae: 1.7267 - val_loss: 18.8785 - val_mae: 2.7220\n",
      "Epoch 225/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.5623 - mae: 1.7220 - val_loss: 18.8167 - val_mae: 2.7337\n",
      "Epoch 226/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.5228 - mae: 1.7220 - val_loss: 18.5479 - val_mae: 2.7337\n",
      "Epoch 227/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 5.4832 - mae: 1.7251 - val_loss: 18.6764 - val_mae: 2.7415\n",
      "Epoch 228/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.4507 - mae: 1.7145 - val_loss: 18.6637 - val_mae: 2.7323\n",
      "Epoch 229/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 5.4344 - mae: 1.7103 - val_loss: 18.7070 - val_mae: 2.7364\n",
      "Epoch 230/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 5.3945 - mae: 1.7072 - val_loss: 18.6166 - val_mae: 2.7400\n",
      "Epoch 231/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 5.3905 - mae: 1.7124 - val_loss: 18.6748 - val_mae: 2.7337\n",
      "Epoch 232/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 5.3594 - mae: 1.7106 - val_loss: 18.6552 - val_mae: 2.7376\n",
      "Epoch 233/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.3105 - mae: 1.7018 - val_loss: 18.7035 - val_mae: 2.7331\n",
      "Epoch 234/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 5.2989 - mae: 1.6895 - val_loss: 18.6984 - val_mae: 2.7163\n",
      "Epoch 235/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 5.3538 - mae: 1.6932 - val_loss: 18.5984 - val_mae: 2.7119\n",
      "Epoch 236/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 5.2676 - mae: 1.7009 - val_loss: 18.6697 - val_mae: 2.7580\n",
      "Epoch 237/300\n",
      "6/6 [==============================] - 0s 34ms/step - loss: 5.2337 - mae: 1.6979 - val_loss: 18.7008 - val_mae: 2.7488\n",
      "Epoch 238/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.2492 - mae: 1.6906 - val_loss: 18.7914 - val_mae: 2.7550\n",
      "Epoch 239/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 5.2251 - mae: 1.6777 - val_loss: 18.7537 - val_mae: 2.7307\n",
      "Epoch 240/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.1681 - mae: 1.6768 - val_loss: 18.5101 - val_mae: 2.7244\n",
      "Epoch 241/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 5.1851 - mae: 1.6898 - val_loss: 18.5711 - val_mae: 2.7327\n",
      "Epoch 242/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 5.1391 - mae: 1.6737 - val_loss: 18.5418 - val_mae: 2.7057\n",
      "Epoch 243/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 5.1323 - mae: 1.6773 - val_loss: 18.3755 - val_mae: 2.7152\n",
      "Epoch 244/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 5.0519 - mae: 1.6772 - val_loss: 18.4888 - val_mae: 2.7240\n",
      "Epoch 245/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 5.0952 - mae: 1.6705 - val_loss: 18.7540 - val_mae: 2.7323\n",
      "Epoch 246/300\n",
      "6/6 [==============================] - 0s 7ms/step - loss: 5.0681 - mae: 1.6604 - val_loss: 18.6965 - val_mae: 2.7151\n",
      "Epoch 247/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 5.0149 - mae: 1.6513 - val_loss: 18.4413 - val_mae: 2.7012\n",
      "Epoch 248/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 4.9766 - mae: 1.6594 - val_loss: 18.5484 - val_mae: 2.7354\n",
      "Epoch 249/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 4.9576 - mae: 1.6610 - val_loss: 18.5237 - val_mae: 2.7273\n",
      "Epoch 250/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 4.9146 - mae: 1.6451 - val_loss: 18.5404 - val_mae: 2.7227\n",
      "Epoch 251/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 4.9190 - mae: 1.6407 - val_loss: 18.5489 - val_mae: 2.7048\n",
      "Epoch 252/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.8646 - mae: 1.6356 - val_loss: 18.4010 - val_mae: 2.7015\n",
      "Epoch 253/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 4.8576 - mae: 1.6432 - val_loss: 18.3306 - val_mae: 2.6992\n",
      "Epoch 254/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.8304 - mae: 1.6428 - val_loss: 18.5078 - val_mae: 2.7257\n",
      "Epoch 255/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.7792 - mae: 1.6388 - val_loss: 18.3857 - val_mae: 2.7122\n",
      "Epoch 256/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 4.7814 - mae: 1.6410 - val_loss: 18.3853 - val_mae: 2.7082\n",
      "Epoch 257/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 4.7649 - mae: 1.6320 - val_loss: 18.3871 - val_mae: 2.6999\n",
      "Epoch 258/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 4.7195 - mae: 1.6217 - val_loss: 18.3929 - val_mae: 2.7094\n",
      "Epoch 259/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.7064 - mae: 1.6139 - val_loss: 18.4383 - val_mae: 2.7031\n",
      "Epoch 260/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.6844 - mae: 1.6170 - val_loss: 18.3114 - val_mae: 2.7181\n",
      "Epoch 261/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.6399 - mae: 1.6220 - val_loss: 18.2808 - val_mae: 2.6995\n",
      "Epoch 262/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.6340 - mae: 1.6121 - val_loss: 18.3230 - val_mae: 2.6871\n",
      "Epoch 263/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.6061 - mae: 1.6057 - val_loss: 18.3496 - val_mae: 2.6906\n",
      "Epoch 264/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.5749 - mae: 1.6004 - val_loss: 18.3799 - val_mae: 2.7043\n",
      "Epoch 265/300\n",
      "6/6 [==============================] - 0s 48ms/step - loss: 4.5711 - mae: 1.6068 - val_loss: 18.3317 - val_mae: 2.7131\n",
      "Epoch 266/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 4.5505 - mae: 1.6062 - val_loss: 18.3574 - val_mae: 2.7112\n",
      "Epoch 267/300\n",
      "6/6 [==============================] - 0s 24ms/step - loss: 4.4976 - mae: 1.5948 - val_loss: 18.2836 - val_mae: 2.6900\n",
      "Epoch 268/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 4.4624 - mae: 1.5850 - val_loss: 18.2879 - val_mae: 2.7042\n",
      "Epoch 269/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 4.4508 - mae: 1.5896 - val_loss: 18.2707 - val_mae: 2.6980\n",
      "Epoch 270/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 4.4345 - mae: 1.5894 - val_loss: 18.2027 - val_mae: 2.7045\n",
      "Epoch 271/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 4.4448 - mae: 1.5878 - val_loss: 18.3315 - val_mae: 2.7012\n",
      "Epoch 272/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.3775 - mae: 1.5734 - val_loss: 18.1736 - val_mae: 2.6938\n",
      "Epoch 273/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.3479 - mae: 1.5766 - val_loss: 18.2080 - val_mae: 2.6938\n",
      "Epoch 274/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.3320 - mae: 1.5738 - val_loss: 18.1534 - val_mae: 2.6834\n",
      "Epoch 275/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.3486 - mae: 1.5834 - val_loss: 18.1672 - val_mae: 2.7021\n",
      "Epoch 276/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.2887 - mae: 1.5675 - val_loss: 18.3042 - val_mae: 2.7055\n",
      "Epoch 277/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.2706 - mae: 1.5559 - val_loss: 18.1381 - val_mae: 2.6782\n",
      "Epoch 278/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.2175 - mae: 1.5496 - val_loss: 18.0040 - val_mae: 2.6756\n",
      "Epoch 279/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 4.2435 - mae: 1.5720 - val_loss: 18.1280 - val_mae: 2.6987\n",
      "Epoch 280/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.1889 - mae: 1.5519 - val_loss: 18.1853 - val_mae: 2.6807\n",
      "Epoch 281/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.1716 - mae: 1.5344 - val_loss: 18.1466 - val_mae: 2.6632\n",
      "Epoch 282/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.1372 - mae: 1.5327 - val_loss: 18.0675 - val_mae: 2.6738\n",
      "Epoch 283/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 4.1108 - mae: 1.5373 - val_loss: 18.1374 - val_mae: 2.6912\n",
      "Epoch 284/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.1216 - mae: 1.5369 - val_loss: 18.4426 - val_mae: 2.7188\n",
      "Epoch 285/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 4.0903 - mae: 1.5339 - val_loss: 18.1874 - val_mae: 2.7066\n",
      "Epoch 286/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.0743 - mae: 1.5315 - val_loss: 18.1356 - val_mae: 2.6701\n",
      "Epoch 287/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 4.0264 - mae: 1.5245 - val_loss: 17.9914 - val_mae: 2.6744\n",
      "Epoch 288/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 4.0126 - mae: 1.5337 - val_loss: 18.2423 - val_mae: 2.7070\n",
      "Epoch 289/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 4.0030 - mae: 1.5196 - val_loss: 18.1876 - val_mae: 2.6691\n",
      "Epoch 290/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.9926 - mae: 1.5192 - val_loss: 18.1153 - val_mae: 2.6931\n",
      "Epoch 291/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.9301 - mae: 1.5089 - val_loss: 18.2389 - val_mae: 2.6813\n",
      "Epoch 292/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.9268 - mae: 1.5035 - val_loss: 18.2129 - val_mae: 2.6833\n",
      "Epoch 293/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.8987 - mae: 1.5029 - val_loss: 18.2007 - val_mae: 2.7001\n",
      "Epoch 294/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 3.8713 - mae: 1.4996 - val_loss: 18.0327 - val_mae: 2.6686\n",
      "Epoch 295/300\n",
      "6/6 [==============================] - 0s 43ms/step - loss: 3.8410 - mae: 1.4913 - val_loss: 18.0195 - val_mae: 2.6568\n",
      "Epoch 296/300\n",
      "6/6 [==============================] - 0s 26ms/step - loss: 3.8201 - mae: 1.4842 - val_loss: 18.1172 - val_mae: 2.6667\n",
      "Epoch 297/300\n",
      "6/6 [==============================] - 0s 22ms/step - loss: 3.8044 - mae: 1.4879 - val_loss: 18.1242 - val_mae: 2.6818\n",
      "Epoch 298/300\n",
      "6/6 [==============================] - 0s 9ms/step - loss: 3.7793 - mae: 1.4813 - val_loss: 18.0653 - val_mae: 2.6649\n",
      "Epoch 299/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 3.7509 - mae: 1.4740 - val_loss: 18.0327 - val_mae: 2.6553\n",
      "Epoch 300/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 3.7479 - mae: 1.4794 - val_loss: 18.0739 - val_mae: 2.6791\n",
      "4/4 [==============================] - 0s 4ms/step - loss: 11.7337 - mae: 2.4903\n"
     ]
    }
   ],
   "source": [
    "#k번 리핏\n",
    "for train_index, val_index in kfold.split(x_train):\n",
    "    #무작위 생성 소댓 과적합 방지\n",
    "    x_train_fold, x_val_fold = x_train[train_index], x_train[val_index]\n",
    "    y_train_fold, y_val_fold = y_train[train_index], y_train[val_index]\n",
    "    \n",
    "    model=get_model()\n",
    "    \n",
    "    model.fit(x_train_fold, y_train_fold,\n",
    "                   epochs=300, validation_data=(x_val_fold, y_val_fold))\n",
    "    \n",
    "    _,test_mae=model.evaluate(x_test, y_test)\n",
    "    mae_list.append(test_mae)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "15704a34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[2.4837419986724854, 2.3832342624664307, 2.4903430938720703]\n",
      "2.452439785003662\n"
     ]
    }
   ],
   "source": [
    "print(mae_list)\n",
    "print(np.mean(mae_list))\n",
    "\n",
    "#값이 적어짐= 좋은 성능을 보여줌\n",
    "#최종성능 : 2.45"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4866dbcf",
   "metadata": {},
   "source": [
    "- 이진 분류   : 시그모이드 함수+binary_crossentropy\n",
    "- 다중 분류   : 소프트맥스 함수+categorical_crossentropy\n",
    "- 회귀 문제   : 항등     함수+mae\n",
    "- 다중 레이블 : 시그모이드 함수+binary_crossentropy"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
